import { EventEmitter } from '@angular/core';
import { PoLookupColumn, PoLookupComponent } from '@po-ui/ng-components';
import { ProCompany } from './../../../services/pro-tenant/pro-company/models/pro-company';
import { ProCompanyLookupService } from './pro-company-lookup.service';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * Componente que disponibiliza um campo para lookup para grupo de empresa.
 * O nome do field no formulário será company_code
 */
export declare class ProCompanyLookupComponent {
    service: ProCompanyLookupService;
    /** Formulário pai do componente. Para formulários template-driven passe o ngModel.  */
    parent: any;
    companySetted: EventEmitter<ProCompany>;
    branchSetted: EventEmitter<void>;
    pLabel?: string;
    pHint?: string;
    columns?: Array<PoLookupColumn>;
    lookup: PoLookupComponent;
    private started;
    firstPass: boolean;
    /**
     * @description Construtor da classe
     * @param service Serviço de Lookup do grupo de empresas
     */
    constructor(service: ProCompanyLookupService);
    fieldFormat(value: ProCompany): string;
    setCompanyFocus(): void;
    setStarted(started: boolean): void;
    /**
     * @description Efetua o set do grupo de empresas para o serviço, atualiza o parent e disparada o evento
     * @param company Objeto do grupo de empresas
     */
    setCompany(company: ProCompany): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProCompanyLookupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProCompanyLookupComponent, "pro-company-lookup", never, { "parent": { "alias": "parent"; "required": false; }; "pLabel": { "alias": "p-label"; "required": false; }; "pHint": { "alias": "p-hint"; "required": false; }; "columns": { "alias": "pro-columns"; "required": false; }; }, { "companySetted": "companySetted"; "branchSetted": "branchSetted"; }, never, never, false, never>;
}
