import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Injector } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * Interceptor que pega a requisição html e insere no header do idioma.
 */
export declare class ProSystemIdiomInteceptor implements HttpInterceptor {
    private injector;
    constructor(injector: Injector);
    /**
     * @description Intercept http para tratamento do módulo do Protheus nas requisições
     * @param original_request Requisição http
     * @param next Handler da requisição http
     * @returns Observable da requisição http com o header do módulo caso o ERP seja Protheus
     */
    intercept(original_request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    /**
     * @description Efetua a validação e adição do header de idioma
     * @param request Requisição HTTP Original
     * @returns HttpRequest, podendo ser alterada com a inclusão do idioma conforme o Protheus
     */
    private appendLanguageToRequest;
    /**
     * @description Retorna o idioma presente no storage do navegador
     * @returns string contendo o valor de idioma do Protheus
     */
    private getLanguage;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProSystemIdiomInteceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProSystemIdiomInteceptor>;
}
