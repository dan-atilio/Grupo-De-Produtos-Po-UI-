import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ProAdapterBaseV2 } from '../../interfaces/pro-adapter-base-v2/pro-adapter-base-v2.interface';
import { ProAdapterListInterface, ProAdapterQueryInterface } from '../../interfaces/pro-generic-adapter/pro-generic-adapter.interface';
import * as i0 from "@angular/core";
export declare class ProGenericAdapterService {
    private http;
    private readonly URL_LIST;
    private readonly URL_QUERY;
    constructor(http: HttpClient);
    /**
     * Metodo para devolver uma listagem de registro baseado na api genericList
     * @param searchParams parametros da interface ProAdapterListInterface a ser enviado
     * para api genericList
     * @returns Observable de ProAdapterBaseV2 a ser utilizado em um po-table
     */
    list<T>(searchParams: ProAdapterListInterface): Observable<ProAdapterBaseV2<T>>;
    /**
     * Metodo para devolver uma listagem de registro baseado na api genericQuery
     * @param searchParams parametros da interface ProAdapterQueryInterface a ser enviado
     * para api genericQuery
     * @returns Observable de ProAdapterBaseV2 a ser utilizado em um po-table
     */
    query<T>(searchParams: ProAdapterQueryInterface): Observable<ProAdapterBaseV2<T>>;
    /**
     * converte uma interface para httpParams
     * cada propriedade vira um parametro http
     * @param searchParams parametro a ser convetido
     * @returns httpParams a ser utilizado em uma requisição
     */
    private convertSearchParamsToHttpParams;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProGenericAdapterService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProGenericAdapterService>;
}
