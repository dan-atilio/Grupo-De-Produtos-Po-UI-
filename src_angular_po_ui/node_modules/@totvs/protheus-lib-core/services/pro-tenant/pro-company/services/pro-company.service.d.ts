import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ProJsToAdvplService } from '../../../pro-js-to-advpl';
import { ProCompany, ProCompanyList } from '../models/pro-company';
import * as i0 from "@angular/core";
export declare class ProCompanyService {
    private http;
    private advplService;
    private url;
    private useHTTP;
    readonly EVENT_GET_LIST_ID = "getCompaniesList";
    readonly EVENT_SET_LIST_ID = "setCompaniesList";
    readonly EVENT_GET_ONE_ID = "getCompanyInfo";
    readonly EVENT_SET_ONE_ID = "setCompanyInfo";
    constructor(http: HttpClient, advplService: ProJsToAdvplService);
    getListOfCompanies(CorporateName?: string, page?: number, _pageSize?: number): Observable<ProCompanyList>;
    /**
     * @description Retorna as empresas do usuário
     * @param corporateName string, nome da empresa
     * @param page number, número da página
     * @param pageSize number, número de registros da página
     * @returns ProCompanyList, lista de empresas do usuário
     */
    getUserCompanies(corporateName?: string, page?: number, pageSize?: number): Observable<ProCompanyList>;
    private getListOfCompaniesFromApi;
    private getListOfCompaniesFromAdvpl;
    getCompany(company: string): Observable<ProCompany>;
    private getCompanyFromApi;
    private getCompanyFromAdvpl;
    get company(): ProCompany;
    set company(company: ProCompany);
    private advplNotPrepared;
    isChannelHTTP(): boolean;
    setChannelAsHTTP(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProCompanyService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProCompanyService>;
}
