import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ProUserAccessInterface } from '../../../../../../interfaces/pro-user-access/pro-user-access.interface';
import * as i0 from "@angular/core";
export declare class ProUserAccessService {
    private http;
    private readonly URL_ALIAS;
    private readonly URL_FUNCTION;
    constructor(http: HttpClient);
    /**
     * efetua um get na api referente a função MpUserHasAccess do protheus
     * a api utiliza o usuário logado para efetuar a busca
     * @param cRotina Nome da rotina a ser pesquisada
     * @param nOpc parametro opcional, numero da rotina no menudef a ser pesquisada
     * caso não seja passada a pesquisa será com base apenas na função
     * @returns Observable com o retorno da api
     */
    userHasAccess(cRotina: string, nOpc?: number): Observable<ProUserAccessInterface>;
    /**
     * efetua um get na api referente a função FWChkTblAccess do protheus
     * a api utiliza o usuário logado para efetuar a busca
     * @param cTabela Tabela a ser pesquisada
     * @param nOpc parametro opcional, numero da rotina no menudef a ser pesquisada
     * caso não seja passada a pesquisa será com base apenas na função
     * @returns Observable com o retorno da api
     */
    aliasHasAccess(cTabela: string, nOpc?: number): Observable<ProUserAccessInterface>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProUserAccessService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProUserAccessService>;
}
