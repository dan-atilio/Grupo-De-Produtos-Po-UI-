import { ProUserInfoService } from './../../pro-authorization/services/pro-user-info/pro-user-info.service';
import { Observable } from 'rxjs';
import { ProAuthService, ProUserInfo } from "../../pro-authorization";
import { ProThreadInfo } from "../models/pro-thread-info";
import * as i0 from "@angular/core";
/***
 * @description Classe com métodos para recuperar informações da thread do Protheus, thread a qual abriu o app via FWCallApp
 */
export declare class ProThreadInfoService {
    private proAuthService;
    private proUserInfoService;
    constructor(proAuthService: ProAuthService, proUserInfoService: ProUserInfoService);
    /**
     * @description Retorna um objeto contendo informações do usuário logado no app e na thread do Protheus
     * @returns ProThreadInfo = {userId, userName}
     * userId = ID do usuário
     * userName = Nome (login) do usuário
     */
    get proThreadInfo(): ProThreadInfo;
    /**
     * @description Recupera o ID do usuário logado no app e no Protheus
     * @returns ID do usuário
     */
    get userId(): string | null;
    /**
     * @description Recupera o nome (login) do usuário logado no app e no Protheus
     * @returns Nome do usuário (login)
     */
    get userName(): string | null;
    /**
     * @description Retorna informações do usuário logado (id, nome de usuário, nome e emails)
     * @returns ProUserInfo = {id, userName, displayName, emails}
     */
    getUserInfoThread(): Observable<ProUserInfo>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProThreadInfoService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProThreadInfoService>;
}
