import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ProJsToAdvplService } from '../../pro-js-to-advpl';
import { ProAppConfigService } from '../../pro-app-config/services/pro-app-config.service';
import { ProI18N } from '../../pro-i18n';
import * as i0 from "@angular/core";
/**
 * @description Classe para consumo de traduções de resource presentes no RPO do Protheus
 */
export declare class ProTranslateStringService {
    private http;
    private advplService;
    private proAppConfigService;
    private url;
    private useHTTP;
    private EVENT_GET_TRANSLATES;
    private EVENT_SET_TRANSLATES;
    /**
     * @description Construtor da classe
     * @param http Objeto HttpClient para efetuar as requisições REST
     * @param advplService Serviço ProJsToAdvplService para comunicação via jsToAdvpl
     * @param proAppConfigService Serviço ProAppConfigService para verificação de estado (Advpl/Http)
     */
    constructor(http: HttpClient, advplService: ProJsToAdvplService, proAppConfigService: ProAppConfigService);
    /**
     * @description Retorna todas as string de um resource de tradução do Protheus
     * @param cTRES string contendo o nome do resource (CH)
     * @returns Retorna um json que pode conter nenhuma ou várias chaves de string, normalmente enumeradas de str0001 até str9999
     */
    getStrList(cTRES: string): Observable<ProI18N>;
    /**
     * @description Retorna as traduções do resource via ADVPL (jstoadvpl)
     * @returns Observable das traduções do resource do Protheus
     */
    private getAdvplLanguages;
    /**
     * @description Retorna um erro da conexão jstoadvpl
     * @returns Observable de exceção
     */
    private advplNotPrepared;
    /**
     * @description Indica o consumo de API via HTTP ou jstoadvpl
     * @returns Informa se a classe fará a requisição via HTTP
     */
    isChannelHTTP(): boolean;
    /**
     * @description Permite dizer se a requisição será efetuada via HTTP ou jstoadvpl, sempre usar como HTTP, apenas pequenas exceções como jstoadvpl
     * @param value Uso de HTTP para requisição
     */
    setChannelAsHTTP(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProTranslateStringService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProTranslateStringService>;
}
