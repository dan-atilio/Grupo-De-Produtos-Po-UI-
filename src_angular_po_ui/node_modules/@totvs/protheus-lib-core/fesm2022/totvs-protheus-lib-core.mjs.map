{"version":3,"file":"totvs-protheus-lib-core.mjs","sources":["../../../projects/protheus-lib-core/src/environments/environment.ts","../../../projects/protheus-lib-core/src/util/util.ts","../../../projects/protheus-lib-core/src/services/pro-js-to-advpl/services/pro-js-to-advpl.service.ts","../../../projects/protheus-lib-core/src/services/pro-js-to-advpl/pro-js-to-advpl.module.ts","../../../projects/protheus-lib-core/src/services/pro-tenant/pro-company/services/pro-company.service.ts","../../../projects/protheus-lib-core/src/services/pro-tenant/pro-branch/services/pro-branch.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-branch-lookup/pro-branch-lookup.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-branch-lookup/pro-branch-lookup.component.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-branch-lookup/pro-branch-lookup.component.html","../../../projects/protheus-lib-core/src/components/pro-fields/pro-branch-lookup/pro-branch-lookup.module.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-company-lookup/pro-company-lookup.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-company-lookup/pro-company-lookup.component.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-company-lookup/pro-company-lookup.component.html","../../../projects/protheus-lib-core/src/components/pro-fields/pro-company-lookup/pro-company-lookup.module.ts","../../../projects/protheus-lib-core/src/services/pro-role/pro-role-modules/services/pro-role.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-role-lookup/pro-role-lookup.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-role-lookup/pro-role-lookup.component.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-role-lookup/pro-role-lookup.component.html","../../../projects/protheus-lib-core/src/components/pro-fields/pro-role-lookup/pro-role-lookup.module.ts","../../../projects/protheus-lib-core/src/services/pro-system-info/pro-system-modules/services/pro-system-modules.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-system-module-lookup/pro-system-module-lookup.service.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-system-module-lookup/pro-system-module-lookup.component.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-system-module-lookup/pro-system-module-lookup.component.html","../../../projects/protheus-lib-core/src/components/pro-fields/pro-system-module-lookup/pro-system-module-lookup.module.ts","../../../projects/protheus-lib-core/src/components/pro-fields/pro-fields.module.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-home/pro-home.component.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-home/pro-home.component.html","../../../projects/protheus-lib-core/src/components/pro-pages/pro-home/pro-home.module.ts","../../../projects/protheus-lib-core/src/services/pro-authorization/services/pro-user-info/pro-user-info.service.ts","../../../projects/protheus-lib-core/src/services/pro-authorization/services/pro-auth/pro-auth.service.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-login/guards/pro-login-defaults/pro-login-defaults.resolver.ts","../../../projects/protheus-lib-core/src/services/pro-messages/services/pro-message.service.ts","../../../projects/protheus-lib-core/src/services/pro-theme/constants/pro-theme.constants.ts","../../../projects/protheus-lib-core/src/services/pro-theme/models/pro-theme.ts","../../../projects/protheus-lib-core/src/services/pro-theme/services/pro-theme.service.ts","../../../projects/protheus-lib-core/src/services/pro-app-config/services/pro-app-config.service.ts","../../../projects/protheus-lib-core/src/services/pro-language/services/pro-language.service.ts","../../../projects/protheus-lib-core/src/services/pro-brand/services/pro-brand.service.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-login/pro-login.component.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-login/pro-login.component.html","../../../projects/protheus-lib-core/src/components/pro-pages/pro-login/pro-login.module.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-page-background/pro-page-background.component.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-page-background/pro-page-background.component.html","../../../projects/protheus-lib-core/src/components/pro-pages/pro-page-background/pro-page-background.module.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-session-settings/services/pro-session-settings.service.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-session-settings/guards/pro-session-settings-defaults/pro-session-settings-defaults.resolver.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-session-settings/guards/pro-session-settings-user-info/pro-session-settings-user-info.resolver.ts","../../../projects/protheus-lib-core/src/services/pro-translate-string/services/pro-translate-string.service.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-session-settings/pro-session-settings.component.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-session-settings/pro-session-settings.component.html","../../../projects/protheus-lib-core/src/components/pro-pages/pro-session-settings/pro-session-settings.module.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-login.literals-EnUS.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-login.literals-EsES.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-login.literals-PtBR.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-login.literals-RuRU.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-session-settings.literals-enUS.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-session-settings.literals-esES.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-session-settings.literals-ptBR.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-session-settings.literals-ruRU.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-user-profile-EnUS.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-user-profile-EsES.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-user-profile-PtBR.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/i18n/pro-user-profile-RuRU.ts","../../../projects/protheus-lib-core/src/services/pro-i18nConfig/pro-i18nConfig.module.ts","../../../projects/protheus-lib-core/src/components/pro-pages/pro-pages.module.ts","../../../projects/protheus-lib-core/src/components/pro-components.module.ts","../../../projects/protheus-lib-core/src/services/pro-app-config/interceptors/pro-app-config.inteceptor.ts","../../../projects/protheus-lib-core/src/services/pro-app-config/pro-app-config.module.ts","../../../projects/protheus-lib-core/src/services/pro-authorization/guards/pro-auth.guard.ts","../../../projects/protheus-lib-core/src/services/pro-authorization/interceptors/pro-auth.inteceptor.ts","../../../projects/protheus-lib-core/src/services/pro-authorization/pro-authorization.module.ts","../../../projects/protheus-lib-core/src/services/pro-authorization/services/pro-user-info/services/pro-user-access/pro-user-access.service.ts","../../../projects/protheus-lib-core/src/services/pro-messages/pro-messages.module.ts","../../../projects/protheus-lib-core/src/services/pro-brand/pro-brand.module.ts","../../../projects/protheus-lib-core/src/services/pro-language/interceptors/pro-system-idiom.inteceptor.ts","../../../projects/protheus-lib-core/src/services/pro-language/pro-language.module.ts","../../../projects/protheus-lib-core/src/services/pro-system-info/pro-system-modules/interceptors/pro-system-modules.inteceptor.ts","../../../projects/protheus-lib-core/src/services/pro-system-info/pro-system-database/interceptors/pro-system-database.interceptor.ts","../../../projects/protheus-lib-core/src/services/pro-system-info/pro-system-info.module.ts","../../../projects/protheus-lib-core/src/services/pro-tenant/interceptors/pro-tenant.inteceptor.ts","../../../projects/protheus-lib-core/src/services/pro-tenant/pro-tenant.module.ts","../../../projects/protheus-lib-core/src/services/pro-theme/pro-theme.module.ts","../../../projects/protheus-lib-core/src/services/pro-thread-info/services/pro-thread-info.service.ts","../../../projects/protheus-lib-core/src/services/pro-thread-info/pro-thread-info.module.ts","../../../projects/protheus-lib-core/src/services/pro-translate-string/pro-translate-string.module.ts","../../../projects/protheus-lib-core/src/services/pro-user-profile/pro-user-profile.module.ts","../../../projects/protheus-lib-core/src/services/pro-services.module.ts","../../../projects/protheus-lib-core/src/services/pro-adapter-base-v2/pro-adapter-base-v2.service.ts","../../../projects/protheus-lib-core/src/services/pro-user-profile/pro-user-profile.service.ts","../../../projects/protheus-lib-core/src/services/pro-generic-adapter/pro-generic-adapter.service.ts","../../../projects/protheus-lib-core/src/services/pro-i18n/services/pro-i18n.service.ts","../../../projects/protheus-lib-core/src/protheus-lib-core.module.ts","../../../projects/protheus-lib-core/src/totvs-protheus-lib-core.ts"],"sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  useHTTP: false // Alterar apenas para DESENVOLVIMENTO!\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","export function valueIsNull(value: any): boolean {\r\n  return value === null || value === undefined;\r\n}\r\n\r\nexport function convertToBoolean(val: any): boolean {\r\n  if (typeof val === 'string') {\r\n    val = val.toLowerCase().trim();\r\n    return val === 'true' || val === 'on' || val === '';\r\n  }\r\n\r\n  if (typeof val === 'number') {\r\n    return val === 1;\r\n  }\r\n\r\n  return !!val;\r\n}\r\n\r\nexport function isTypeof(object: any, type: any) {\r\n  return typeof object === type;\r\n}\r\n\r\nexport function isExternalLink(url): boolean {\r\n  return url ? url.startsWith('http') : false;\r\n}\r\n\r\nexport function generateRandomId(): number {\r\n  return Math.floor(Math.random() * 100000 * new Date().getMilliseconds());\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProJsToAdvpl } from '..';\r\nimport { generateRandomId, valueIsNull } from '../../../util';\r\n\r\ndeclare var dialog: any;\r\ndeclare var twebchannel: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProJsToAdvplService {\r\n  constructor() { }\r\n\r\n  hasDialog(): boolean {\r\n    return (\r\n      typeof dialog !== 'undefined' && typeof dialog.jsToAdvpl === 'function'\r\n    );\r\n  }\r\n\r\n  hasWebChannel(): boolean {\r\n    return (\r\n      typeof twebchannel !== 'undefined' &&\r\n      typeof twebchannel.jsToAdvpl === 'function'\r\n    );\r\n  }\r\n\r\n  getWebChannel() {\r\n    if (this.hasWebChannel()) {\r\n      return twebchannel;\r\n    }\r\n    if (this.hasDialog()) {\r\n      return dialog;\r\n    }\r\n  }\r\n\r\n  jsToAdvpl(type: string, content: string): boolean {\r\n    const webChannel = this.getWebChannel();\r\n    if (valueIsNull(webChannel)) {\r\n      return false;\r\n    } else {\r\n      webChannel.jsToAdvpl(type, content);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Método responsável por fechar app na camada advpl\r\n   *\r\n   * @param {string} value Valor que será enviado a camada advpl, sendo vazia ou force\r\n   */\r\n  AdvplCloseApp(value: string = ''): void {\r\n    this.jsToAdvpl('close', value);\r\n  }\r\n\r\n  buildListener(id: string, callBack): void {\r\n    const webChannel = this.getWebChannel();\r\n    if (webChannel && webChannel['eventTarget']) {\r\n      webChannel['eventTarget'].addEventListener(id, callBack);\r\n    }\r\n  }\r\n\r\n  buildObservable<T>(callBack, options: ProJsToAdvpl) {\r\n    if (!options.receiveId && options.sendInfo && !options.sendInfo.content) {\r\n      options.receiveId = options.sendInfo.type + '-' + this.generateEventId();\r\n    }\r\n    const buildedObservable = new Observable<T>(subscriber => {\r\n      const webChannel = this.getWebChannel();\r\n      webChannel[options.receiveId] = {};\r\n      webChannel[options.receiveId]['subscriber'] = subscriber;\r\n\r\n      if (options.autoDestruct) {\r\n        webChannel[options.receiveId]['autoDestruct'] = this.buildAutoDestruct(\r\n          options.receiveId,\r\n          callBack\r\n        );\r\n        webChannel['eventTarget'].addEventListener(\r\n          options.receiveId,\r\n          webChannel[options.receiveId]['autoDestruct']\r\n        );\r\n      } else {\r\n        webChannel['eventTarget'].addEventListener(options.receiveId, callBack);\r\n      }\r\n    });\r\n    if (options.sendInfo) {\r\n      this.connectedJsToAdvpl(\r\n        options.sendInfo.type,\r\n        options.sendInfo.content ? options.sendInfo.content : options.receiveId\r\n      );\r\n    }\r\n    return buildedObservable;\r\n  }\r\n\r\n  /**\r\n   * @description Remove e apaga o evento\r\n   * @param id ID do evento\r\n   * @param callBack callback do evento\r\n   * @returns\r\n   */\r\n  private buildAutoDestruct(id, callBack) {\r\n    return ({ protheusResponse, subscriber }) => {\r\n      const webChannel = this.getWebChannel();\r\n      callBack({ protheusResponse, subscriber });\r\n\r\n      if (webChannel[id]) {\r\n        webChannel['eventTarget'].removeEventListener(\r\n          id,\r\n          webChannel[id]['autoDestruct']\r\n        );\r\n        delete webChannel[id];\r\n      }\r\n    };\r\n  }\r\n\r\n  protheusConnected(): boolean {\r\n    const webChannel = this.getWebChannel();\r\n    return !valueIsNull(webChannel) && webChannel['gotConnection'];\r\n  }\r\n\r\n  connectedJsToAdvpl(\r\n    type: string,\r\n    value: string,\r\n    retryCounter: number = 99,\r\n    timeout: number = 50\r\n  ): void {\r\n    if (this.protheusConnected()) {\r\n      this.jsToAdvpl(type, value);\r\n    } else {\r\n      if (retryCounter > 0) {\r\n        retryCounter--;\r\n        setTimeout(() => {\r\n          this.connectedJsToAdvpl(type, value, retryCounter, timeout);\r\n        }, timeout);\r\n      } else {\r\n        console.log('jsToAdvpl type ' + type + ' not executed!');\r\n      }\r\n    }\r\n  }\r\n\r\n  generateEventId(): number {\r\n    return generateRandomId();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule]\r\n})\r\nexport class ProJsToAdvplModule {}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProJsToAdvplService } from '../../../pro-js-to-advpl';\r\nimport { ProCompany, ProCompanyList } from '../models/pro-company';\r\n\r\nconst CACHE_KEY = 'ProCompany';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProCompanyService {\r\n  private url = '/api/framework/environment/v1/companies';\r\n  private useHTTP = true;\r\n  public readonly EVENT_GET_LIST_ID = 'getCompaniesList';\r\n  public readonly EVENT_SET_LIST_ID = 'setCompaniesList';\r\n  public readonly EVENT_GET_ONE_ID = 'getCompanyInfo';\r\n  public readonly EVENT_SET_ONE_ID = 'setCompanyInfo';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService\r\n  ) { }\r\n\r\n  getListOfCompanies(\r\n    CorporateName = '',\r\n    page = 1,\r\n    _pageSize = 100\r\n  ): Observable<ProCompanyList> {\r\n    const pageSize = 100;\r\n    if (this.useHTTP) {\r\n      return this.getListOfCompaniesFromApi(CorporateName, page, pageSize);\r\n    }\r\n    return this.getListOfCompaniesFromAdvpl(CorporateName, page, pageSize);\r\n  }\r\n\r\n  /**\r\n   * @description Retorna as empresas do usuário\r\n   * @param corporateName string, nome da empresa\r\n   * @param page number, número da página\r\n   * @param pageSize number, número de registros da página\r\n   * @returns ProCompanyList, lista de empresas do usuário\r\n   */\r\n  getUserCompanies(corporateName: string = '', page: number = 1, pageSize: number = 10): Observable<ProCompanyList> {\r\n    return this.getListOfCompaniesFromApi(corporateName, page, pageSize);\r\n  }\r\n\r\n  private getListOfCompaniesFromApi(\r\n    CorporateName: string,\r\n    page: number,\r\n    pageSize: number\r\n  ): Observable<ProCompanyList> {\r\n    let params = new HttpParams()\r\n      .append('page', page.toString())\r\n      .append('pageSize', pageSize.toString()); // Alterado o tamanho da página para melhorar a experiência do usuário.\r\n\r\n    if (CorporateName !== '') {\r\n      params = params.append('CorporateName', CorporateName);\r\n    }\r\n    const headers = new HttpHeaders().append(\r\n      'Accept',\r\n      'application/json; charset=utf-8'\r\n    );\r\n    return this.http.get<ProCompanyList>(this.url, {\r\n      headers,\r\n      params\r\n    });\r\n  }\r\n\r\n  private getListOfCompaniesFromAdvpl(\r\n    CorporateName: string,\r\n    page: number,\r\n    pageSize: number\r\n  ): Observable<ProCompanyList> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    const stringContent = JSON.stringify({\r\n      CorporateName,\r\n      page,\r\n      pageSize\r\n    });\r\n\r\n    const observableParameters = {\r\n      sendInfo: {\r\n        type: this.EVENT_GET_LIST_ID,\r\n        content: stringContent\r\n      },\r\n      autoDestruct: true,\r\n      receiveId: this.EVENT_SET_LIST_ID\r\n    };\r\n\r\n    const observableCallback = ({ protheusResponse, subscriber }) => {\r\n\r\n      if (protheusResponse.length === 0) {\r\n        subscriber.error({\r\n          status: 400,\r\n          description: `company ${CorporateName} could not be found`\r\n        });\r\n      } else {\r\n        const companiesData: ProCompanyList = JSON.parse(protheusResponse);\r\n        subscriber.next(companiesData);\r\n      }\r\n      subscriber.complete();\r\n    };\r\n\r\n    return this.advplService.buildObservable<ProCompanyList>(\r\n      observableCallback,\r\n      observableParameters\r\n    );\r\n  }\r\n\r\n  getCompany(company: string): Observable<ProCompany> {\r\n    if (this.useHTTP) {\r\n      return this.getCompanyFromApi(company);\r\n    }\r\n    return this.getCompanyFromAdvpl(company);\r\n  }\r\n\r\n  private getCompanyFromApi(company: string): Observable<ProCompany> {\r\n    const headers = new HttpHeaders().append(\r\n      'Accept',\r\n      'application/json; charset=utf-8'\r\n    );\r\n    return this.http.get<ProCompany>(`${this.url}/${company}`, { headers });\r\n  }\r\n\r\n  private getCompanyFromAdvpl(company: string): Observable<ProCompany> {\r\n\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    return this.advplService.buildObservable<ProCompany>(\r\n      ({ protheusResponse, subscriber }) => {\r\n        if (protheusResponse.length === 0) {\r\n          subscriber.error({\r\n            status: 400,\r\n            description: `company ${company} could not be found`\r\n          });\r\n        } else {\r\n          const companyData: ProCompany = JSON.parse(protheusResponse);\r\n          subscriber.next(companyData);\r\n        }\r\n        subscriber.complete();\r\n      },\r\n      {\r\n        sendInfo: {\r\n          type: this.EVENT_GET_ONE_ID,\r\n          content: company\r\n        },\r\n        autoDestruct: true,\r\n        receiveId: this.EVENT_SET_ONE_ID\r\n      }\r\n    );\r\n  }\r\n\r\n  get company(): ProCompany {\r\n    if (sessionStorage[CACHE_KEY]) {\r\n      return JSON.parse(sessionStorage[CACHE_KEY]);\r\n    } else {\r\n      return { Code: '', CorporateName: '', InternalId: '' };\r\n    }\r\n  }\r\n\r\n  set company(company: ProCompany) {\r\n    sessionStorage[CACHE_KEY] = JSON.stringify(company);\r\n  }\r\n\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProCompanyService'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n}\r\n","import { ProCompany } from './../../pro-company/models/pro-company';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProJsToAdvplService } from '../../../pro-js-to-advpl';\r\nimport { ProCompanyService } from './../../pro-company/services/pro-company.service';\r\nimport { ProBranch, ProBranchList } from './../models/pro-branch';\r\n\r\nconst CACHE_KEY = 'ProBranch';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProBranchService {\r\n  private url = '/api/framework/environment/v1/branches';\r\n  private useHTTP = true;\r\n\r\n  public readonly EVENT_SET_LIST_ID = 'setBranchesList';\r\n  public readonly EVENT_GET_LIST_ID = 'getBranchesList';\r\n  public readonly EVENT_SET_ONE_ID = 'setBranchInfo';\r\n  public readonly EVENT_GET_ONE_ID = 'getBranchInfo';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService,\r\n    private proCompanyService: ProCompanyService\r\n  ) { }\r\n\r\n  getListOfBranches(\r\n    Description = '',\r\n    page = 1,\r\n    _pageSize = 100\r\n  ): Observable<ProBranchList> {\r\n    const pageSize = 100;\r\n    if (this.useHTTP) {\r\n      return this.getListOfBranchesFromApi(Description, page, pageSize);\r\n    }\r\n    return this.getListOfBranchesFromAdvpl(Description, page, pageSize);\r\n  }\r\n\r\n  /**\r\n   * @description Retorna as filiais do usuário\r\n   * @param description string, descrição da filial\r\n   * @param page number, número da página\r\n   * @param pageSize number, número de registros da página\r\n   * @returns ProBranchList, lista de filiais do usuário\r\n   */\r\n  getUserBranches(description: string = '', page: number = 1, pageSize: number = 10): Observable<ProBranchList> {\r\n    return this.getListOfBranchesFromApi(description, page, pageSize, false);\r\n  }\r\n\r\n  /**\r\n   * @description Retorna as filiais do usuário via requisição http\r\n   * @param description string, descrição da filial\r\n   * @param page number, número da página\r\n   * @param pageSize number, número de registros da página\r\n   * @param isToFilterEnterpriseGroup boolean, indica se as filiais devem ser filtradas por empresa\r\n   * @returns ProBranchList, lista de filiais do usuário\r\n   */\r\n  private getListOfBranchesFromApi(\r\n    Description: string,\r\n    page: number,\r\n    pageSize: number,\r\n    isToFilterEnterpriseGroup: boolean = true\r\n  ): Observable<ProBranchList> {\r\n    let params = new HttpParams()\r\n      .append('page', page.toString())\r\n      .append('pageSize', pageSize.toString()); // Alterado o tamanho da página para melhorar a experiência do usuário.\r\n\r\n    const company: ProCompany = this.proCompanyService.company;\r\n\r\n    if (Description !== '') {\r\n      params = params.append('Description', Description);\r\n    }\r\n\r\n    if (isToFilterEnterpriseGroup) {\r\n      params = params.append('EnterpriseGroup', company.Code);\r\n    }\r\n\r\n    const headers = new HttpHeaders().append(\r\n      'Accept',\r\n      'application/json; charset=utf-8'\r\n    );\r\n    return this.http.get<ProBranchList>(this.url, {\r\n      headers,\r\n      params\r\n    });\r\n  }\r\n\r\n  private getListOfBranchesFromAdvpl(\r\n    Description,\r\n    page,\r\n    pageSize\r\n  ): Observable<ProBranchList> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    const company = this.proCompanyService.company;\r\n\r\n    const stringContent = JSON.stringify({\r\n      Description,\r\n      EnterpriseGroup: company.Code,\r\n      page,\r\n      pageSize\r\n    });\r\n\r\n    const observableParams = {\r\n      sendInfo: {\r\n        type: this.EVENT_GET_LIST_ID,\r\n        content: stringContent\r\n      },\r\n      autoDestruct: true,\r\n      receiveId: this.EVENT_SET_LIST_ID\r\n    };\r\n\r\n    const observableCallback = ({ protheusResponse, subscriber }) => {\r\n      if (protheusResponse.length === 0) {\r\n        subscriber.error({\r\n          status: 400,\r\n          description: `branch ${Description} could not be found`\r\n        });\r\n      } else {\r\n        const branchesData: ProBranchList = JSON.parse(protheusResponse);\r\n        subscriber.next(branchesData);\r\n      }\r\n      subscriber.complete();\r\n    };\r\n\r\n    return this.advplService.buildObservable<ProBranchList>(\r\n      observableCallback,\r\n      observableParams\r\n    );\r\n  }\r\n\r\n  getBranch(branch: string, company = ''): Observable<ProBranch> {\r\n    if (this.useHTTP) {\r\n      return this.getBranchFromApi(branch, company);\r\n    }\r\n    return this.getBranchFromAdvpl(branch, company);\r\n  }\r\n\r\n  private getBranchFromApi(branch: string, company: string): Observable<ProBranch> {\r\n    if (company === '') {\r\n      company = this.proCompanyService.company.Code;\r\n    }\r\n    const headers = new HttpHeaders().append(\r\n      'Accept',\r\n      'application/json; charset=utf-8'\r\n    );\r\n    return this.http.get<ProBranch>(`${this.url}/${company}|${branch}`, {\r\n      headers\r\n    });\r\n  }\r\n\r\n  private getBranchFromAdvpl(branch: string, company: string): Observable<ProBranch> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    if (company === '') {\r\n      company = this.proCompanyService.company.Code;\r\n    }\r\n\r\n    const stringContent = JSON.stringify({\r\n      branch,\r\n      company\r\n    });\r\n\r\n    const observableParams = {\r\n      sendInfo: {\r\n        type: this.EVENT_GET_ONE_ID,\r\n        content: stringContent\r\n      },\r\n      autoDestruct: true,\r\n      receiveId: this.EVENT_SET_ONE_ID\r\n    };\r\n\r\n    const observableCallback = ({ protheusResponse, subscriber }) => {\r\n      let isOk = (protheusResponse.length > 0);\r\n\r\n      const response = (isOk ? JSON.parse(protheusResponse) : {});\r\n      isOk = (isOk && response && response.success);\r\n\r\n      if (!isOk) {\r\n        subscriber.error({\r\n          status: 400,\r\n          description: `branch ${branch} could not be found`\r\n        });\r\n      } else {\r\n        const branchData: ProBranch = JSON.parse(response.payload);\r\n        subscriber.next(branchData);\r\n      }\r\n      subscriber.complete();\r\n    };\r\n\r\n    return this.advplService.buildObservable<ProBranch>(\r\n      observableCallback,\r\n      observableParams\r\n    );\r\n  }\r\n\r\n  get branch(): ProBranch {\r\n    if (sessionStorage[CACHE_KEY]) {\r\n      return JSON.parse(sessionStorage[CACHE_KEY]);\r\n    } else {\r\n      return { Code: '', EnterpriseGroup: '', Description: '' };\r\n    }\r\n  }\r\n\r\n  set branch(branch: ProBranch) {\r\n    sessionStorage[CACHE_KEY] = JSON.stringify(branch);\r\n  }\r\n\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProBranchService'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PoLookupFilter, PoLookupFilteredItemsParams } from '@po-ui/ng-components';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ProBranch } from './../../../services/pro-tenant/pro-branch/models/pro-branch';\r\nimport { ProBranchService } from './../../../services/pro-tenant/pro-branch/services/pro-branch.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProBranchLookupService implements PoLookupFilter {\r\n  private useHTTP = environment.useHTTP;\r\n  constructor(private proBranchService: ProBranchService) {\r\n    this.changeServiceChannel();\r\n  }\r\n\r\n  getFilteredItems(params: PoLookupFilteredItemsParams): Observable<any> {\r\n    return this.proBranchService.getListOfBranches(\r\n      params.filter,\r\n      params.page,\r\n      params.pageSize\r\n    );\r\n  }\r\n\r\n  getObjectByValue(value: string): Observable<any> {\r\n    return this.proBranchService.getBranch(value);\r\n  }\r\n\r\n  setBranch(branch: ProBranch) {\r\n    this.proBranchService.branch = branch;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n    this.changeServiceChannel();\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  private changeServiceChannel() {\r\n    this.proBranchService.setChannelAsHTTP(this.useHTTP);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { PoLookupColumn, PoLookupComponent } from '@po-ui/ng-components';\r\n\r\nimport { ProBranch } from './../../../services/pro-tenant/pro-branch/models/pro-branch';\r\nimport { ProBranchLookupService } from './pro-branch-lookup.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente que disponibiliza um campo para lookup para grupo de empresa.\r\n * O nome do field no formulário será branch_code\r\n */\r\n@Component({\r\n  selector: 'pro-branch-lookup',\r\n  templateUrl: './pro-branch-lookup.component.html',\r\n  styleUrls: ['../pro-fields-lookup.component.css']\r\n})\r\nexport class ProBranchLookupComponent {\r\n  /** Formulário pai do componente. Para formulários template-driven passe o ngModel.  */\r\n  @Input() parent;\r\n  @Output() branchSetted = new EventEmitter<ProBranch>();\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-label') pLabel?: string;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-hint') pHint?: string;\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('pro-columns') columns?: Array<PoLookupColumn>;\r\n\r\n  @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\r\n\r\n  constructor(public service: ProBranchLookupService) {}\r\n\r\n  public fieldFormat(value: ProBranch) {\r\n    return value.Code;\r\n  }\r\n\r\n  /**\r\n   * @description metodo para setar o foco no lookup de branch\r\n   */\r\n  setBranchFocus(): void{\r\n    this.lookup.focus();\r\n  }\r\n\r\n  /*\r\n  trecho para mostrar a consulta pelo atalho do F3\r\n  mantido aqui para servir de base caso venha a ser necessário utilizar isso no futuro.\r\n\r\n  // Registre o HostListener para a tecla F3\r\n  @HostListener('document:keydown.F3', ['$event'])\r\n  handleF3Key(event: KeyboardEvent): void {\r\n    console.log(\"f3 branch out\");\r\n    if (this.lookup.inputEl.nativeElement == document.activeElement){\r\n      console.log(\"f3 branch in\");\r\n      event.preventDefault(); // Isso impede que a ação padrão da tecla F3 (geralmente abrir a busca) seja executada\r\n      this.lookup.openLookup();\r\n    }\r\n  } */\r\n\r\n  setBranch(branch: ProBranch) {\r\n    if (Object.keys(branch).length > 0) {\r\n      this.parent.patchValue({ branch_description: branch.Description });\r\n      this.service.setBranch(branch);\r\n      this.branchSetted.emit(branch);\r\n    }\r\n  }\r\n}\r\n","<div [formGroup]=\"parent\" class=\"po-page-login-info-container\">\r\n  <po-lookup\r\n    class=\"po-md-6\"\r\n    name=\"branch_code\"\r\n    formControlName=\"branch_code\"\r\n    p-field-label=\"Code\"\r\n    p-field-value=\"Code\"\r\n    [p-label]=\"pLabel\"\r\n    [p-columns]=\"columns\"\r\n    [p-field-format]=\"fieldFormat\"\r\n    [p-filter-service]=\"service\"\r\n    (p-selected)=\"setBranch($event)\"\r\n  >\r\n  </po-lookup>\r\n  <po-input\r\n    class=\"po-md-6\"\r\n    name=\"branch_description\"\r\n    formControlName=\"branch_description\"\r\n    p-label=\"&nbsp;\"\r\n    p-disabled=\"true\"\r\n  >\r\n  </po-input>\r\n  <div class=\"po-page-login-info-icon-container tooltip-bigscreen-adjust\">\r\n    <span\r\n      class=\"po-icon po-field-icon po-icon-info\"\r\n      [p-tooltip]=\"pHint\"\r\n      p-tooltip-position=\"right\"\r\n    >\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PoFieldModule, PoTooltipModule } from '@po-ui/ng-components';\r\n\r\nimport { ProBranchLookupComponent } from './pro-branch-lookup.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, PoFieldModule, PoTooltipModule],\r\n  declarations: [ProBranchLookupComponent],\r\n  exports: [ProBranchLookupComponent]\r\n})\r\nexport class ProBranchLookupModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { PoLookupFilter, PoLookupFilteredItemsParams } from '@po-ui/ng-components';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { ProCompany } from './../../../services/pro-tenant/pro-company/models/pro-company';\r\nimport { ProCompanyService } from './../../../services/pro-tenant/pro-company/services/pro-company.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProCompanyLookupService implements PoLookupFilter {\r\n  private useHTTP = environment.useHTTP;\r\n  constructor(private proCompanyService: ProCompanyService) {\r\n    this.changeServiceChannel();\r\n  }\r\n\r\n  getFilteredItems(params: PoLookupFilteredItemsParams): Observable<any> {\r\n    return this.proCompanyService.getListOfCompanies(\r\n      params.filter,\r\n      params.page,\r\n      params.pageSize\r\n    );\r\n  }\r\n\r\n  getObjectByValue(value: string): Observable<any> {\r\n    return this.proCompanyService.getCompany(value);\r\n  }\r\n\r\n  setCompany(company: ProCompany) {\r\n    this.proCompanyService.company = company;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n    this.changeServiceChannel();\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  private changeServiceChannel() {\r\n    this.proCompanyService.setChannelAsHTTP(this.useHTTP);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { PoLookupColumn, PoLookupComponent } from '@po-ui/ng-components';\r\n\r\nimport { ProCompany } from './../../../services/pro-tenant/pro-company/models/pro-company';\r\nimport { ProCompanyLookupService } from './pro-company-lookup.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente que disponibiliza um campo para lookup para grupo de empresa.\r\n * O nome do field no formulário será company_code\r\n */\r\n@Component({\r\n  selector: 'pro-company-lookup',\r\n  templateUrl: './pro-company-lookup.component.html',\r\n  styleUrls: ['../pro-fields-lookup.component.css']\r\n})\r\nexport class ProCompanyLookupComponent {\r\n  /** Formulário pai do componente. Para formulários template-driven passe o ngModel.  */\r\n  @Input() parent;\r\n  @Output() companySetted = new EventEmitter<ProCompany>();\r\n  @Output() branchSetted = new EventEmitter<void>();\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-label') pLabel?: string;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-hint') pHint?: string;\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('pro-columns') columns?: Array<PoLookupColumn>;\r\n\r\n  @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\r\n  private started: boolean = false;\r\n  firstPass: boolean = true;\r\n\r\n  /**\r\n   * @description Construtor da classe\r\n   * @param service Serviço de Lookup do grupo de empresas\r\n   */\r\n  constructor(public service: ProCompanyLookupService) { }\r\n\r\n  public fieldFormat(value: ProCompany) {\r\n    return value.Code;\r\n  }\r\n\r\n  setCompanyFocus(): void{\r\n    this.lookup.focus();\r\n  }\r\n\r\n  setStarted(started: boolean): void{\r\n    this.started = started;\r\n  }\r\n\r\n  /*\r\n  trecho para mostrar a consulta pelo atalho do F3\r\n  mantido aqui para servir de base caso venha a ser necessário utilizar isso no futuro.\r\n\r\n  // Registre o HostListener para a tecla F3\r\n  @HostListener('document:keydown.F3', ['$event'])\r\n  handleF3Key(event: KeyboardEvent): void {\r\n    console.log(\"f3 out\");\r\n    if (this.lookup.inputEl.nativeElement == document.activeElement){\r\n      console.log(\"f3 in\");\r\n      event.preventDefault(); // Isso impede que a ação padrão da tecla F3 (geralmente abrir a busca) seja executada\r\n      this.lookup.openLookup();\r\n    }\r\n  } */\r\n\r\n  /**\r\n   * @description Efetua o set do grupo de empresas para o serviço, atualiza o parent e disparada o evento\r\n   * @param company Objeto do grupo de empresas\r\n   */\r\n  setCompany(company: ProCompany): void {\r\n    if (Object.keys(company).length > 0) {\r\n      this.parent.patchValue({\r\n        company_description: company.CorporateName,\r\n        branch_code: '',\r\n        branch_description: '',\r\n        companyLayout: company.Layout\r\n      });\r\n      this.service.setCompany(company);\r\n      this.companySetted.emit(company);\r\n\r\n      const hasBranch: boolean = !!company.FirstBranchCode && !!company.FirstBranchDescription;\r\n      if (this.started && hasBranch && !this.firstPass){\r\n\r\n        this.parent.patchValue({\r\n          branch_code: company.FirstBranchCode,\r\n          branch_description: company.FirstBranchDescription\r\n        });\r\n\r\n        setTimeout(() => {\r\n          // evento para forçar o foco no lookup de branch\r\n          // por algum motivo obscuro o patchValue no branch retira o foco do elemento\r\n          this.branchSetted.emit();\r\n        }, 200);\r\n\r\n      }\r\n      if (this.firstPass){\r\n        this.firstPass = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div [formGroup]=\"parent\" class=\"po-page-login-info-container\">\r\n  <po-lookup\r\n    class=\"po-md-6\"\r\n    name=\"company_code\"\r\n    formControlName=\"company_code\"\r\n    p-field-label=\"Code\"\r\n    p-field-value=\"Code\"\r\n    [p-label]=\"pLabel\"\r\n    [p-columns]=\"columns\"\r\n    [p-field-format]=\"fieldFormat\"\r\n    [p-filter-service]=\"service\"\r\n    (p-selected)=\"setCompany($event)\"\r\n  >\r\n  </po-lookup>\r\n  <po-input\r\n    class=\"po-md-6\"\r\n    name=\"company_description\"\r\n    formControlName=\"company_description\"\r\n    p-label=\"&nbsp;\"\r\n    p-disabled=\"true\"\r\n  >\r\n  </po-input>\r\n  <div class=\"po-page-login-info-icon-container tooltip-bigscreen-adjust\">\r\n    <span\r\n      class=\"po-icon po-field-icon po-icon-info\"\r\n      [p-tooltip]=\"pHint\"\r\n      p-tooltip-position=\"right\"\r\n    >\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PoFieldModule, PoTooltipModule } from '@po-ui/ng-components';\r\n\r\nimport { ProCompanyLookupComponent } from './pro-company-lookup.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, PoFieldModule, PoTooltipModule],\r\n  declarations: [ProCompanyLookupComponent],\r\n  exports: [ProCompanyLookupComponent]\r\n})\r\nexport class ProCompanyLookupModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProRole, ProRoleList } from '../models/pro-role-modules';\r\nimport { ProJsToAdvplService } from './../../../pro-js-to-advpl/services/pro-js-to-advpl.service';\r\n\r\nconst CACHE_KEY = 'ProRole';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProRoleService {\r\n  constructor(private advplService: ProJsToAdvplService) {}\r\n\r\n  getListofRoles(\r\n    description = '',\r\n    page = 1,\r\n    pageSize = 10\r\n  ): Observable<ProRoleList> {\r\n    pageSize = 100; // Alterado o tamanho da página para melhorar a experiência do usuário.\r\n    if (this.advplService.protheusConnected()) {\r\n      return this.advplService.buildObservable(\r\n        ({ protheusResponse, subscriber }) => {\r\n          if (protheusResponse.length === 0) {\r\n            subscriber.next({\r\n              hasNext: false,\r\n              items: []\r\n            });\r\n          } else {\r\n            const roleList: Array<ProRole> = JSON.parse(protheusResponse)\r\n              .map((role: Array<string>) => {\r\n                return {\r\n                  Code: role[0],\r\n                  Description: role[1]\r\n                };\r\n              })\r\n              .filter((role: ProRole) => {\r\n                return role.Description.includes(description);\r\n              });\r\n            subscriber.next({\r\n              hasNext: roleList.length > page * pageSize,\r\n              items: roleList.slice((page - 1) * pageSize, page * pageSize)\r\n            });\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          autoDestruct: true,\r\n          receiveId: 'setRoleList',\r\n          sendInfo: { type: 'getRoleList' }\r\n        }\r\n      );\r\n    } else {\r\n      return new Observable<ProRoleList>(subscriber => {\r\n        subscriber.next({\r\n          hasNext: false,\r\n          items: []\r\n        });\r\n        subscriber.complete();\r\n      });\r\n    }\r\n  }\r\n\r\n  getRoleByCode(roleCode: string): Observable<ProRole> {\r\n    if (this.advplService.protheusConnected()) {\r\n      return this.advplService.buildObservable(\r\n        ({ protheusResponse, subscriber }) => {\r\n          const role = JSON.parse(protheusResponse);\r\n          const response = { Code: role[0], Description: role[1] };\r\n          subscriber.next(response);\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          autoDestruct: true,\r\n          receiveId: 'setRoleItem',\r\n          sendInfo: { type: 'getRoleItem', content: roleCode }\r\n        }\r\n      );\r\n    } else {\r\n      return new Observable<ProRole>(subscriber => {\r\n        subscriber.next({ Code: '', Description: '' });\r\n        subscriber.complete();\r\n      });\r\n    }\r\n  }\r\n\r\n  get role(): ProRole {\r\n    if (sessionStorage[CACHE_KEY]) {\r\n      return JSON.parse(sessionStorage[CACHE_KEY]);\r\n    } else {\r\n      return { Code: '', Description: '' };\r\n    }\r\n  }\r\n\r\n  set role(role: ProRole) {\r\n    sessionStorage[CACHE_KEY] = JSON.stringify(role);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  PoLookupFilter,\r\n  PoLookupFilteredItemsParams\r\n} from '@po-ui/ng-components';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProRole } from './../../../services/pro-role/pro-role-modules/models/pro-role-modules';\r\nimport { ProRoleService } from './../../../services/pro-role/pro-role-modules/services/pro-role.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProRoleLookupService implements PoLookupFilter {\r\n  constructor(private proRoleService: ProRoleService) {}\r\n\r\n  getFilteredItems(params: PoLookupFilteredItemsParams): Observable<any> {\r\n    return this.proRoleService.getListofRoles(\r\n      params.filter,\r\n      params.page,\r\n      params.pageSize\r\n    );\r\n  }\r\n\r\n  getObjectByValue(code: string): Observable<any> {\r\n    return this.proRoleService.getRoleByCode(code);\r\n  }\r\n\r\n  setRole(role: ProRole) {\r\n    this.proRoleService.role = role;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { PoLookupColumn } from '@po-ui/ng-components';\r\n\r\nimport { ProRole } from './../../../services/pro-role/pro-role-modules/models/pro-role-modules';\r\nimport { ProRoleLookupService } from './pro-role-lookup.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente que disponibiliza um campo para lookup para grupo de empresa.\r\n * O nome do field no formulário será role_code\r\n */\r\n@Component({\r\n  selector: 'pro-role-lookup',\r\n  templateUrl: './pro-role-lookup.component.html',\r\n  styleUrls: ['../pro-fields-lookup.component.css']\r\n})\r\nexport class ProRoleLookupComponent {\r\n  /** Formulário pai do componente. Para formulários template-driven passe o ngModel.  */\r\n  @Input() parent;\r\n  @Output() roleSetted = new EventEmitter<ProRole>();\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-label') pLabel?: string;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-hint') pHint?: string;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('pro-columns') columns?: Array<PoLookupColumn>;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-disabled') pDisabled?: string;\r\n\r\n  constructor(public service: ProRoleLookupService) {}\r\n\r\n  public fieldFormat(value: ProRole) {\r\n    return value.Code;\r\n  }\r\n\r\n  setRole(role: ProRole) {\r\n    this.parent.patchValue({ role_description: role.Description });\r\n    this.service.setRole(role);\r\n    this.roleSetted.emit(role);\r\n  }\r\n}\r\n","<div [formGroup]=\"parent\" class=\"po-page-login-info-container\">\r\n  <po-lookup\r\n    class=\"po-md-6\"\r\n    name=\"role_code\"\r\n    formControlName=\"role_code\"\r\n    p-field-label=\"Code\"\r\n    p-field-value=\"Code\"\r\n    [p-label]=\"pLabel\"\r\n    [p-columns]=\"columns\"\r\n    [p-field-format]=\"fieldFormat\"\r\n    [p-filter-service]=\"service\"\r\n    (p-selected)=\"setRole($event)\"\r\n    [p-disabled]=\"pDisabled\"\r\n  >\r\n  </po-lookup>\r\n  <po-input\r\n    class=\"po-md-6\"\r\n    name=\"role_description\"\r\n    formControlName=\"role_description\"\r\n    p-label=\"&nbsp;\"\r\n    p-disabled=\"true\"\r\n  >\r\n  </po-input>\r\n  <div class=\"po-page-login-info-icon-container tooltip-bigscreen-adjust\">\r\n    <span\r\n      class=\"po-icon po-field-icon po-icon-info\"\r\n      [p-tooltip]=\"pHint\"\r\n      p-tooltip-position=\"right\"\r\n    >\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PoFieldModule, PoTooltipModule } from '@po-ui/ng-components';\r\n\r\nimport { ProRoleLookupComponent } from './pro-role-lookup.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, PoFieldModule, PoTooltipModule],\r\n  declarations: [ProRoleLookupComponent],\r\n  exports: [ProRoleLookupComponent]\r\n})\r\nexport class ProRoleLookupModule {}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProJsToAdvplService } from '../../../pro-js-to-advpl';\r\nimport { ProSystemModules, ProSystemModulesList } from '../models/pro-system-modules';\r\n\r\nconst CACHE_KEY = 'ProSystemModule';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSystemModuleService {\r\n  private url = '/api/framework/v1/systemModules';\r\n  private useHTTP = true;\r\n\r\n  public EVENT_SET_LIST = 'setModulesList';\r\n  public EVENT_GET_LIST = 'getModulesList';\r\n  public EVENT_SET_ONE = 'setModuleInfo';\r\n  public EVENT_GET_ONE = 'getModuleInfo';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService\r\n  ) { }\r\n\r\n  getListOfSystemModules(\r\n    description = '',\r\n    page = 1,\r\n    _pageSize = 10\r\n  ): Observable<ProSystemModulesList> {\r\n    const pageSize = 100;\r\n    if (this.useHTTP) {\r\n      return this.getListOfSystemModulesFromApi(description, page, pageSize);\r\n    }\r\n    return this.getListOfSystemModulesFromAdvpl(description, page, pageSize);\r\n  }\r\n\r\n  private getListOfSystemModulesFromApi(\r\n    description,\r\n    page,\r\n    pageSize\r\n  ): Observable<ProSystemModulesList> {\r\n    let params = new HttpParams()\r\n      .append('page', page.toString())\r\n      .append('pageSize', pageSize.toString()); // Alterado o tamanho da página para melhorar a experiência do usuário.\r\n\r\n    if (description !== '') {\r\n      params = params.append('description', description);\r\n    }\r\n    const headers = new HttpHeaders().append(\r\n      'Accept',\r\n      'application/json; charset=utf-8'\r\n    );\r\n    return this.http.get<ProSystemModulesList>(this.url, { headers, params });\r\n  }\r\n\r\n  private getListOfSystemModulesFromAdvpl(\r\n    description,\r\n    page,\r\n    pageSize\r\n  ): Observable<ProSystemModulesList> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    const stringContent = JSON.stringify({\r\n      description,\r\n      page,\r\n      pageSize,\r\n    });\r\n\r\n    return this.advplService.buildObservable<ProSystemModulesList>(\r\n      ({ protheusResponse, subscriber }) => {\r\n        if (protheusResponse.length === 0) {\r\n          subscriber.error({\r\n            status: 400,\r\n            description: `module ${description} could not be found`\r\n          });\r\n        } else {\r\n          const modulesData: ProSystemModulesList = JSON.parse(protheusResponse);\r\n          subscriber.next(modulesData);\r\n        }\r\n        subscriber.complete();\r\n      },\r\n      {\r\n        sendInfo: {\r\n          type: this.EVENT_GET_LIST,\r\n          content: stringContent\r\n        },\r\n        autoDestruct: true,\r\n        receiveId: this.EVENT_SET_LIST\r\n      }\r\n    );\r\n  }\r\n\r\n  getSystemModule(systemModuleId: string): Observable<ProSystemModules> {\r\n    if (this.useHTTP) {\r\n      return this.getSystemModuleFromAPI(systemModuleId);\r\n    }\r\n    return this.getSystemModuleFromAdvpl(systemModuleId);\r\n  }\r\n\r\n  private getSystemModuleFromAPI(systemModuleId: string): Observable<ProSystemModules> {\r\n    const headers = new HttpHeaders().append(\r\n      'Accept',\r\n      'application/json; charset=utf-8'\r\n    );\r\n    return this.http.get<ProSystemModules>(`${this.url}/${systemModuleId}`, {\r\n      headers\r\n    });\r\n  }\r\n\r\n  private getSystemModuleFromAdvpl(systemModuleId: string): Observable<ProSystemModules> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    return this.advplService.buildObservable<ProSystemModules>(\r\n      ({ protheusResponse, subscriber }) => {\r\n        if (protheusResponse.length === 0) {\r\n          subscriber.error({\r\n            status: 400,\r\n            description: `module ${systemModuleId} could not be found`\r\n          });\r\n        } else {\r\n          const moduleData: ProSystemModules = JSON.parse(protheusResponse);\r\n          subscriber.next(moduleData);\r\n        }\r\n        subscriber.complete();\r\n      },\r\n      {\r\n        sendInfo: {\r\n          type: this.EVENT_GET_ONE,\r\n          content: systemModuleId\r\n        },\r\n        autoDestruct: true,\r\n        receiveId: this.EVENT_SET_ONE\r\n      }\r\n    );\r\n  }\r\n\r\n  get systemModule(): ProSystemModules {\r\n    if (sessionStorage[CACHE_KEY]) {\r\n      return JSON.parse(sessionStorage[CACHE_KEY]);\r\n    } else {\r\n      return { id: '', name: '', description: '' };\r\n    }\r\n  }\r\n\r\n  set systemModule(systemModule: ProSystemModules) {\r\n    sessionStorage[CACHE_KEY] = JSON.stringify(systemModule);\r\n  }\r\n\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProSystemModuleService'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PoLookupFilter, PoLookupFilteredItemsParams } from '@po-ui/ng-components';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { ProSystemModules } from './../../../services/pro-system-info/pro-system-modules/models/pro-system-modules';\r\nimport {\r\n  ProSystemModuleService,\r\n} from './../../../services/pro-system-info/pro-system-modules/services/pro-system-modules.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSystemModuleLookupService implements PoLookupFilter {\r\n  private useHTTP = environment.useHTTP;\r\n  constructor(private proSystemModuleService: ProSystemModuleService) {\r\n    this.changeServiceChannel();\r\n  }\r\n\r\n  getFilteredItems(params: PoLookupFilteredItemsParams): Observable<any> {\r\n    return this.proSystemModuleService.getListOfSystemModules(\r\n      params.filter,\r\n      params.page,\r\n      params.pageSize\r\n    );\r\n  }\r\n\r\n  getObjectByValue(moduleId: string): Observable<any> {\r\n    this.setSystemModule({ id: moduleId });\r\n    return this.proSystemModuleService.getSystemModule(moduleId);\r\n  }\r\n\r\n  setSystemModule(systemModule: ProSystemModules) {\r\n    this.proSystemModuleService.systemModule = systemModule;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n    this.changeServiceChannel();\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  private changeServiceChannel() {\r\n    this.proSystemModuleService.setChannelAsHTTP(this.useHTTP);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { PoLookupColumn } from '@po-ui/ng-components';\r\n\r\nimport { ProSystemModules } from './../../../services/pro-system-info/pro-system-modules/models/pro-system-modules';\r\nimport { ProSystemModuleLookupService } from './pro-system-module-lookup.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente que disponibiliza um campo para lookup para grupo de empresa.\r\n * O nome do field no formulário será company_code\r\n */\r\n@Component({\r\n  selector: 'pro-system-module-lookup',\r\n  templateUrl: './pro-system-module-lookup.component.html',\r\n  styleUrls: ['../pro-fields-lookup.component.css']\r\n})\r\nexport class ProSystemModuleLookupComponent {\r\n  /** Formulário pai do componente. Para formulários template-driven passe o ngModel.  */\r\n  @Input() parent;\r\n  @Output() systeModuleSetted = new EventEmitter<ProSystemModules>();\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-label') pLabel?: string;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-disabled') pDisabled?: string;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-hint') pHint?: string;\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('pro-columns') columns?: Array<PoLookupColumn>;\r\n\r\n  constructor(public service: ProSystemModuleLookupService) {}\r\n\r\n  public fieldFormat(value: ProSystemModules) {\r\n    return `${value.id}`;\r\n  }\r\n\r\n  setSystemModule(systemModule: ProSystemModules) {\r\n    this.parent.patchValue({\r\n      environment_description: systemModule.description\r\n    });\r\n    this.service.setSystemModule(systemModule);\r\n    this.systeModuleSetted.emit(systemModule);\r\n  }\r\n\r\n  /*\r\n  trecho para mostrar a consulta pelo atalho do F3\r\n  mantido aqui para servir de base caso venha a ser necessário utilizar isso no futuro.\r\n\r\n  @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\r\n\r\n  // Registre o HostListener para a tecla F3\r\n  @HostListener('document:keydown.F3', ['$event'])\r\n  handleF3Key(event: KeyboardEvent): void {\r\n    console.log(\"f3 module out\");\r\n    if (this.lookup.inputEl.nativeElement == document.activeElement){\r\n      console.log(\"f3 module in\");\r\n      event.preventDefault(); // Isso impede que a ação padrão da tecla F3 (geralmente abrir a busca) seja executada\r\n      this.lookup.openLookup();\r\n    }\r\n  } */\r\n\r\n}\r\n","<div [formGroup]=\"parent\" class=\"po-page-login-info-container\">\r\n  <po-lookup\r\n    class=\"po-md-6\"\r\n    name=\"environment_code\"\r\n    formControlName=\"environment_code\"\r\n    p-field-label=\"id\"\r\n    p-field-value=\"id\"\r\n    [p-label]=\"pLabel\"\r\n    [p-disabled]=\"pDisabled\"\r\n    [p-columns]=\"columns\"\r\n    [p-field-format]=\"fieldFormat\"\r\n    [p-filter-service]=\"service\"\r\n    (p-selected)=\"setSystemModule($event)\"\r\n  >\r\n  </po-lookup>\r\n  <po-input\r\n    class=\"po-md-6\"\r\n    name=\"environment_description\"\r\n    formControlName=\"environment_description\"\r\n    p-label=\"&nbsp;\"\r\n    p-disabled=\"true\"\r\n  >\r\n  </po-input>\r\n  <div class=\"po-page-login-info-icon-container tooltip-bigscreen-adjust\">\r\n    <span\r\n      class=\"po-icon po-field-icon po-icon-info\"\r\n      [p-tooltip]=\"pHint\"\r\n      p-tooltip-position=\"right\"\r\n    >\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PoFieldModule, PoTooltipModule } from '@po-ui/ng-components';\r\n\r\nimport { ProSystemModuleLookupComponent } from './pro-system-module-lookup.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, PoFieldModule, PoTooltipModule],\r\n  declarations: [ProSystemModuleLookupComponent],\r\n  exports: [ProSystemModuleLookupComponent]\r\n})\r\nexport class ProSystemModuleLookupModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ProBranchLookupModule } from './pro-branch-lookup/pro-branch-lookup.module';\r\nimport { ProCompanyLookupModule } from './pro-company-lookup/pro-company-lookup.module';\r\nimport { ProRoleLookupModule } from './pro-role-lookup/pro-role-lookup.module';\r\nimport { ProSystemModuleLookupModule } from './pro-system-module-lookup/pro-system-module-lookup.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ProCompanyLookupModule,\r\n    ProBranchLookupModule,\r\n    ProRoleLookupModule,\r\n    ProSystemModuleLookupModule\r\n  ],\r\n  exports: [\r\n    ProCompanyLookupModule,\r\n    ProBranchLookupModule,\r\n    ProRoleLookupModule,\r\n    ProSystemModuleLookupModule\r\n  ]\r\n})\r\nexport class ProFieldsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pro-home',\r\n  templateUrl: './pro-home.component.html',\r\n  styleUrls: ['./pro-home.component.css']\r\n})\r\nexport class ProHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  home works!\r\n</p>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProHomeComponent } from './pro-home.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ProHomeComponent],\r\n  exports: [ProHomeComponent]\r\n})\r\nexport class ProHomeModule {}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { ProUserPswretInterface } from '../../../../interfaces/pro-user-pswret/pro-user-pswret.interface';\r\nimport { ProJsToAdvplService } from '../../../pro-js-to-advpl';\r\nimport { ProUserInfo } from '../../models/pro-user-info';\r\n\r\nconst CACHE_KEY_USER = 'ProUser';\r\nconst USER_ENDPOINT = '/api/framework/v1/users';\r\n/**\r\n * Essa classe corresponde ao serviço de busca de informações do usuário\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProUserInfoService {\r\n  private useHTTP = true;\r\n\r\n  public readonly EVENT_GET_ID = 'getUserInfo';\r\n  public readonly EVENT_SET_ID = 'setUserInfo';\r\n  private readonly URL_PSWRET: string = '/api/framework/v1/basicProtheusServices/pswret/';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService\r\n  ) { }\r\n\r\n  /**\r\n   * @description Retorna informações do usuário\r\n   * @param userId string, id do usuário\r\n   * @param isUseHttp boolean, indica se utiliza requisição http\r\n   * @returns Observable de ProUserInfo, dados do usuário\r\n   */\r\n  get(userId: string, isUseHttp: boolean = false): Observable<ProUserInfo> {\r\n    if (this.useHTTP || isUseHttp) {\r\n      return this.getFromApi(userId);\r\n    }\r\n    return this.getFromAdvpl(userId);\r\n  }\r\n\r\n  private getFromApi(userId: string): Observable<ProUserInfo> {\r\n    const headers = new HttpHeaders()\r\n      .append('X-Totvs-No-Error', 'true')\r\n      .append('Accept', 'application/json; charset=utf-8');\r\n    return this.http.get(`${USER_ENDPOINT}/${userId}`, { headers }).pipe(\r\n      map((userInfo: ProUserInfo) => {\r\n        userInfo.complete_name = userInfo.userName;\r\n        return userInfo;\r\n      }),\r\n\r\n      tap((userInfo: ProUserInfo) => {\r\n        sessionStorage[CACHE_KEY_USER] = JSON.stringify(userInfo);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getFromAdvpl(userId: string): Observable<ProUserInfo> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    const randomEventId = this.advplService.generateEventId();\r\n\r\n    const observableParams = {\r\n      sendInfo: {\r\n        type: `${this.EVENT_GET_ID}#id#${randomEventId}`,\r\n        content: userId\r\n      },\r\n      autoDestruct: true,\r\n      receiveId: `${this.EVENT_SET_ID}#id#${randomEventId}`\r\n    };\r\n\r\n    const observableCallback = ({ protheusResponse, subscriber }) => {\r\n      if (protheusResponse.length === 0) {\r\n        subscriber.error({\r\n          status: 400,\r\n          description: `user ${userId} could not be found`\r\n        });\r\n      } else {\r\n        const userInfo: ProUserInfo = JSON.parse(protheusResponse);\r\n        userInfo.complete_name = userInfo.userName;\r\n        sessionStorage[CACHE_KEY_USER] = JSON.stringify(protheusResponse);\r\n        subscriber.next(userInfo);\r\n      }\r\n      subscriber.complete();\r\n    };\r\n\r\n    return this.advplService.buildObservable<ProUserInfo>(\r\n      observableCallback,\r\n      observableParams\r\n    );\r\n  }\r\n\r\n  removeFromStorage() {\r\n    sessionStorage.removeItem(CACHE_KEY_USER);\r\n  }\r\n\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProUserInfoService'\r\n        /**\r\n         * Esse erro está sendo emitido ao utilizar o app com a otimização ligada e a opção de SSO.\r\n         * O que foi percebido é que em determinada situação a conexão AdvPL\r\n         * não fica disponível quando o serviço é solicitado. Foram feitos testes adicionando\r\n         * múltiplas tentativas mas sem sucesso. Utilizando a opção de canal HTTP funciona corretamente,\r\n         * porém interfere na criação de dicionários do lado AdvPL, o que torna a opção inviável.\r\n         */\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n\r\n  /**\r\n   * efetua um get na api referente a função PswRet do protheus\r\n   * a api utiliza o usuário logado para efetuar a busca\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public pswRet(): Observable<ProUserPswretInterface> {\r\n    return this.http.get<ProUserPswretInterface>(this.URL_PSWRET);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nimport { valueIsNull } from '../../../../util';\r\nimport { ProJsToAdvplService } from '../../../pro-js-to-advpl/services/pro-js-to-advpl.service';\r\nimport { ProAccessToken, ProAuthToken } from '../../models/pro-auth-token';\r\nimport { ProUser } from '../../models/pro-user';\r\nimport { ProUserInfo } from '../../models/pro-user-info';\r\nimport { ProUserInfoService } from '../pro-user-info/pro-user-info.service';\r\n\r\nconst CACHE_KEY_TOKEN = 'ERPTOKEN';\r\nconst TOKEN_ENDPOINT = '/api/oauth2/v1/token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProAuthService {\r\n  public redirectUrl: string;\r\n  private _token: ProAuthToken;\r\n  private _ProUserInfo: ProUserInfo;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private proUserInfoService: ProUserInfoService,\r\n    private advplService: ProJsToAdvplService\r\n  ) {\r\n    this.proUserInfoService.setChannelAsHTTP(environment.useHTTP);\r\n  }\r\n\r\n  requestLoginDefaults(): Observable<ProUser> {\r\n    if (!valueIsNull(this.advplService.getWebChannel())) {\r\n      return this.advplService.buildObservable<ProUser>(\r\n        ({ protheusResponse, subscriber }) => {\r\n          if (protheusResponse.length === 0) {\r\n            subscriber.next({\r\n              username: '',\r\n              username_when: true,\r\n              password: '',\r\n              remember_user: false,\r\n              show_remember_user: false\r\n            });\r\n          } else {\r\n            const startKeys = JSON.parse(protheusResponse);\r\n            subscriber.next(startKeys);\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          sendInfo: {\r\n            type: 'getLoginStart'\r\n          },\r\n          autoDestruct: true\r\n        }\r\n      );\r\n    } else {\r\n      return new Observable<ProUser>(subscriber => {\r\n        subscriber.next({\r\n          username: '',\r\n          username_when: true,\r\n          password: '',\r\n          remember_user: false,\r\n          show_remember_user: false\r\n        });\r\n        subscriber.complete();\r\n      });\r\n    }\r\n  }\r\n\r\n  requestToken(user: ProUser): Observable<ProAuthToken> {\r\n    if (this.advplService.protheusConnected()) {\r\n      return this.advplService.buildObservable<ProAuthToken>(\r\n        ({ protheusResponse, subscriber }) => {\r\n          if (protheusResponse.length === 0) {\r\n            subscriber.error({ status: 401 });\r\n          } else {\r\n            const tokenInside = JSON.parse(protheusResponse);\r\n            subscriber.next(tokenInside);\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          sendInfo: {\r\n            type: 'loginInside',\r\n            content: btoa(\r\n              JSON.stringify({ \"usr\": user.username, \"psw\": user.password, \"remember\": user.remember_user })\r\n            )\r\n          },\r\n          autoDestruct: true,\r\n          receiveId: 'setToken'\r\n        }\r\n      );\r\n    } else {\r\n      const headers = new HttpHeaders()\r\n        .append('X-Totvs-No-Error', 'true')\r\n        .set('grant_type', 'password')\r\n        .set('username', user.username)\r\n        .set('password', user.password);\r\n      return this.http.post<ProAuthToken>(TOKEN_ENDPOINT, {}, { headers });\r\n    }\r\n  }\r\n\r\n  refreshToken(refresh_token: string): Observable<ProAuthToken> {\r\n    const params = new HttpParams()\r\n      .set('grant_type', 'refresh_token')\r\n      .set('refresh_token', refresh_token);\r\n\r\n    return this.http.post<ProAuthToken>(TOKEN_ENDPOINT, {}, { params });\r\n  }\r\n\r\n  login(user: ProUser): Observable<ProAuthToken> {\r\n    const loginSubject = new Subject<ProAuthToken>();\r\n\r\n    this.requestToken(user).subscribe(\r\n      {\r\n        next: (token: ProAuthToken) => {\r\n          const userId = this.getTokenPayload(token.access_token).userid;\r\n          this.saveToken(token);\r\n          this.saveUserInfo(userId);\r\n          loginSubject.next(token);\r\n        },\r\n        error: (error) => {\r\n          loginSubject.error(error);\r\n        }\r\n      }\r\n    );\r\n\r\n    return loginSubject.asObservable();\r\n  }\r\n\r\n  passwordRecovery(user: string): void {\r\n    this.advplService.jsToAdvpl('openPasswordRecovery', user);\r\n  }\r\n\r\n  saveToken(token: ProAuthToken) {\r\n    sessionStorage[CACHE_KEY_TOKEN] = JSON.stringify(token);\r\n  }\r\n\r\n  saveUserInfo(userId: string) {\r\n    this.proUserInfoService.get(userId).subscribe((userInfo: ProUserInfo) => {\r\n      this._ProUserInfo = userInfo;\r\n    });\r\n  }\r\n\r\n  isTokenValid(now = Date.now()): boolean {\r\n    const date_now = Math.round(now / 1000.0);\r\n    const payload = this.getTokenPayload(this.token.access_token);\r\n    // Faltando 10% do tempo de expiração já peço a renovação\r\n    return payload.exp - date_now > this.token.expires_in / 10;\r\n  }\r\n\r\n  async updateToken() {\r\n    const token: ProAuthToken = await this.refreshToken(this.token.refresh_token).toPromise();\r\n    this.saveToken(token);\r\n    this._token = token;\r\n  }\r\n\r\n  get userInfo(): ProUserInfo {\r\n    return this._ProUserInfo;\r\n  }\r\n\r\n  get token(): ProAuthToken {\r\n    const token_string = sessionStorage[CACHE_KEY_TOKEN];\r\n    if (token_string) {\r\n      this._token = JSON.parse(token_string);\r\n    }\r\n    return this._token;\r\n  }\r\n\r\n  get isUserAuthenticate(): boolean {\r\n    return !valueIsNull(this.token) && !valueIsNull(this.token.access_token);\r\n  }\r\n\r\n  logout(): void {\r\n    sessionStorage.removeItem(CACHE_KEY_TOKEN);\r\n    this.proUserInfoService.removeFromStorage();\r\n  }\r\n\r\n  getTokenPayload(token = this.token.access_token): ProAccessToken {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n\r\n  get userId(): string {\r\n    return this.getTokenPayload().userid;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProUser } from '../../../../../services/pro-authorization/models/pro-user';\r\nimport { ProAuthService } from '../../../../../services/pro-authorization/services/pro-auth/pro-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProLoginDefaultsResolver  {\r\n  constructor(private proAuthService: ProAuthService) { }\r\n  resolve(\r\n    _route?: ActivatedRouteSnapshot,\r\n    _state?: RouterStateSnapshot\r\n  ): Observable<ProUser> {\r\n    return this.proAuthService.requestLoginDefaults();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PoNotification, PoNotificationService, PoToasterOrientation } from '@po-ui/ng-components';\r\n\r\nimport { ProJsToAdvplService } from './../../pro-js-to-advpl/services/pro-js-to-advpl.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProMessageService {\r\n  constructor(\r\n    private poNotificationService: PoNotificationService,\r\n    private advplService: ProJsToAdvplService\r\n  ) {\r\n    if (this.advplService.protheusConnected()) {\r\n      this.advplService.buildListener('showMessage', ({ protheusResponse }) => {\r\n        if (protheusResponse.length === 0) {\r\n          return;\r\n        } else {\r\n          const messageObject = JSON.parse(protheusResponse);\r\n          this.showMessage(messageObject.message, messageObject.type);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // Método criado para evitar que sejam exibidas duas mensagens para o usuário (uma do Angular e outra do Protheus)\r\n  showOneMessage(message: string, type: number = 2) {\r\n    if (!this.advplService.protheusConnected()) {\r\n      this.showMessage(message, type);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Exibe uma mensagem via notificação\r\n   * @param message Mensagem\r\n   * @param type Tipo da mensage, como erro, informação etc\r\n   */\r\n  showMessage(message: string, type: number = 2) {\r\n    const notification: PoNotification = {\r\n      message,\r\n      orientation: PoToasterOrientation.Top\r\n    };\r\n    if (type === 1) {\r\n      this.poNotificationService.warning(notification);\r\n    }\r\n    if (type === 2) {\r\n      this.poNotificationService.error(notification);\r\n    }\r\n    if (type === 3) {\r\n      this.poNotificationService.information(notification);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Executa a mudança do idioma no Protheus via Observable do advplService\r\n   * @param language idioma escolhido via po-select\r\n   * @returns Observable de boolean da confirmação da troca do idioma no BackEnd\r\n   */\r\n  changeLanguage(language: string): Observable<boolean>{\r\n    if (this.advplService.protheusConnected()) {\r\n      return this.advplService.buildObservable<boolean>(\r\n        ({ protheusResponse, subscriber }) => {\r\n          if (protheusResponse !== 'true') {\r\n            subscriber.error({\r\n              status: 400,\r\n              description: 'language could not be changed'\r\n            });\r\n          } else {\r\n            subscriber.next();\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          sendInfo: {\r\n            type: 'changeLanguage',\r\n            content: language\r\n          },\r\n          autoDestruct: true,\r\n          receiveId: 'changeLanguage'\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export const ProThemeTotvsLight = {\r\n  '--color-brand-01-lightest': '#d7f0fe',\r\n  '--color-brand-01-lighter': '#9cd8fc',\r\n  '--color-brand-01-light': '#6bc5fa',\r\n  '--color-brand-01-base': '#045b8f',\r\n  '--color-brand-01-dark': '#013f65',\r\n  '--color-brand-01-darker': '#002944',\r\n  '--color-brand-01-darkest': '#00182b',\r\n\r\n  '--color-action-default': '#045b8f',\r\n  '--color-action-hover': '#013f65',\r\n  '--color-action-pressed': '#002944',\r\n  '--color-action-disabled': '#b2b2b2',\r\n  '--color-action-focus': '#00182b',\r\n\r\n  '--color-neutral-light-00': '#ffffff',\r\n  '--color-neutral-light-05': '#f2f2f2',\r\n  '--color-neutral-light-10': '#e5e5e5',\r\n  '--color-neutral-light-20': '#cccccc',\r\n  '--color-neutral-light-30': '#b2b2b2',\r\n\r\n  '--color-neutral-mid-40': '#999999',\r\n  '--color-neutral-mid-60': '#666666',\r\n\r\n  '--color-neutral-dark-70': '#4d4d4d',\r\n  '--color-neutral-dark-80': '#363636',\r\n  '--color-neutral-dark-90': '#1a1a1a',\r\n  '--color-neutral-dark-95': '#0d0d0d',\r\n\r\n  '--color-brand-02-base': '#045b8f',\r\n  '--color-brand-03-base': '#045b8f',\r\n\r\n  '--color-feedback-negative-lightest': '#f6e6e5',\r\n  '--color-feedback-negative-lighter': '#e3aeab',\r\n  '--color-feedback-negative-light': '#d58581',\r\n  '--color-feedback-negative-base': '#be3e37',\r\n  '--color-feedback-negative-dark': '#9b2d27',\r\n  '--color-feedback-negative-darker': '#72211d',\r\n  '--color-feedback-negative-darkerst': '#4a1512',\r\n\r\n  '--color-feedback-info-lightest': '#e3e9f7',\r\n  '--color-feedback-info-lighter': '#b0c1e8',\r\n  '--color-feedback-info-light': '#7996d7',\r\n  '--color-feedback-info-base': '#23489f',\r\n  '--color-feedback-info-dark': '#173782',\r\n  '--color-feedback-info-darker': '#0f2557',\r\n  '--color-feedback-info-darkerst': '#081536',\r\n\r\n  '--color-feedback-positive-lightest': '#def7ed',\r\n  '--color-feedback-positive-lighter': '#7ecead',\r\n  '--color-feedback-positive-light': '#41b483',\r\n  '--color-feedback-positive-base': '#107048',\r\n  '--color-feedback-positive-dark': '#0f5236',\r\n  '--color-feedback-positive-darker': '#083a25',\r\n  '--color-feedback-positive-darkerst': '#002415',\r\n\r\n  '--color-feedback-warning-lightest': '#fcf6e3',\r\n  '--color-feedback-warning-lighter': '#f7dd97',\r\n  '--color-feedback-warning-light': '#f1cd6a',\r\n  '--color-feedback-warning-base': '#efba2a',\r\n  '--color-feedback-warning-dark': '#d8a20e',\r\n  '--color-feedback-warning-darker': '#705200',\r\n  '--color-feedback-warning-darkerst': '#473400',\r\n};\r\n\r\nexport const ProThemeTotvsDark = {\r\n  '--color-brand-01-lightest': '#051f31',\r\n  '--color-brand-01-lighter': '#004064',\r\n  '--color-brand-01-light': '#00659a',\r\n  '--color-brand-01-base': '#0079b8',\r\n  '--color-brand-01-dark': '#3dadfa',\r\n  '--color-brand-01-darker': '#afd3fa',\r\n  '--color-brand-01-darkest': '#e3eefb',\r\n\r\n  '--color-action-default': '#3dadfa',\r\n  '--color-action-hover': '#afd3fa',\r\n  '--color-action-pressed': '#e3eefb',\r\n  '--color-action-disabled': '#7c7c7c',\r\n  '--color-action-focus': '#e3eefb',\r\n\r\n  '--color-neutral-light-00': '#1c1c1c',\r\n  '--color-neutral-light-05': '#202020',\r\n  '--color-neutral-light-10': '#2b2b2b',\r\n  '--color-neutral-light-20': '#3b3b3b',\r\n  '--color-neutral-light-30': '#5a5a5a',\r\n\r\n  '--color-neutral-mid-40': '#7c7c7c',\r\n  '--color-neutral-mid-60': '#a1a1a1',\r\n\r\n  '--color-neutral-dark-70': '#c1c1c1',\r\n  '--color-neutral-dark-80': '#d9d9d9',\r\n  '--color-neutral-dark-90': '#eeeeee',\r\n  '--color-neutral-dark-95': '#fbfbfb',\r\n\r\n  '--color-brand-02-base': '#0079b8',\r\n  '--color-brand-03-base': '#0079b8',\r\n\r\n  '--color-feedback-negative-lightest': '#4a1512',\r\n  '--color-feedback-negative-lighter': '#72211d',\r\n  '--color-feedback-negative-light': '#9b2d27',\r\n  '--color-feedback-negative-base': '#be3e37',\r\n  '--color-feedback-negative-dark': '#d58581',\r\n  '--color-feedback-negative-darker': '#e3aeab',\r\n  '--color-feedback-negative-darkerst': '#f6e6e5',\r\n\r\n  '--color-feedback-info-lightest': '#081536',\r\n  '--color-feedback-info-lighter': '#0f2557',\r\n  '--color-feedback-info-light': '#173782',\r\n  '--color-feedback-info-base': '#23489f',\r\n  '--color-feedback-info-dark': '#7996d7',\r\n  '--color-feedback-info-darker': '#b0c1e8',\r\n  '--color-feedback-info-darkerst': '#e3e9f7',\r\n\r\n  '--color-feedback-positive-lightest': '#002415',\r\n  '--color-feedback-positive-lighter': '#083a25',\r\n  '--color-feedback-positive-light': '#0f5236',\r\n  '--color-feedback-positive-base': '#107048',\r\n  '--color-feedback-positive-dark': '#41b483',\r\n  '--color-feedback-positive-darker': '#7ecead',\r\n  '--color-feedback-positive-darkerst': '#def7ed',\r\n\r\n  '--color-feedback-warning-lightest': '#473400',\r\n  '--color-feedback-warning-lighter': '#705200',\r\n  '--color-feedback-warning-light': '#d8a20e',\r\n  '--color-feedback-warning-base': '#efba2a',\r\n  '--color-feedback-warning-dark': '#f1cd6a',\r\n  '--color-feedback-warning-darker': '#f7dd97',\r\n  '--color-feedback-warning-darkerst': '#fcf6e3',\r\n};\r\n\r\nexport const ProThemeSunsetLight = {\r\n  '--color-brand-01-lightest': '#ffebee',\r\n  '--color-brand-01-lighter': '#ef9a9a',\r\n  '--color-brand-01-light': '#ef5350',\r\n  '--color-brand-01-base': '#c20c18',\r\n  '--color-brand-01-dark': '#a5131a',\r\n  '--color-brand-01-darker': '#5d0d11',\r\n  '--color-brand-01-darkest': '#400a08',\r\n\r\n  '--color-action-default': '#c20c18',\r\n  '--color-action-hover': '#a5131a',\r\n  '--color-action-pressed': '#5d0d11',\r\n  '--color-action-disabled': '#b2b2b2',\r\n  '--color-action-focus': '#400a08',\r\n\r\n  '--color-neutral-light-00': '#ffffff',\r\n  '--color-neutral-light-05': '#f2f2f2',\r\n  '--color-neutral-light-10': '#e5e5e5',\r\n  '--color-neutral-light-20': '#cccccc',\r\n  '--color-neutral-light-30': '#b2b2b2',\r\n\r\n  '--color-neutral-mid-40': '#999999',\r\n  '--color-neutral-mid-60': '#666666',\r\n\r\n  '--color-neutral-dark-70': '#4d4d4d',\r\n  '--color-neutral-dark-80': '#363636',\r\n  '--color-neutral-dark-90': '#1a1a1a',\r\n  '--color-neutral-dark-95': '#0d0d0d',\r\n\r\n  '--color-brand-02-base': '#c20c18',\r\n  '--color-brand-03-base': '#c20c18',\r\n\r\n  '--color-feedback-negative-lightest': '#f1e8fd',\r\n  '--color-feedback-negative-lighter': '#d691e1',\r\n  '--color-feedback-negative-light': '#ba6bcd',\r\n  '--color-feedback-negative-base': '#7b1fa2',\r\n  '--color-feedback-negative-dark': '#4a148c',\r\n  '--color-feedback-negative-darker': '#3e166f',\r\n  '--color-feedback-negative-darkerst': '#1e0a36',\r\n\r\n  '--color-feedback-info-lightest': '#e3e9f7',\r\n  '--color-feedback-info-lighter': '#b0c1e8',\r\n  '--color-feedback-info-light': '#7996d7',\r\n  '--color-feedback-info-base': '#23489f',\r\n  '--color-feedback-info-dark': '#173782',\r\n  '--color-feedback-info-darker': '#0f2557',\r\n  '--color-feedback-info-darkerst': '#081536',\r\n\r\n  '--color-feedback-positive-lightest': '#def7ed',\r\n  '--color-feedback-positive-lighter': '#7ecead',\r\n  '--color-feedback-positive-light': '#41b483',\r\n  '--color-feedback-positive-base': '#107048',\r\n  '--color-feedback-positive-dark': '#0f5236',\r\n  '--color-feedback-positive-darker': '#083a25',\r\n  '--color-feedback-positive-darkerst': '#002415',\r\n\r\n  '--color-feedback-warning-lightest': '#fcf6e3',\r\n  '--color-feedback-warning-lighter': '#f7dd97',\r\n  '--color-feedback-warning-light': '#f1cd6a',\r\n  '--color-feedback-warning-base': '#efba2a',\r\n  '--color-feedback-warning-dark': '#d8a20e',\r\n  '--color-feedback-warning-darker': '#705200',\r\n  '--color-feedback-warning-darkerst': '#473400',\r\n};\r\n","import {\r\n  PoTheme,\r\n  poThemeDefaultActions,\r\n  poThemeDefaultDarkValues,\r\n  poThemeDefaultFeedback,\r\n  poThemeDefaultLightValues,\r\n  poThemeDefaultNeutrals,\r\n  PoThemeTokens,\r\n  PoThemeTypeEnum,\r\n} from '@po-ui/ng-components';\r\n\r\nimport {\r\n  ProThemeSunsetLight,\r\n  ProThemeTotvsDark,\r\n  ProThemeTotvsLight,\r\n} from '../constants/pro-theme.constants';\r\n\r\n/**\r\n * @description Enum que indica quais são os temas disponíveis já criados pelo\r\n * protheus lib service\r\n */\r\nexport enum ProThemeEnum {\r\n  proThemeTotvsClassic = 'proThemeTotvsClassic',\r\n  proThemeTotvsSunset = 'proThemeTotvsSunset',\r\n}\r\n/**\r\n * @description Interface que indica a estrutura de opções de um tema,\r\n * podendo conter de forma opcional, o tema light e o dark\r\n */\r\nexport interface ProThemeTokens extends PoThemeTokens {\r\n  light?: PoThemeTokens;\r\n  dark?: PoThemeTokens;\r\n}\r\n\r\n/**\r\n * @description Classe de tema contendo estrutura necessária para o serviço PoThemeService\r\n */\r\nexport class ProTheme {\r\n  private _name: string;\r\n  private _active?: PoThemeTypeEnum;\r\n  private _type: ProThemeTokens;\r\n\r\n  constructor() {\r\n    this._name = '';\r\n    this._type = this.getTypeStructure();\r\n    this._active = PoThemeTypeEnum.light;\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public set name(name: string) {\r\n    this._name = name;\r\n  }\r\n\r\n  public get active(): PoThemeTypeEnum {\r\n    return this._active;\r\n  }\r\n\r\n  public set active(active: PoThemeTypeEnum) {\r\n    this._active = active;\r\n  }\r\n\r\n  public get type(): ProThemeTokens {\r\n    return this._type;\r\n  }\r\n\r\n  public set type(type: ProThemeTokens) {\r\n    this._type = type;\r\n  }\r\n\r\n  /**\r\n   * @description Método para consultar quais são os temas disponíveis para configuração\r\n   * automática, sendo uma lista de opções do ProThemeEnum\r\n   */\r\n  public availableThemes(): Array<ProThemeEnum> {\r\n    const themes = Object.values(ProThemeEnum);\r\n    return themes;\r\n  }\r\n\r\n  /**\r\n   * @description Método para configurar o tema atual do aplicativo\r\n   *\r\n   */\r\n  public setTheme(theme: ProThemeEnum) {\r\n    let _theme: ProTheme;\r\n\r\n    switch (theme) {\r\n      case ProThemeEnum.proThemeTotvsClassic:\r\n        _theme = new ProThemeTotvsClassic();\r\n        break;\r\n      case ProThemeEnum.proThemeTotvsSunset:\r\n        _theme = new ProThemeTotvsSunset();\r\n        break;\r\n    }\r\n\r\n    this.name = _theme.name;\r\n    this.active = _theme.active;\r\n    this.type = _theme.type;\r\n  }\r\n\r\n  /**\r\n   * @description Método para devolver a estrutura solicitada do PoTheme para configuração\r\n   * do aplicativo\r\n   */\r\n  private getTypeStructure(): ProThemeTokens {\r\n    return {\r\n      light: {\r\n        color: {\r\n          brand: {\r\n            '01': {\r\n              lightest: '',\r\n              lighter: '',\r\n              light: '',\r\n              base: '',\r\n              dark: '',\r\n              darker: '',\r\n              darkest: '',\r\n            },\r\n            '02': {\r\n              base: '',\r\n            },\r\n            '03': {\r\n              base: '',\r\n            },\r\n          },\r\n          action: {\r\n            ...poThemeDefaultActions,\r\n          },\r\n          feedback: {\r\n            ...poThemeDefaultFeedback,\r\n            info: {\r\n              ...poThemeDefaultFeedback.info,\r\n              base: '',\r\n            },\r\n          },\r\n          neutral: {\r\n            ...poThemeDefaultNeutrals,\r\n          },\r\n        },\r\n      },\r\n      dark: {\r\n        color: {\r\n          brand: {\r\n            '01': {\r\n              lightest: '',\r\n              lighter: '',\r\n              light: '',\r\n              base: '',\r\n              dark: '',\r\n              darker: '',\r\n              darkest: '',\r\n            },\r\n            '02': {\r\n              base: '',\r\n            },\r\n            '03': {\r\n              base: '',\r\n            },\r\n          },\r\n          action: {\r\n            default: '',\r\n            hover: '',\r\n            pressed: '',\r\n            disabled: '',\r\n            focus: '',\r\n          },\r\n          feedback: {\r\n            ...poThemeDefaultFeedback,\r\n            info: {\r\n              ...poThemeDefaultFeedback.info,\r\n              base: '',\r\n            },\r\n          },\r\n          neutral: {\r\n            light: {\r\n              '00': '',\r\n              '05': '',\r\n              '10': '',\r\n              '20': '',\r\n              '30': '',\r\n            },\r\n            mid: {\r\n              '40': '',\r\n              '60': '',\r\n            },\r\n            dark: {\r\n              '70': '',\r\n              '80': '',\r\n              '90': '',\r\n              '95': '',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * @description Classe filha que extende a ProTheme, com os tokens de cores do\r\n * protheus clássico\r\n */\r\nexport class ProThemeTotvsClassic extends ProTheme implements PoTheme {\r\n  constructor() {\r\n    super();\r\n    this.name = 'proThemeTotvsClassic';\r\n    this.type = this.getProThemeTotvsClassic();\r\n  }\r\n\r\n  private getProThemeTotvsClassic(): ProThemeTokens {\r\n    return {\r\n      light: this.getProThemeTotvsClassicTokensDark(),\r\n      dark: this.getProThemeTotvsClassicTokensLight(),\r\n    };\r\n  }\r\n\r\n  private getProThemeTotvsClassicTokensLight(): PoThemeTokens {\r\n    return {\r\n      color: {\r\n        brand: {\r\n          '01': {\r\n            lightest: ProThemeTotvsDark['--color-brand-01-lightest'],\r\n            lighter: ProThemeTotvsDark['--color-brand-01-lighter'],\r\n            light: ProThemeTotvsDark['--color-brand-01-light'],\r\n            base: ProThemeTotvsDark['--color-brand-01-base'],\r\n            dark: ProThemeTotvsDark['--color-brand-01-dark'],\r\n            darker: ProThemeTotvsDark['--color-brand-01-darker'],\r\n            darkest: ProThemeTotvsDark['--color-brand-01-darkest'],\r\n          },\r\n          '02': {\r\n            base: ProThemeTotvsDark['--color-brand-02-base'],\r\n          },\r\n          '03': {\r\n            base: ProThemeTotvsDark['--color-brand-03-base'],\r\n          },\r\n        },\r\n        action: {\r\n          default: ProThemeTotvsDark['--color-action-default'],\r\n          hover: ProThemeTotvsDark['--color-action-hover'],\r\n          pressed: ProThemeTotvsDark['--color-action-pressed'],\r\n          disabled: ProThemeTotvsDark['--color-action-disabled'],\r\n          focus: ProThemeTotvsDark['--color-action-focus'],\r\n        },\r\n        neutral: {\r\n          light: {\r\n            '10': ProThemeTotvsDark['--color-neutral-light-10'],\r\n            '20': ProThemeTotvsDark['--color-neutral-light-20'],\r\n            '30': ProThemeTotvsDark['--color-neutral-light-30'],\r\n            '00': ProThemeTotvsDark['--color-neutral-light-00'],\r\n            '05': ProThemeTotvsDark['--color-neutral-light-05'],\r\n          },\r\n          mid: {\r\n            '40': ProThemeTotvsDark['--color-neutral-mid-40'],\r\n            '60': ProThemeTotvsDark['--color-neutral-mid-60'],\r\n          },\r\n          dark: {\r\n            '70': ProThemeTotvsDark['--color-neutral-dark-70'],\r\n            '80': ProThemeTotvsDark['--color-neutral-dark-80'],\r\n            '90': ProThemeTotvsDark['--color-neutral-dark-90'],\r\n            '95': ProThemeTotvsDark['--color-neutral-dark-95'],\r\n          },\r\n        },\r\n        feedback: {\r\n          info: {\r\n            base: ProThemeTotvsDark['--color-feedback-info-base'],\r\n            lightest: ProThemeTotvsDark['--color-feedback-info-lightest'],\r\n            lighter: ProThemeTotvsDark['--color-brand-info-lighter'],\r\n            light: ProThemeTotvsDark['--color-feedback-info-light'],\r\n            dark: ProThemeTotvsDark['--color-feedback-info-dark'],\r\n            darker: ProThemeTotvsDark['--color-feedback-info-darker'],\r\n            darkest: ProThemeTotvsDark['--color-feedback-info-darkerst'],\r\n          },\r\n          negative: {\r\n            base: ProThemeTotvsDark['--color-feedback-negative-base'],\r\n            lightest: ProThemeTotvsDark['--color-feedback-negative-lightest'],\r\n            lighter: ProThemeTotvsDark['--color-brand-negative-lighter'],\r\n            light: ProThemeTotvsDark['--color-feedback-negative-light'],\r\n            dark: ProThemeTotvsDark['--color-feedback-negative-dark'],\r\n            darker: ProThemeTotvsDark['--color-feedback-negative-darker'],\r\n            darkest: ProThemeTotvsDark['--color-feedback-negative-darkerst'],\r\n          },\r\n          positive: {\r\n            base: ProThemeTotvsDark['--color-feedback-positive-base'],\r\n            lightest: ProThemeTotvsDark['--color-feedback-positive-lightest'],\r\n            lighter: ProThemeTotvsDark['--color-brand-positive-lighter'],\r\n            light: ProThemeTotvsDark['--color-feedback-positive-light'],\r\n            dark: ProThemeTotvsDark['--color-feedback-positive-dark'],\r\n            darker: ProThemeTotvsDark['--color-feedback-positive-darker'],\r\n            darkest: ProThemeTotvsDark['--color-feedback-positive-darkerst'],\r\n          },\r\n          warning: {\r\n            base: ProThemeTotvsDark['--color-feedback-warning-base'],\r\n            lightest: ProThemeTotvsDark['--color-feedback-warning-lightest'],\r\n            lighter: ProThemeTotvsDark['--color-brand-warning-lighter'],\r\n            light: ProThemeTotvsDark['--color-feedback-warning-light'],\r\n            dark: ProThemeTotvsDark['--color-feedback-warning-dark'],\r\n            darker: ProThemeTotvsDark['--color-feedback-warning-darker'],\r\n            darkest: ProThemeTotvsDark['--color-feedback-warning-darkerst'],\r\n          },\r\n        },\r\n      },\r\n      onRoot: {\r\n        ...poThemeDefaultDarkValues.onRoot,\r\n      },\r\n      perComponent: {\r\n        ...poThemeDefaultDarkValues.perComponent,\r\n      },\r\n    };\r\n  }\r\n\r\n  private getProThemeTotvsClassicTokensDark(): PoThemeTokens {\r\n    return {\r\n      color: {\r\n        brand: {\r\n          '01': {\r\n            lightest: ProThemeTotvsLight['--color-brand-01-lightest'],\r\n            lighter: ProThemeTotvsLight['--color-brand-01-lighter'],\r\n            light: ProThemeTotvsLight['--color-brand-01-light'],\r\n            base: ProThemeTotvsLight['--color-brand-01-base'],\r\n            dark: ProThemeTotvsLight['--color-brand-01-dark'],\r\n            darker: ProThemeTotvsLight['--color-brand-01-darker'],\r\n            darkest: ProThemeTotvsLight['--color-brand-01-darkest'],\r\n          },\r\n          '02': {\r\n            base: ProThemeTotvsLight['--color-brand-02-base'],\r\n          },\r\n          '03': {\r\n            base: ProThemeTotvsLight['--color-brand-03-base'],\r\n          },\r\n        },\r\n        action: {\r\n          default: ProThemeTotvsLight['--color-action-default'],\r\n          hover: ProThemeTotvsLight['--color-action-hover'],\r\n          pressed: ProThemeTotvsLight['--color-action-pressed'],\r\n          disabled: ProThemeTotvsLight['--color-action-disabled'],\r\n          focus: ProThemeTotvsLight['--color-action-focus'],\r\n        },\r\n        neutral: {\r\n          light: {\r\n            '10': ProThemeTotvsLight['--color-neutral-light-10'],\r\n            '20': ProThemeTotvsLight['--color-neutral-light-20'],\r\n            '30': ProThemeTotvsLight['--color-neutral-light-30'],\r\n            '00': ProThemeTotvsLight['--color-neutral-light-00'],\r\n            '05': ProThemeTotvsLight['--color-neutral-light-05'],\r\n          },\r\n          mid: {\r\n            '40': ProThemeTotvsLight['--color-neutral-mid-40'],\r\n            '60': ProThemeTotvsLight['--color-neutral-mid-60'],\r\n          },\r\n          dark: {\r\n            '70': ProThemeTotvsLight['--color-neutral-dark-70'],\r\n            '80': ProThemeTotvsLight['--color-neutral-dark-80'],\r\n            '90': ProThemeTotvsLight['--color-neutral-dark-90'],\r\n            '95': ProThemeTotvsLight['--color-neutral-dark-95'],\r\n          },\r\n        },\r\n        feedback: {\r\n          info: {\r\n            base: ProThemeTotvsLight['--color-feedback-info-base'],\r\n            lightest: ProThemeTotvsLight['--color-feedback-info-lightest'],\r\n            lighter: ProThemeTotvsLight['--color-brand-info-lighter'],\r\n            light: ProThemeTotvsLight['--color-feedback-info-light'],\r\n            dark: ProThemeTotvsLight['--color-feedback-info-dark'],\r\n            darker: ProThemeTotvsLight['--color-feedback-info-darker'],\r\n            darkest: ProThemeTotvsLight['--color-feedback-info-darkerst'],\r\n          },\r\n          negative: {\r\n            base: ProThemeTotvsLight['--color-feedback-negative-base'],\r\n            lightest: ProThemeTotvsLight['--color-feedback-negative-lightest'],\r\n            lighter: ProThemeTotvsLight['--color-brand-negative-lighter'],\r\n            light: ProThemeTotvsLight['--color-feedback-negative-light'],\r\n            dark: ProThemeTotvsLight['--color-feedback-negative-dark'],\r\n            darker: ProThemeTotvsLight['--color-feedback-negative-darker'],\r\n            darkest: ProThemeTotvsLight['--color-feedback-negative-darkerst'],\r\n          },\r\n          positive: {\r\n            base: ProThemeTotvsLight['--color-feedback-positive-base'],\r\n            lightest: ProThemeTotvsLight['--color-feedback-positive-lightest'],\r\n            lighter: ProThemeTotvsLight['--color-brand-positive-lighter'],\r\n            light: ProThemeTotvsLight['--color-feedback-positive-light'],\r\n            dark: ProThemeTotvsLight['--color-feedback-positive-dark'],\r\n            darker: ProThemeTotvsLight['--color-feedback-positive-darker'],\r\n            darkest: ProThemeTotvsLight['--color-feedback-positive-darkerst'],\r\n          },\r\n          warning: {\r\n            base: ProThemeTotvsLight['--color-feedback-warning-base'],\r\n            lightest: ProThemeTotvsLight['--color-feedback-warning-lightest'],\r\n            lighter: ProThemeTotvsLight['--color-brand-warning-lighter'],\r\n            light: ProThemeTotvsLight['--color-feedback-warning-light'],\r\n            dark: ProThemeTotvsLight['--color-feedback-warning-dark'],\r\n            darker: ProThemeTotvsLight['--color-feedback-warning-darker'],\r\n            darkest: ProThemeTotvsLight['--color-feedback-warning-darkerst'],\r\n          },\r\n        },\r\n      },\r\n      onRoot: {\r\n        ...poThemeDefaultLightValues.onRoot,\r\n      },\r\n      perComponent: {\r\n        ...poThemeDefaultLightValues.perComponent,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * @description Classe filha que extende a ProTheme, com os tokens de cores do\r\n * protheus sunset\r\n */\r\nexport class ProThemeTotvsSunset extends ProTheme implements PoTheme {\r\n  constructor() {\r\n    super();\r\n    this.name = 'proThemeTotvsSunset';\r\n    this.type = this.getProThemeTotvsSunset();\r\n  }\r\n\r\n  private getProThemeTotvsSunset(): ProThemeTokens {\r\n    return {\r\n      light: this.getProThemeTotvsSunsetTokensLight(),\r\n    };\r\n  }\r\n\r\n  private getProThemeTotvsSunsetTokensLight(): PoThemeTokens {\r\n    return {\r\n      color: {\r\n        brand: {\r\n          '01': {\r\n            lightest: ProThemeSunsetLight['--color-brand-01-lightest'],\r\n            lighter: ProThemeSunsetLight['--color-brand-01-lighter'],\r\n            light: ProThemeSunsetLight['--color-brand-01-light'],\r\n            base: ProThemeSunsetLight['--color-brand-01-base'],\r\n            dark: ProThemeSunsetLight['--color-brand-01-dark'],\r\n            darker: ProThemeSunsetLight['--color-brand-01-darker'],\r\n            darkest: ProThemeSunsetLight['--color-brand-01-darkest'],\r\n          },\r\n          '02': {\r\n            base: ProThemeSunsetLight['--color-brand-02-base'],\r\n          },\r\n          '03': {\r\n            base: ProThemeSunsetLight['--color-brand-03-base'],\r\n          },\r\n        },\r\n        action: {\r\n          default: ProThemeSunsetLight['--color-action-default'],\r\n          hover: ProThemeSunsetLight['--color-action-hover'],\r\n          pressed: ProThemeSunsetLight['--color-action-pressed'],\r\n          disabled: ProThemeSunsetLight['--color-action-disabled'],\r\n          focus: ProThemeSunsetLight['--color-action-focus'],\r\n        },\r\n        neutral: {\r\n          light: {\r\n            '10': ProThemeSunsetLight['--color-neutral-light-10'],\r\n            '20': ProThemeSunsetLight['--color-neutral-light-20'],\r\n            '30': ProThemeSunsetLight['--color-neutral-light-30'],\r\n            '00': ProThemeSunsetLight['--color-neutral-light-00'],\r\n            '05': ProThemeSunsetLight['--color-neutral-light-05'],\r\n          },\r\n          mid: {\r\n            '40': ProThemeSunsetLight['--color-neutral-mid-40'],\r\n            '60': ProThemeSunsetLight['--color-neutral-mid-60'],\r\n          },\r\n          dark: {\r\n            '70': ProThemeSunsetLight['--color-neutral-dark-70'],\r\n            '80': ProThemeSunsetLight['--color-neutral-dark-80'],\r\n            '90': ProThemeSunsetLight['--color-neutral-dark-90'],\r\n            '95': ProThemeSunsetLight['--color-neutral-dark-95'],\r\n          },\r\n        },\r\n        feedback: {\r\n          info: {\r\n            base: ProThemeSunsetLight['--color-feedback-info-base'],\r\n            lightest: ProThemeSunsetLight['--color-feedback-info-lightest'],\r\n            lighter: ProThemeSunsetLight['--color-brand-info-lighter'],\r\n            light: ProThemeSunsetLight['--color-feedback-info-light'],\r\n            dark: ProThemeSunsetLight['--color-feedback-info-dark'],\r\n            darker: ProThemeSunsetLight['--color-feedback-info-darker'],\r\n            darkest: ProThemeSunsetLight['--color-feedback-info-darkerst'],\r\n          },\r\n          negative: {\r\n            base: ProThemeSunsetLight['--color-feedback-negative-base'],\r\n            lightest: ProThemeSunsetLight['--color-feedback-negative-lightest'],\r\n            lighter: ProThemeSunsetLight['--color-brand-negative-lighter'],\r\n            light: ProThemeSunsetLight['--color-feedback-negative-light'],\r\n            dark: ProThemeSunsetLight['--color-feedback-negative-dark'],\r\n            darker: ProThemeSunsetLight['--color-feedback-negative-darker'],\r\n            darkest: ProThemeSunsetLight['--color-feedback-negative-darkerst'],\r\n          },\r\n          positive: {\r\n            base: ProThemeSunsetLight['--color-feedback-positive-base'],\r\n            lightest: ProThemeSunsetLight['--color-feedback-positive-lightest'],\r\n            lighter: ProThemeSunsetLight['--color-brand-positive-lighter'],\r\n            light: ProThemeSunsetLight['--color-feedback-positive-light'],\r\n            dark: ProThemeSunsetLight['--color-feedback-positive-dark'],\r\n            darker: ProThemeSunsetLight['--color-feedback-positive-darker'],\r\n            darkest: ProThemeSunsetLight['--color-feedback-positive-darkerst'],\r\n          },\r\n          warning: {\r\n            base: ProThemeSunsetLight['--color-feedback-warning-base'],\r\n            lightest: ProThemeSunsetLight['--color-feedback-warning-lightest'],\r\n            lighter: ProThemeSunsetLight['--color-brand-warning-lighter'],\r\n            light: ProThemeSunsetLight['--color-feedback-warning-light'],\r\n            dark: ProThemeSunsetLight['--color-feedback-warning-dark'],\r\n            darker: ProThemeSunsetLight['--color-feedback-warning-darker'],\r\n            darkest: ProThemeSunsetLight['--color-feedback-warning-darkerst'],\r\n          },\r\n        },\r\n      },\r\n      onRoot: {\r\n        ...poThemeDefaultLightValues.onRoot,\r\n      },\r\n      perComponent: {\r\n        ...poThemeDefaultLightValues.perComponent,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PoThemeService, PoThemeTypeEnum } from '@po-ui/ng-components';\r\n\r\nimport { ProTheme } from '../models/pro-theme';\r\nimport { ProThemeEnum } from './../models/pro-theme';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProThemeService {\r\n  public proTheme: ProTheme = new ProTheme();\r\n  constructor(private poTheme: PoThemeService) {}\r\n\r\n  /**\r\n   * @description Método para configurar o tema do aplicativo com base\r\n   * na configuração da localStorage - ProTheme\r\n   */\r\n  public setTheme(): void {\r\n    const sessionProtheusTheme = this.getProtheusConfig();\r\n\r\n    switch (sessionProtheusTheme?.Configuration) {\r\n      case 0: //totvs light theme\r\n        this.proTheme.setTheme(ProThemeEnum.proThemeTotvsClassic);\r\n        this.poTheme.setTheme(this.proTheme, PoThemeTypeEnum.light);\r\n        break;\r\n      case 1: //totvs dark theme\r\n        this.proTheme.setTheme(ProThemeEnum.proThemeTotvsClassic);\r\n        this.poTheme.setTheme(this.proTheme, PoThemeTypeEnum.dark);\r\n        break;\r\n      case 2: //sunset light theme\r\n        this.proTheme.setTheme(ProThemeEnum.proThemeTotvsSunset);\r\n        this.poTheme.setTheme(this.proTheme, PoThemeTypeEnum.light);\r\n        break;\r\n      default:\r\n        this.proTheme.setTheme(ProThemeEnum.proThemeTotvsClassic);\r\n        this.poTheme.setTheme(this.proTheme, PoThemeTypeEnum.light);\r\n    }\r\n  }\r\n\r\n  private getProtheusConfig(): { Configuration: number; Description: string } {\r\n    return JSON.parse(localStorage.getItem('ProTheme'));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\n\r\nimport { valueIsNull } from '../../../util';\r\nimport { ProThemeService } from '../../pro-theme/services/pro-theme.service';\r\nimport { ProJsToAdvplService } from './../../pro-js-to-advpl/services/pro-js-to-advpl.service';\r\nimport { ProAppConfig } from './../models/pro-app-config';\r\n\r\nconst CACHE_KEY = 'ERPAPPCONFIG';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProAppConfigService {\r\n  private _ProAppConfig: ProAppConfig;\r\n  public readyEmitter = new EventEmitter();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService,\r\n    private themeService: ProThemeService\r\n  ) {\r\n    this.themeService.setTheme();\r\n  }\r\n\r\n  loadAppConfig(): Promise<object> {\r\n    return this.http\r\n      .get('assets/data/appConfig.json')\r\n      .toPromise()\r\n      .then((data) => {\r\n        const proAppConfig = <ProAppConfig>data;\r\n        // A função FwCallApp do Protheus pode ter subido a AppConfig com valores manipulados e não podemos sobreescrever\r\n        if (sessionStorage[CACHE_KEY] === undefined) {\r\n          sessionStorage[CACHE_KEY] = JSON.stringify(proAppConfig);\r\n        }\r\n        this.readyEmitter.emit();\r\n        return this.proAppConfig;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @description Método para encerrar o aplicativo\r\n   * @param ask Boolean que indica se o sistema deve perguntar antes de fechar o app\r\n   */\r\n  callAppClose(ask: boolean = true): void {\r\n    if (ask) {\r\n      this.advplService.AdvplCloseApp('force');\r\n    } else {\r\n      this.advplService.AdvplCloseApp();\r\n    }\r\n  }\r\n\r\n  insideProtheus(): boolean {\r\n    return this.advplService.protheusConnected();\r\n  }\r\n\r\n  get proAppConfig(): ProAppConfig {\r\n    if (valueIsNull(this._ProAppConfig)) {\r\n      this._ProAppConfig = JSON.parse(sessionStorage[CACHE_KEY]);\r\n    }\r\n    return this._ProAppConfig;\r\n  }\r\n\r\n  get nameApp(): string {\r\n    return this.proAppConfig.name;\r\n  }\r\n\r\n  get serverWithApiUrl(): string {\r\n    return valueIsNull(this.proAppConfig.api_baseUrl)\r\n      ? this.proAppConfig.serverBackend + this.proAppConfig.restEntryPoint\r\n      : this.proAppConfig.api_baseUrl;\r\n  }\r\n\r\n  get productLine(): string {\r\n    return this.proAppConfig.productLine;\r\n  }\r\n\r\n  get isProtheusRender(): boolean {\r\n    return this.productLine.toLowerCase() === 'protheus';\r\n  }\r\n\r\n  freeAppConfig(): void {\r\n    this._ProAppConfig = null;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ProLanguageList } from '../models/pro-language.list';\r\nimport { ProJsToAdvplService } from '../../pro-js-to-advpl';\r\nimport { ProAppConfigService } from '../../pro-app-config/services/pro-app-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProLanguageService {\r\n  private url = '/api/language/v1/protheus-suported-languages';\r\n  private useHTTP = true;\r\n\r\n  private EVENT_GET_LANGUAGES = 'getLanguages';\r\n  private EVENT_SET_LANGUAGES = 'setLanguages';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService,\r\n    private proAppConfigService: ProAppConfigService\r\n  ) { }\r\n\r\n  public getListOfLanguages(): Observable<ProLanguageList> {\r\n    if (this.proAppConfigService.isProtheusRender) {\r\n      if (this.useHTTP) {\r\n        return this.http.get<ProLanguageList>(this.url);\r\n      }\r\n\r\n      return this.getAdvplLanguages();\r\n    } else {\r\n      return of([]);\r\n    }\r\n  }\r\n\r\n  private getAdvplLanguages(): Observable<ProLanguageList> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    return this.advplService.buildObservable<ProLanguageList>(\r\n      ({ protheusResponse, subscriber }) => {\r\n        if (protheusResponse.length === 0) {\r\n          subscriber.error({\r\n            status: 400,\r\n            description: 'No language can be found'\r\n          });\r\n        } else {\r\n          const laguages: ProLanguageList = JSON.parse(protheusResponse);\r\n          subscriber.next(laguages);\r\n        }\r\n        subscriber.complete();\r\n      },\r\n      {\r\n        sendInfo: {\r\n          type: this.EVENT_GET_LANGUAGES\r\n        },\r\n        autoDestruct: true,\r\n        receiveId: this.EVENT_SET_LANGUAGES\r\n      }\r\n    );\r\n  }\r\n\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProLanguageService'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ProJsToAdvplService } from '../../pro-js-to-advpl';\r\nimport { ProAppConfigService } from '../../pro-app-config/services/pro-app-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProBrandService {\r\n  private url = '/api/brand/v1/erp-brand';\r\n  private useHTTP = true;\r\n\r\n  private EVENT_GET_BRANDCONTEXT = 'getBrandContext';\r\n  private EVENT_SET_BRANDCONTEXT = 'setBrandContext';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService,\r\n    private proAppConfigService: ProAppConfigService\r\n  ) { }\r\n\r\n  public getERPBrand(): Observable<string> {\r\n    if (this.proAppConfigService.isProtheusRender) {\r\n      if (this.useHTTP) {\r\n        return this.http.get(this.url, { responseType: 'text' });\r\n      }\r\n\r\n      return this.getAdvplBrandContext();\r\n    } else {\r\n      return of('TOTVS');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Cria um observable para a comunicação com o ADVPL\r\n   * @returns Observable de string sobre a marca do ambiente\r\n   */\r\n  private getAdvplBrandContext(): Observable<string> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    return this.advplService.buildObservable<string>(\r\n      ({ protheusResponse, subscriber }) => {\r\n        if (subscriber) {\r\n          if (protheusResponse.length === 0) {\r\n            subscriber.error({\r\n              status: 400,\r\n              description: 'Brand context not found'\r\n            });\r\n          } else {\r\n            subscriber.next(protheusResponse);\r\n          }\r\n          subscriber.complete();\r\n        }\r\n      },\r\n      {\r\n        sendInfo: {\r\n          type: this.EVENT_GET_BRANDCONTEXT\r\n        },\r\n        autoDestruct: true,\r\n        receiveId: this.EVENT_SET_BRANDCONTEXT\r\n      }\r\n    );\r\n  }\r\n\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProBrandService'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\nimport { PoI18nService, PoLanguage } from '@po-ui/ng-components';\r\nimport { PoPageLogin, PoPageLoginLiterals } from '@po-ui/ng-templates';\r\nimport { Subscription } from 'rxjs';\r\nimport { SubSink } from 'subsink';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { ProAuthService } from '../../../services/pro-authorization/services/pro-auth/pro-auth.service';\r\nimport { ProBrandService } from '../../../services/pro-brand/services/pro-brand.service';\r\nimport { ProLanguageList } from '../../../services/pro-language/models/pro-language.list';\r\nimport { ProLanguageService } from '../../../services/pro-language/services/pro-language.service';\r\nimport { ProUser } from './../../../services/pro-authorization/models/pro-user';\r\nimport { ProMessageService } from './../../../services/pro-messages/services/pro-message.service';\r\n\r\n@Component({\r\n  selector: 'pro-login',\r\n  templateUrl: './pro-login.component.html',\r\n  styleUrls: ['./pro-login.component.css'],\r\n})\r\nexport class ProLoginComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  private _nextRoute: string;\r\n  private _ProUserDefaults: ProUser;\r\n  private subs = new SubSink();\r\n\r\n  isLoading: boolean;\r\n  literals: any;\r\n  productLine: string;\r\n  brand: string;\r\n  customLiterals: PoPageLoginLiterals;\r\n  hideRememberUser: boolean;\r\n  loginValue: string;\r\n  inputFocus: string;\r\n  languages: Array<PoLanguage> = [];\r\n  logo = '';\r\n  productName = '';\r\n\r\n  @Input('pro-next-route') set nextRoute(value: string) {\r\n    this._nextRoute = value;\r\n  }\r\n\r\n  get nextRoute() {\r\n    return this._nextRoute ? this._nextRoute : '/session-settings';\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authService: ProAuthService,\r\n    private messageService: ProMessageService,\r\n    private poI18nService: PoI18nService,\r\n    private elRef: ElementRef,\r\n    private proLanguageService: ProLanguageService,\r\n    private proBrandService: ProBrandService\r\n  ) {\r\n    this.updateLangs();\r\n    const language = poI18nService.getShortLanguage();\r\n    poI18nService\r\n      .getLiterals({ language, context: 'login' })\r\n      .subscribe((literals) => {\r\n        this.updLiterals(literals);\r\n        this.updateBrand();\r\n      });\r\n    this.messageService.changeLanguage(language);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.logout();\r\n    this.isLoading = false;\r\n    this.subs.add(this.subscribeToResolver());\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setFocusToInput(this.inputFocus);\r\n  }\r\n\r\n  setFocusToInput(name: string): void {\r\n    const input = this.elRef.nativeElement.querySelector(\r\n      'input[name=\"' + name + '\"]'\r\n    );\r\n    if (input) {\r\n      setTimeout(() => input.focus(), 100);\r\n    }\r\n  }\r\n\r\n  private subscribeToResolver(): Subscription {\r\n    return this.route.data.subscribe((resultOfResolver) => {\r\n      this.validateResolverData(resultOfResolver);\r\n    });\r\n  }\r\n\r\n  subscribeToLogin(user): Subscription {\r\n    return this.authService.login(user).subscribe(\r\n      () => {\r\n        const redirect = this.authService.redirectUrl\r\n          ? this.authService.redirectUrl\r\n          : this.nextRoute;\r\n        this.resetLoading(this.router.navigate([redirect]));\r\n      },\r\n      (error) => {\r\n        this.isLoading = false;\r\n        this.messageService.showOneMessage(this.parseErrorMessage(error));\r\n        this.router.navigate(['/login']);\r\n      }\r\n    );\r\n  }\r\n\r\n  resetLoading(navigatePromise) {\r\n    if (navigatePromise) {\r\n      navigatePromise\r\n        .then(() => {\r\n          this.isLoading = false;\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          this.isLoading = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  validateResolverData(resolveData: Data) {\r\n    if (resolveData.defaultsLogin) {\r\n      this.userDefaults = resolveData.defaultsLogin;\r\n      this.hideRememberUser =\r\n        !resolveData.defaultsLogin.showBindUserToSO ||\r\n        resolveData.defaultsLogin.singleSignOnRequired;\r\n      this.loginValue = resolveData.defaultsLogin.cGetUser;\r\n      this.inputFocus = resolveData.defaultsLogin.setFocus;\r\n    }\r\n  }\r\n\r\n  set userDefaults(defaults: ProUser) {\r\n    this._ProUserDefaults = defaults;\r\n  }\r\n\r\n  get userDefaults() {\r\n    return this._ProUserDefaults;\r\n  }\r\n\r\n  onLoginSubmit(formData: PoPageLogin): void {\r\n    const user: ProUser = {\r\n      username: formData.login,\r\n      password: formData.password,\r\n      remember_user:\r\n        formData.rememberUser || this.userDefaults.singleSignOnRequired,\r\n    };\r\n    this.login(user);\r\n  }\r\n\r\n  /**\r\n   * @description metodo chamado na mudança do combox de idioma da tela de login\r\n   * @param language opção de idioma escolhido pelo usuário\r\n   * @returns void\r\n   */\r\n  onLanguageChange({ language }): void {\r\n    this.poI18nService.setLanguage(language, false);\r\n    this.poI18nService\r\n      .getLiterals({ language, context: 'login' })\r\n      .subscribe((literals) => {\r\n        this.updLiterals(literals);\r\n        this.updateProductName();\r\n      });\r\n\r\n    this.messageService.changeLanguage(language);\r\n  }\r\n\r\n  updLiterals(literals: any) {\r\n    this.literals = {\r\n      str0001: literals.str0001,\r\n      str0002: literals.str0002,\r\n      str0003: literals.str0003,\r\n      str0004: literals.str0004,\r\n      loginLabel: literals.str0005,\r\n      loginPlaceholder: literals.str0006,\r\n      passwordLabel: literals.str0007,\r\n      loginHint: literals.str0008,\r\n      rememberUserHint: literals.str0009,\r\n      passwordPlaceholder: '',\r\n    };\r\n  }\r\n\r\n  onLoginChange(login: string): void {\r\n    this.loginValue = login;\r\n  }\r\n\r\n  callRecoverPassword(): void {\r\n    this.authService.passwordRecovery(this.loginValue);\r\n  }\r\n\r\n  /**\r\n   * @description Método para obter o link de suporte\r\n   * @returns Retorna uma string contendo o link de suporte do ERP\r\n   */\r\n  supportLink(language = this.poI18nService.getShortLanguage()) {\r\n    let supportLink = 'http://suporte.totvs.com/';\r\n\r\n    if (this.brand == 'MA3') {\r\n      supportLink =\r\n        language === 'en'\r\n          ? 'https://www.national-platform.com/'\r\n          : 'https://www.national-platform.ru/';\r\n    } else {\r\n      if (language === 'es') {\r\n        supportLink = 'https://totvscst.zendesk.com/hc/es#home';\r\n      } else if (language === 'en') {\r\n        supportLink = 'https://totvscst.zendesk.com/hc/en-us#home';\r\n      }\r\n    }\r\n\r\n    return supportLink;\r\n  }\r\n\r\n  private login(user: ProUser): void {\r\n    if (this.isLoading) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    this.subs.add(this.subscribeToLogin(user));\r\n  }\r\n\r\n  parseErrorMessage(error): string {\r\n    switch (error.status) {\r\n      case 401:\r\n        return this.literals.str0002; // 'Usuário ou senha inválida.'\r\n      case 0:\r\n        return this.literals.str0003; // 'Não foi possível estabelecer conexão com o servidor.';\r\n      default:\r\n        if (error.error && error.error.errorMessage) {\r\n          return this.literals.str0004 + ': ' + error.error.errorMessage; // 'Ocorreu um problema na tentativa de Login';\r\n        } else {\r\n          return this.literals.str0004 + '.'; // 'Ocorreu um problema na tentativa de Login';\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza os idiomas disponíveis\r\n   */\r\n  updateLangs(): void {\r\n    this.proLanguageService.setChannelAsHTTP(environment.useHTTP);\r\n    this.proLanguageService.getListOfLanguages().subscribe({\r\n      next: (langs: ProLanguageList) => {\r\n        this.languages = langs;\r\n      },\r\n      error: (error: any) => {\r\n        console.error(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza as variaveis a partir da marca\r\n   * ma3 na russia e protheus nas demais\r\n   * @returns void\r\n   */\r\n  updateResourceByBrand(): void {\r\n    if (this.brand == 'MA3') {\r\n      this.logo = './assets/images/nationalplatform/nationalplatform.svg';\r\n      this.productName = 'Ma-3 Line';\r\n    } else {\r\n      this.logo = './assets/images/totvs/totvs.svg';\r\n      this.productName = this.literals.str0001;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description atualiza a variavel productName.\r\n   * quando não for MA3 precisa atualziar com a literals cada vez que muda o idioma\r\n   * @returns void\r\n   */\r\n  updateProductName(): void {\r\n    if (this.brand != 'MA3') {\r\n      this.productName = this.literals.str0001;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description atualiza a variavel de marca\r\n   * @returns void\r\n   */\r\n  updateBrand(): void {\r\n    this.proBrandService.setChannelAsHTTP(environment.useHTTP);\r\n    this.proBrandService.getERPBrand().subscribe({\r\n      next: (brand: string) => {\r\n        this.brand = brand;\r\n        this.updateResourceByBrand();\r\n      },\r\n      error: (error: any) => {\r\n        this.brand = 'TOTVS';\r\n        this.updateResourceByBrand();\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<po-page-login\r\n  [p-hide-remember-user]=\"hideRememberUser\"\r\n  (p-login-submit)=\"onLoginSubmit($event)\"\r\n  (p-login-change)=\"onLoginChange($event)\"\r\n  [p-languages]=\"languages\"\r\n  (p-language-change)=\"onLanguageChange($event)\"\r\n  [p-login]=\"loginValue\"\r\n  [p-loading]=\"isLoading\"\r\n  [p-literals]=\"literals\"\r\n  [p-product-name]=\"productName\"\r\n  [p-recovery]=\"this.callRecoverPassword.bind(this)\"\r\n  [p-support]=\"supportLink()\"\r\n  [p-logo]=\"logo\"\r\n  [p-secondary-logo]=\"logo\">\r\n  <!-- Linha Protheus -->\r\n</po-page-login>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PoComponentsModule } from '@po-ui/ng-templates';\r\n\r\nimport { ProLoginComponent } from './pro-login.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PoComponentsModule, ReactiveFormsModule],\r\n  declarations: [ProLoginComponent],\r\n  exports: [ProLoginComponent]\r\n})\r\nexport class ProLoginModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PoLanguage, PoLanguageService, PoSelectOption } from '@po-ui/ng-components';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { ProLanguageList } from '../../../services/pro-language/models/pro-language.list';\r\nimport { ProLanguageService } from '../../../services/pro-language/services/pro-language.service';\r\nimport { convertToBoolean, isTypeof } from '../../../util';\r\n\r\n@Component({\r\n  selector: 'pro-page-background',\r\n  templateUrl: './pro-page-background.component.html',\r\n  styleUrls: ['./pro-page-background.component.css'],\r\n})\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates\r\n * de `po-page-login` e demais templates de login.\r\n */\r\nexport class ProPageBackgroundComponent implements OnInit {\r\n  private _logo?: string;\r\n  private _secondaryLogo?: string;\r\n  private _showSelectLanguage?: boolean;\r\n  selectedLanguageOption: string;\r\n\r\n  selectLanguageOptions: Array<PoSelectOption> = [];\r\n\r\n  /** Insere uma imagem de destaque ao lado direito do container. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-background') background?: string;\r\n\r\n  /** Designa se o logotipo deve desaparecer em resoluções menores. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-hide-logo') hideLogo?: boolean;\r\n\r\n  /** Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `p-background`. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-highlight-info') highlightInfo?: string;\r\n\r\n  /** Caminho para a logomarca localizada na parte superior. */\r\n  @Input('p-logo') set logo(value: any) {\r\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get logo() {\r\n    return this._logo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada no rodapé.\r\n   */\r\n  @Input('p-secondary-logo') set secondaryLogo(value: any) {\r\n    this._secondaryLogo =\r\n      isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get secondaryLogo() {\r\n    return this._secondaryLogo;\r\n  }\r\n\r\n  /** Define se o seletor de idiomas deve ser exibido. */\r\n  @Input('p-show-select-language') set showSelectLanguage(\r\n    showSelectLanguage: boolean\r\n  ) {\r\n    this._showSelectLanguage = convertToBoolean(showSelectLanguage);\r\n  }\r\n  get showSelectLanguage() {\r\n    return this._showSelectLanguage;\r\n  }\r\n\r\n  /**\r\n   * Evento disparado ao selecionar alguma opção no seletor de idiomas.\r\n   * Para este evento será passado como parâmetro o valor de idioma selecionado.\r\n   */\r\n  // tslint:disable-next-line: no-output-rename\r\n  @Output('p-selected-language')\r\n  selectedLanguage?: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @description Construtor do componente\r\n   * @param poLanguageService Serviço de idioma do PO UI\r\n   * @param proLanguageService Serviço de idiomas do Protheus\r\n   */\r\n  constructor(\r\n    public poLanguageService: PoLanguageService,\r\n    private proLanguageService: ProLanguageService\r\n  ) {\r\n    this.updateLangs();\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza os idiomas disponíveis\r\n   */\r\n  updateLangs(): void {\r\n    this.proLanguageService.setChannelAsHTTP(environment.useHTTP);\r\n    this.proLanguageService.getListOfLanguages().subscribe({\r\n      next: (langs: ProLanguageList) => {\r\n        this.selectLanguageOptions = langs.map((language: PoLanguage) => {\r\n          return <PoSelectOption>{\r\n            label: language.description,\r\n            value: language.language,\r\n          };\r\n        });\r\n      },\r\n      error: (error: any) => {\r\n        console.error(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.selectedLanguageOption = this.poLanguageService.getShortLanguage();\r\n  }\r\n\r\n  onChangeLanguage() {\r\n    this.selectedLanguage.emit(this.selectedLanguageOption);\r\n  }\r\n}\r\n","<div class=\"po-page-login-container\">\r\n  <div\r\n    class=\"po-page-login-panel\">\r\n    <img\r\n      *ngIf=\"logo\"\r\n      class=\"po-page-background-main-logo-image\"\r\n      [class.po-page-background-hide-logo-image]=\"hideLogo\"\r\n      alt=\"main-logo\"\r\n      [src]=\"logo\"\r\n    />\r\n\r\n    <div class=\"po-page-login-body\">\r\n      <div class=\"po-page-login-panel-content pro-bg-component\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n    <div class=\"po-page-background-footer po-sm-12\">\r\n      <po-divider class=\"po-page-background-footer-mobile-only\"></po-divider>\r\n\r\n      <div class=\"po-page-background-footer-content\">\r\n        <div\r\n          *ngIf=\"showSelectLanguage\"\r\n          class=\"po-page-background-footer-select\"\r\n        >\r\n          <po-select\r\n            *ngIf=\"selectLanguageOptions\"\r\n            name=\"selectedLanguageOption\"\r\n            [(ngModel)]=\"selectedLanguageOption\"\r\n            [p-options]=\"selectLanguageOptions\"\r\n            (p-change)=\"onChangeLanguage()\"\r\n          >\r\n          </po-select>\r\n        </div>\r\n\r\n        <div\r\n          class=\"po-page-background-secondary-logo\"\r\n          [ngClass]=\"\r\n            showSelectLanguage\r\n              ? 'po-page-background-secondary-logo-right'\r\n              : 'po-page-background-secondary-logo-centered'\r\n          \"\r\n        >\r\n          <img\r\n            *ngIf=\"secondaryLogo\"\r\n            class=\"po-page-background-secondary-logo-image\"\r\n            alt=\"secondary-logo\"\r\n            [src]=\"secondaryLogo\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"background\"\r\n    [ngClass]=\"\r\n      background\r\n        ? 'po-page-login-highlight-image'\r\n        : 'po-page-login-highlight-image-off'\r\n    \"\r\n    [style.background-image]=\"'url(' + background + ')'\"\r\n  >\r\n    <div class=\"po-page-login-highlight-text\">\r\n      <div class=\"po-font-display\">{{ highlightInfo }}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PoDividerModule, PoFieldModule } from '@po-ui/ng-components';\r\n\r\nimport { ProPageBackgroundComponent } from './pro-page-background.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do template do pro-page-background.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    PoDividerModule,\r\n    PoFieldModule\r\n  ],\r\n  declarations: [ProPageBackgroundComponent],\r\n  exports: [ProPageBackgroundComponent]\r\n})\r\nexport class ProPageBackgroundModule {}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { valueIsNull } from '../../../../util';\r\nimport { ProJsToAdvplService } from './../../../../services/pro-js-to-advpl/services/pro-js-to-advpl.service';\r\nimport { ProSessionSettings } from './../models/pro-session-settings';\r\n\r\nconst ENDPOINT = '/api/protheus/session/v1/defaults';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSessionSettingsService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService\r\n  ) { }\r\n\r\n  requestSettingsDefaults(): Observable<ProSessionSettings> {\r\n    if (!valueIsNull(this.advplService.getWebChannel())) {\r\n      return this.advplService.buildObservable<ProSessionSettings>(\r\n        ({ protheusResponse, subscriber }) => {\r\n          if (protheusResponse.length === 0) {\r\n            subscriber.next({\r\n              role_code: '',\r\n              role_description: '',\r\n              role_when: false,\r\n              show_go_emp_fil: false,\r\n              show_mdi_menu_info: false,\r\n              environment_code: '',\r\n              environment_description: '',\r\n              environment_when: true,\r\n              disable_back_button: false\r\n            });\r\n          } else {\r\n            const startKeys = JSON.parse(protheusResponse);\r\n            subscriber.next(startKeys);\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          autoDestruct: true,\r\n          receiveId: 'setSessionStart',\r\n          sendInfo: {\r\n            type: 'getSessionStart'\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      const headers = new HttpHeaders().append(\r\n        'Accept',\r\n        'application/json; charset=utf-8'\r\n      );\r\n      return this.http.get<ProSessionSettings>(ENDPOINT, {\r\n        headers\r\n      });\r\n    }\r\n  }\r\n\r\n  clearSettingsDefaults(): void {\r\n    if (this.advplService.protheusConnected()) {\r\n      this.advplService.jsToAdvpl('backButton', '');\r\n    }\r\n    const erpAppConfig = sessionStorage.getItem('ERPAPPCONFIG');\r\n    sessionStorage.clear();\r\n    sessionStorage.setItem('ERPAPPCONFIG', erpAppConfig);\r\n  }\r\n\r\n  saveSettingsDefaults(\r\n    session: ProSessionSettings\r\n  ): Observable<ProSessionSettings> {\r\n    if (this.advplService.protheusConnected()) {\r\n      return this.advplService.buildObservable<ProSessionSettings>(\r\n        ({ protheusResponse, subscriber }) => {\r\n          if (protheusResponse === 'true') {\r\n            subscriber.next({});\r\n          } else {\r\n            subscriber.error({});\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        {\r\n          autoDestruct: true,\r\n          receiveId: 'submitButtonResponse',\r\n          sendInfo: {\r\n            type: 'submitButton',\r\n            content: JSON.stringify(session)\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      const headers = new HttpHeaders().append(\r\n        'Content-Type',\r\n        'application/json; charset=utf-8'\r\n      );\r\n      return this.http.post<ProSessionSettings>(ENDPOINT, session, { headers });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProSessionSettings } from '../../models/pro-session-settings';\r\nimport { ProSessionSettingsService } from '../../services/pro-session-settings.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSessionSettingsDefaultsResolver {\r\n  constructor(private sessionSettingsService: ProSessionSettingsService) { }\r\n  resolve(\r\n    _route?: ActivatedRouteSnapshot,\r\n    _state?: RouterStateSnapshot\r\n  ): Observable<ProSessionSettings> {\r\n    return this.sessionSettingsService.requestSettingsDefaults();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\nimport { ProUserInfo } from './../../../../../services/pro-authorization/models/pro-user-info';\r\nimport { ProAuthService } from './../../../../../services/pro-authorization/services/pro-auth/pro-auth.service';\r\nimport {\r\n  ProUserInfoService,\r\n} from './../../../../../services/pro-authorization/services/pro-user-info/pro-user-info.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSessionSettingsUserInfoResolver {\r\n  constructor(\r\n    private proUserInfoService: ProUserInfoService,\r\n    private proAuthService: ProAuthService\r\n  ) {\r\n    this.proUserInfoService.setChannelAsHTTP(environment.useHTTP);\r\n  }\r\n  resolve(\r\n    _route?: ActivatedRouteSnapshot,\r\n    _state?: RouterStateSnapshot\r\n  ): Observable<ProUserInfo> {\r\n    const userId = this.proAuthService.userId;\r\n    return this.proUserInfoService.get(userId);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ProJsToAdvplService } from '../../pro-js-to-advpl';\r\nimport { ProAppConfigService } from '../../pro-app-config/services/pro-app-config.service';\r\n\r\nimport { ProI18N } from '../../pro-i18n';\r\n\r\n/**\r\n * @description Classe para consumo de traduções de resource presentes no RPO do Protheus\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProTranslateStringService {\r\n  private url = '/api/framework/v1/FwRestTranslate/';\r\n  private useHTTP = true;\r\n\r\n  private EVENT_GET_TRANSLATES = 'getTranslateStringResource';\r\n  private EVENT_SET_TRANSLATES = 'setTranslateStringResource';\r\n\r\n  /**\r\n   * @description Construtor da classe\r\n   * @param http Objeto HttpClient para efetuar as requisições REST\r\n   * @param advplService Serviço ProJsToAdvplService para comunicação via jsToAdvpl\r\n   * @param proAppConfigService Serviço ProAppConfigService para verificação de estado (Advpl/Http)\r\n   */\r\n  constructor(\r\n    private http: HttpClient,\r\n    private advplService: ProJsToAdvplService,\r\n    private proAppConfigService: ProAppConfigService\r\n  ) { }\r\n\r\n  /**\r\n   * @description Retorna todas as string de um resource de tradução do Protheus\r\n   * @param cTRES string contendo o nome do resource (CH)\r\n   * @returns Retorna um json que pode conter nenhuma ou várias chaves de string, normalmente enumeradas de str0001 até str9999\r\n   */\r\n  public getStrList(cTRES: string): Observable<ProI18N> {\r\n    if (this.proAppConfigService.isProtheusRender) {\r\n      if (this.useHTTP) {\r\n        return this.http.get<ProI18N>(`${this.url}${cTRES}`);\r\n      }\r\n\r\n      return this.getAdvplLanguages();\r\n    } else {\r\n      return of({});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Retorna as traduções do resource via ADVPL (jstoadvpl)\r\n   * @returns Observable das traduções do resource do Protheus\r\n   */\r\n  private getAdvplLanguages(): Observable<ProI18N> {\r\n    if (!this.advplService.protheusConnected()) {\r\n      return this.advplNotPrepared();\r\n    }\r\n\r\n    return this.advplService.buildObservable<ProI18N>(\r\n      ({ protheusResponse, subscriber }) => {\r\n        if (protheusResponse.length === 0) {\r\n          subscriber.error({\r\n            status: 400,\r\n            description: 'No translate can be found'\r\n          });\r\n        } else {\r\n          const translates: ProI18N = JSON.parse(protheusResponse);\r\n          subscriber.next(translates);\r\n        }\r\n        subscriber.complete();\r\n      },\r\n      {\r\n        sendInfo: {\r\n          type: this.EVENT_GET_TRANSLATES,\r\n          content: \"\"\r\n        },\r\n        autoDestruct: true,\r\n        receiveId: this.EVENT_SET_TRANSLATES\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description Retorna um erro da conexão jstoadvpl\r\n   * @returns Observable de exceção\r\n   */\r\n  private advplNotPrepared<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        description: 'advplService not prepared in ProTranslateStringService'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description Indica o consumo de API via HTTP ou jstoadvpl\r\n   * @returns Informa se a classe fará a requisição via HTTP\r\n   */\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  /**\r\n   * @description Permite dizer se a requisição será efetuada via HTTP ou jstoadvpl, sempre usar como HTTP, apenas pequenas exceções como jstoadvpl\r\n   * @param value Uso de HTTP para requisição\r\n   */\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\nimport { PoI18nService, PoLookupColumn } from '@po-ui/ng-components';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { delay, retry, tap } from 'rxjs/operators';\r\nimport { SubSink } from 'subsink';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { ProBrandService } from '../../../services/pro-brand/services/pro-brand.service';\r\nimport { ProTranslateStringService } from '../../../services/pro-translate-string/services/pro-translate-string.service';\r\nimport { isExternalLink } from '../../../util';\r\nimport { ProBranchLookupComponent } from '../../pro-fields/pro-branch-lookup/pro-branch-lookup.component';\r\nimport { ProCompanyLookupComponent } from '../../pro-fields/pro-company-lookup/pro-company-lookup.component';\r\nimport { ProMessageService } from './../../../services/pro-messages/services/pro-message.service';\r\nimport { ProRoleService } from './../../../services/pro-role/pro-role-modules/services/pro-role.service';\r\nimport { ProBranchService } from './../../../services/pro-tenant/pro-branch/services/pro-branch.service';\r\nimport { ProCompanyService } from './../../../services/pro-tenant/pro-company/services/pro-company.service';\r\nimport { ProSessionSettings } from './models/pro-session-settings';\r\nimport { ProSessionSettingsService } from './services/pro-session-settings.service';\r\nimport { ProSystemModuleService } from './../../../services/pro-system-info/pro-system-modules/services/pro-system-modules.service';\r\nimport { ProSystemModules } from './../../../services';\r\n\r\n@Component({\r\n  selector: 'pro-session-settings',\r\n  templateUrl: './pro-session-settings.component.html',\r\n  styleUrls: ['./pro-session-settings.component.css']\r\n})\r\nexport class ProSessionSettingsComponent implements OnInit, OnDestroy {\r\n  public displayName: string;\r\n  public settingForm: UntypedFormGroup;\r\n  public isLoading: boolean;\r\n  public logo: string;\r\n  public secondaryLogo: string;\r\n  public productName: string;\r\n  public brand: string;\r\n  public literals: any;\r\n  public fixedModule: boolean;\r\n  public fixedRole: boolean;\r\n  public disableBackButton: boolean;\r\n  public showMDIMenuInfo: boolean;\r\n  public showGoEmpFil: boolean;\r\n  public useHTTP = environment.useHTTP;\r\n\r\n  private _ProSessionSettingsDefaults: ProSessionSettings;\r\n  private subs = new SubSink();\r\n  private cnpjTitle: string;\r\n\r\n  /** Insere uma Tag com o ambiente em execuação. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-environment') environment?: string;\r\n\r\n  /** Insere uma imagem de destaque ao lado direito do container. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-background') background?: string;\r\n\r\n  /** Designa se o logotipo deve desaparecer em resoluções menores. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-hide-logo') hideLogo?: boolean;\r\n\r\n  /** Texto de destaque sobreposto à imagem de destaque. Essa opção é utilizada em conjunto com o atributo `p-background`. */\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('p-highlight-info') highlightInfo?: string;\r\n\r\n  @ViewChild(ProBranchLookupComponent) proBranchLookupComponent!: ProBranchLookupComponent;\r\n  @ViewChild(ProCompanyLookupComponent) proCompanyLookupComponent!: ProCompanyLookupComponent;\r\n\r\n  public readonly companyColumns: Array<PoLookupColumn> = [\r\n    { property: 'Code', label: '' },\r\n    { property: 'CorporateName', label: '' }\r\n  ];\r\n\r\n  public branchColumns: Array<PoLookupColumn> = this.getDefaultBranchColumns();\r\n\r\n  public readonly moduleColumns: Array<PoLookupColumn> = [\r\n    { property: 'id', label: '' },\r\n    { property: 'name', label: '' },\r\n    { property: 'description', label: '' }\r\n  ];\r\n\r\n  public readonly roleColumns: Array<PoLookupColumn> = [\r\n    { property: 'Code', label: '' },\r\n    { property: 'Description', label: '' }\r\n  ];\r\n\r\n  /**\r\n   * @description metodo chamado na mudança do combox de idioma da tela de parametros da sessão\r\n   * @param language opção de idioma escolhido pelo usuário\r\n   * @returns void\r\n   */\r\n  onSelectedLanguage(language: string): void {\r\n    this.poI18nService.setLanguage(language, false);\r\n    this.poI18nService\r\n      .getLiterals({ language, context: 'session' })\r\n      .subscribe(literals => {\r\n        this.updLiterals(literals);\r\n        this.updateProductName();\r\n      });\r\n    this.messageService.changeLanguage(language).subscribe({\r\n      next:() =>{ this.updateModuleDescription(); }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza as strings traduzíveis da interface\r\n   * @param literals Objeto de literais, contendo as traduções da interface\r\n   */\r\n  updLiterals(literals: any): void {\r\n    this.literals = literals;\r\n    this.companyColumns[0].label = this.literals.str0020; // 'Código'\r\n    this.companyColumns[1].label = this.literals.str0021; // 'Descrição'\r\n    this.moduleColumns[0].label = this.literals.str0020; // 'Código'\r\n    this.moduleColumns[1].label = this.literals.str0022; // 'Nome'\r\n    this.moduleColumns[2].label = this.literals.str0021; // 'Descrição'\r\n    this.roleColumns[0].label = this.literals.str0020; // 'Código'\r\n    this.roleColumns[1].label = this.literals.str0021; // 'Descrição'\r\n\r\n    this.updateBranchLiterals();\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza as strings de tradução as colunas do Lookup de filial\r\n   */\r\n  updateBranchLiterals(): void {\r\n    this.branchColumns[0].label = this.literals.str0020; // 'Código'\r\n    this.branchColumns[1].label = this.literals.str0021; // 'Descrição'\r\n    this.branchColumns[2].label = this.literals.str0026; // 'CNPJ'\r\n    this.branchColumns[3].label = this.literals.str0025; // 'Nome comercial'\r\n\r\n    this.updateCnpjTitleColumn();\r\n  }\r\n\r\n  activateSupport(url = this.getSupportLink()) {\r\n    this.setUrlRedirect(url);\r\n  }\r\n\r\n  /**\r\n   * @description Método para obter o link de suporte\r\n   * @returns Retorna uma string contendo o link de suporte do ERP\r\n   */\r\n  getSupportLink(): string {\r\n    const language = this.poI18nService.getShortLanguage();\r\n    let supportLink = 'http://suporte.totvs.com/';\r\n\r\n    if (this.brand == 'MA3') {\r\n      supportLink = language === 'en' ? 'https://www.national-platform.com/' : 'https://www.national-platform.ru/';\r\n    } else {\r\n      if (language === 'es') {\r\n        supportLink = 'https://totvscst.zendesk.com/hc/es#home';\r\n      } else if (language === 'en') {\r\n        supportLink = 'https://totvscst.zendesk.com/hc/en-us#home';\r\n      }\r\n    }\r\n\r\n    return supportLink;\r\n  }\r\n\r\n  /**\r\n   * @description Efetua o redirect conforme a URL recebida\r\n   * @param url URL que será verificada, podendo abrir uma janela ou mudar a rota\r\n   */\r\n  private setUrlRedirect(url): void {\r\n    isExternalLink(url)\r\n      ? window.open(url, '_blank')\r\n      : this.router.navigate([url]);\r\n  }\r\n\r\n  /**\r\n   * @description Construtor da classe\r\n   * @param formBuilder Objeto FormBuilder para controle do formulário\r\n   * @param router Objeto Router para controle da rota\r\n   * @param messageService Serviço ProMessageService para exibição de notificações\r\n   * @param route Objeto ActivatedRoute para controle da rota atual\r\n   * @param proSessionSettingsService Serviço ProSessionSettingsService para obter os dados de login salvos\r\n   * @param proCompanyService Serviço ProCompanyService para obter dados do grupo de empresas\r\n   * @param proRoleService Serviço ProRoleService para obter dados de papel de trabalho\r\n   * @param proBranchService Serviço ProBranchService para obter dados da filial\r\n   * @param poI18nService Serviço PoI18nService para tradução da interface via dados locais\r\n   * @param proTranslateStringService Serviço ProTranslateStringService para tradução da interface via API do Protheus\r\n   * @param proBrandService Serviço para identificação da marca, MA3 na russia\r\n   */\r\n  constructor(\r\n    private formBuilder: UntypedFormBuilder,\r\n    private router: Router,\r\n    private messageService: ProMessageService,\r\n    private route: ActivatedRoute,\r\n    private proSessionSettingsService: ProSessionSettingsService,\r\n    private proCompanyService: ProCompanyService,\r\n    private proRoleService: ProRoleService,\r\n    private proBranchService: ProBranchService,\r\n    private poI18nService: PoI18nService,\r\n    private proTranslateStringService: ProTranslateStringService,\r\n    private proBrandService: ProBrandService,\r\n    private proSystemModuleService: ProSystemModuleService,\r\n  ) {\r\n    const language = poI18nService.getShortLanguage();\r\n    poI18nService\r\n      .getLiterals({ language, context: 'session' })\r\n      .subscribe(literals => {\r\n        this.updLiterals(literals);\r\n        this.updateBrand();\r\n      });\r\n    this.messageService.changeLanguage(language);\r\n    this.changeServicesChannel();\r\n  }\r\n\r\n  /**\r\n   * @description Lista de colunas do Lookup de filiais\r\n   * @returns Retorna uma lista de PoLookupColumn, contendo as colunas padrões do Lookup de filiais\r\n   */\r\n  getDefaultBranchColumns(): Array<PoLookupColumn> {\r\n    return [\r\n      { property: 'Code', label: '', width: '140px' },\r\n      { property: 'Description', label: '', width: '200px' },\r\n      { property: 'Cgc', label: '', width: '180px' },\r\n      { property: 'CommercialName', label: '', width: '200px' },\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @description metodo disparado a partir de um evento no lookup de company\r\n   * utilizado para forçar o foco no lookup de branch\r\n   */\r\n  branchSettedEvent(): void{\r\n    this.proBranchLookupComponent.setBranchFocus();\r\n  }\r\n\r\n  /**\r\n   * @description Método disparado via o evento de troca de grupo de empresas\r\n   * @param event Evento do formulário\r\n   */\r\n  changeBranchColumns(event: any) {\r\n    this.updateCnpjTitle();\r\n\r\n    const layout: string = event.layout || this.settingForm.value.companyLayout;\r\n\r\n    if (layout) {\r\n      this.branchColumns = this.getDefaultBranchColumns();\r\n      this.updateBranchLiterals();\r\n\r\n      const company: boolean = layout.includes('E');\r\n      const unit: boolean = layout.includes('U');\r\n\r\n      if (company) {\r\n        this.branchColumns.push({ property: 'CompanyCode', label: this.literals.str0027, width: '100px' })\r\n      }\r\n\r\n      if (unit) {\r\n        this.branchColumns.push({ property: 'UnitOfBusiness', label: this.literals.str0028, width: '100px' })\r\n      }\r\n\r\n      if ((unit || company) && layout.includes('F')) {\r\n        this.branchColumns.push({ property: 'ParentCode', label: this.literals.str0012, width: '100px' })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Método do ciclo de vida do Angular, esse método é chamado após o construtor da classe\r\n   */\r\n  ngOnInit(): void {\r\n    this.showGoEmpFil = false;\r\n    this.showMDIMenuInfo = false;\r\n    this.isLoading = false;\r\n    this.settingForm = this.buildForm();\r\n    this.subs.sink = this.subscribeToResolver();\r\n    this.logo = './assets/images/totvs/totvs.svg';\r\n    this.secondaryLogo = './assets/images/totvs/totvs.svg';\r\n    this.updateCnpjTitle();\r\n  }\r\n\r\n  /**\r\n   * @description Responda depois que o Angular inicializar as visualizações do componente e as visualizações filhas ou a visualização que contém a diretiva.\r\n   * utilizado aqui para setar o foco no componente de grupo de empresa na abertura da tela\r\n   * e definir a variavel started para true do componente company\r\n   */\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.proCompanyLookupComponent.setCompanyFocus();\r\n      this.proCompanyLookupComponent.setStarted(true);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza o título da coluna de CNPJ da consulta de filiais conforme API\r\n   */\r\n  updateCnpjTitle(): void {\r\n    let unsubscribe: Subscription;\r\n\r\n    unsubscribe = this.proTranslateStringService.getStrList('fwfilial').subscribe(\r\n      {\r\n        next: (strs: any) => {\r\n          if (strs && strs.str0010) {\r\n            this.cnpjTitle = strs.str0010;\r\n\r\n            if (this.literals) {\r\n              this.updateCnpjTitleColumn();\r\n            }\r\n          }\r\n        },\r\n        complete: () => unsubscribe ? unsubscribe.unsubscribe() : null\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza o título da coluna de CNPJ no objeto da coluna da interface já criada\r\n   */\r\n  updateCnpjTitleColumn(): void {\r\n    //A prioridade é o valor da API, caso contrário, utiliza o valor de tradução local\r\n    this.cnpjTitle = this.cnpjTitle || this.literals.str0026; // 'CNPJ'\r\n    this.branchColumns[2].label = this.cnpjTitle;\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza a descrição do modulo selecionado\r\n   */\r\n  updateModuleDescription(): void {\r\n    this.proSystemModuleService.getSystemModule( this.settingForm.get('environment_code').value ).subscribe( \r\n      (systemModule: ProSystemModules) => { \r\n        this.settingForm.get('environment_description').patchValue(systemModule.description);\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * @description Cria e retorna o dados de controle de formulário das configurações de login\r\n   * @returns Retorna o FormGroup do formulário de dados de login\r\n   */\r\n  private buildForm(): UntypedFormGroup {\r\n    return this.formBuilder.group({\r\n      base_date: [null, [Validators.required]],\r\n      company_code: [null, [Validators.required]],\r\n      company_description: [null, [Validators.required]],\r\n      branch_code: [null, [Validators.required]],\r\n      branch_description: [null, [Validators.required]],\r\n      environment_code: [\r\n        null,\r\n        [this.moduleValidator.bind(this), Validators.required]\r\n      ],\r\n      environment_description: [null, [Validators.required]],\r\n      role_code: [null, []],\r\n      role_description: [null, []],\r\n      mdi_menu_info: [false, []],\r\n      go_emp_fil: [false, []],\r\n      companyLayout: [null, []],\r\n    });\r\n  }\r\n\r\n  moduleValidator(control: UntypedFormControl): ValidationErrors {\r\n    if (!this.fixedModule && parseInt(control.value, 10) === 99) {\r\n      return {\r\n        configurador: this.literals.str0019\r\n      };\r\n    } else {\r\n      return Validators.required(control);\r\n    }\r\n  }\r\n\r\n  private subscribeToResolver(): Subscription {\r\n    return this.route.data.subscribe(resultOfResolver => {\r\n      this.validateResolverData(resultOfResolver);\r\n    });\r\n  }\r\n\r\n  validateResolverData(resolveData: Data) {\r\n    if (resolveData.defaultsSettings) {\r\n      this.sessionSettingsDefaults = resolveData.defaultsSettings;\r\n      this.fixedModule =\r\n        typeof resolveData.defaultsSettings.environment_when === 'undefined'\r\n          ? false\r\n          : !resolveData.defaultsSettings.environment_when;\r\n      this.fixedRole = !resolveData.defaultsSettings.role_when;\r\n      this.disableBackButton = resolveData.defaultsSettings.disable_back_button;\r\n      this.showMDIMenuInfo = resolveData.defaultsSettings.show_mdi_menu_info;\r\n      this.showGoEmpFil = resolveData.defaultsSettings.show_go_emp_fil;\r\n      this.loadSettingForm();\r\n    }\r\n    if (resolveData.userInfo) {\r\n      this.displayName = resolveData.userInfo.displayName;\r\n    }\r\n  }\r\n\r\n  set sessionSettingsDefaults(defaults: ProSessionSettings) {\r\n    if (defaults.base_date) {\r\n      defaults.base_date = this.convertDateforPoDatePicker(defaults.base_date);\r\n    } else {\r\n      defaults.base_date = new Date();\r\n    }\r\n    this._ProSessionSettingsDefaults = defaults;\r\n  }\r\n\r\n  get sessionSettingsDefaults() {\r\n    return this._ProSessionSettingsDefaults;\r\n  }\r\n\r\n  convertDateforPoDatePicker(base_date: any) {\r\n    let convertedDate = base_date;\r\n    if (base_date && !(base_date instanceof Date)) {\r\n      convertedDate = `${base_date}T00:00:00-02:00`;\r\n    }\r\n    return convertedDate;\r\n  }\r\n\r\n  private loadSettingForm() {\r\n    // Carrega o campo de empresa primeiro, pois ele é utilizado no campo de filial.\r\n    this.settingForm\r\n      .get('company_code')\r\n      .patchValue(this.sessionSettingsDefaults.company_code);\r\n    this.settingForm.patchValue(this.sessionSettingsDefaults);\r\n    this.proCompanyService.company = {\r\n      Code: this.sessionSettingsDefaults.company_code\r\n    };\r\n    this.proBranchService.branch = {\r\n      Code: this.sessionSettingsDefaults.branch_code\r\n    };\r\n    this.proRoleService.role = {\r\n      Code: this.sessionSettingsDefaults.role_code,\r\n      Description: this.sessionSettingsDefaults.role_description\r\n    };\r\n  }\r\n\r\n  onSessionSettingBack() {\r\n    this.proSessionSettingsService.clearSettingsDefaults();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  onSessionSettingSubmit() {\r\n    this.isLoading = true;\r\n\r\n    of(true)\r\n      .pipe(\r\n        delay(100),\r\n        tap(() => {\r\n          if (this.settingForm.pending) {\r\n            throw new Error();\r\n          }\r\n        }),\r\n        retry(25),\r\n        tap(() => {\r\n          this.submitForm();\r\n        })\r\n      )\r\n      .subscribe({\r\n        error: () => {\r\n          this.isLoading = false;\r\n          this.onErrorSubmit(this.literals.str0024);\r\n        }\r\n      });\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.settingForm.valid) {\r\n      this.subs.sink = this.saveSettings(this.settingForm).subscribe(\r\n        {\r\n          next: () => {\r\n            this.messageService.changeLanguage(\r\n              this.poI18nService.getShortLanguage()\r\n            );\r\n            this.router.navigate(['/home']);\r\n          },\r\n          error: () => {\r\n            this.onErrorSubmit();\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.onErrorSubmit(this.literals.str0019); // 'Formulário inválido'\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  private onErrorSubmit(message?: string): void {\r\n    this.isLoading = false;\r\n    if (message) {\r\n      this.messageService.showMessage(message, 2);\r\n    }\r\n    this.router.navigate(['/session-settings']);\r\n  }\r\n\r\n  private saveSettings(form: UntypedFormGroup): Observable<ProSessionSettings> {\r\n    const newSession: ProSessionSettings = {\r\n      base_date: form.get('base_date').value,\r\n      company_code: form.get('company_code').value,\r\n      branch_code: form.get('branch_code').value,\r\n      environment_code: form.get('environment_code').value,\r\n      role_code: form.get('role_code').value,\r\n      mdi_menu_info: form.get('mdi_menu_info').value,\r\n      go_emp_fil: form.get('go_emp_fil').value\r\n    };\r\n    return this.proSessionSettingsService.saveSettingsDefaults(newSession);\r\n  }\r\n\r\n  setChannelAsHTTP(value: boolean) {\r\n    this.useHTTP = value;\r\n    this.changeServicesChannel();\r\n  }\r\n\r\n  isChannelHTTP(): boolean {\r\n    return this.useHTTP;\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza o Canal de comunicação\r\n   * dos serviços utilizados pelo componente\r\n   * @returns void\r\n   */\r\n  private changeServicesChannel(): void {\r\n    this.proCompanyService.setChannelAsHTTP(this.useHTTP);\r\n    this.proBranchService.setChannelAsHTTP(this.useHTTP);\r\n    this.proTranslateStringService.setChannelAsHTTP(this.useHTTP);\r\n    this.proSystemModuleService.setChannelAsHTTP(this.useHTTP);\r\n  }\r\n\r\n  /**\r\n   * @description Atualiza as variaveis a partir da marca\r\n   * ma3 na russia e protheus nas demais\r\n   * @returns void\r\n   */\r\n  updateResourceByBrand(): void {\r\n    if (this.brand == \"MA3\") {\r\n      this.logo = './assets/images/nationalplatform/nationalplatform.svg';\r\n      this.secondaryLogo = './assets/images/nationalplatform/nationalplatform.svg';\r\n      this.productName = 'Ma-3 Line';\r\n    } else {\r\n      this.logo = './assets/images/totvs/totvs.svg';\r\n      this.secondaryLogo = './assets/images/totvs/totvs.svg';\r\n      this.productName = this.literals.str0001;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description atualiza a variavel productName.\r\n   * quando não for MA3 precisa atualziar com a literals cada vez que muda o idioma\r\n   * @returns void\r\n   */\r\n  updateProductName(): void {\r\n    if (this.brand != \"MA3\") {\r\n      this.productName = this.literals.str0001;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description atualiza a variavel de marca\r\n   * @returns void\r\n   */\r\n  updateBrand(): void {\r\n    this.proBrandService.setChannelAsHTTP(environment.useHTTP);\r\n    this.proBrandService.getERPBrand().subscribe(\r\n      {\r\n        next: (brand: string) => {\r\n          this.brand = brand;\r\n          this.updateResourceByBrand();\r\n        }\r\n        ,\r\n        error: (error: any) => {\r\n          this.brand = \"TOTVS\";\r\n          this.updateResourceByBrand();\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<button\r\n  class=\"po-page-login-support\"\r\n  (click)=\"activateSupport()\"\r\n  [hidden]=\"!literals?.str0004\"\r\n>\r\n  <span class=\"po-icon po-icon-help\"></span>\r\n  {{ literals?.str0004 }}\r\n  <!-- Suporte -->\r\n</button>\r\n\r\n<pro-page-background\r\n  p-show-select-language\r\n  [p-background]=\"background\"\r\n  [p-highlight-info]=\"highlightInfo\"\r\n  [p-logo]=\"logo\"\r\n  [p-secondary-logo]=\"secondaryLogo\"\r\n  (p-selected-language)=\"onSelectedLanguage($event)\"\r\n>\r\n  <header class=\"po-page-login-header\">\r\n    <div class=\"session-display-top session-display-bot\">\r\n      <div class=\"po-page-login-header-product-name\">\r\n        <h1>{{ productName }}</h1>\r\n        <!-- Linha Protheus -->\r\n      </div>\r\n      <po-tag *ngIf=\"environment\" p-type=\"warning\" [p-value]=\"environment\">\r\n      </po-tag>\r\n    </div>\r\n    <div class=\"po-page-login-header-welcome session-display-bot\">\r\n      {{\r\n        displayName\r\n          ? (literals?.str0009 | poI18n: [displayName])\r\n          : literals?.str0006\r\n      }}<!-- Boas-vindas, {0}. --><!-- Carregando... -->\r\n    </div>\r\n  </header>\r\n  <form class=\"session-settings-form\" [formGroup]=\"settingForm\">\r\n    <div class=\"po-row\">\r\n      <div class=\"po-md-12 po-lg-12 po-xl-12 po-page-login-info-container session-date-container\">\r\n        <po-datepicker\r\n          class=\"po-md-7 po-lg-7 po-xl-7\"\r\n          name=\"base_date\"\r\n          formControlName=\"base_date\"\r\n          p-clean\r\n          p-format=\"dd/mm/yyyy\"\r\n          [p-label]=\"literals?.str0018\"\r\n          p-required\r\n        ></po-datepicker\r\n        ><!-- Data base -->\r\n        <div class=\"po-page-login-info-icon-container session-hint-div\">\r\n          <span\r\n            class=\"po-icon po-field-icon po-icon-info\"\r\n            [p-tooltip]=\"literals?.str0002\"\r\n            p-tooltip-position=\"right\"\r\n            ><!-- Escolha a data base do sistema. -->\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <pro-company-lookup\r\n        class=\"po-md-12\"\r\n        [parent]=\"settingForm\"\r\n        [p-label]=\"literals?.str0010\"\r\n        [p-hint]=\"literals?.str0011\"\r\n        [pro-columns]=\"companyColumns\"\r\n        (companySetted)=\"changeBranchColumns($event)\"\r\n        (branchSetted)=\"branchSettedEvent()\"\r\n      ></pro-company-lookup\r\n      ><!-- Grupo --><!-- Selecione o Grupo de Empresas. -->\r\n      <pro-branch-lookup\r\n        [p-label]=\"literals?.str0012\"\r\n        [p-hint]=\"literals?.str0013\"\r\n        [pro-columns]=\"branchColumns\"\r\n        class=\"po-md-12\"\r\n        [parent]=\"settingForm\"\r\n        ><!-- Filial --><!-- Selecione a Filial. -->\r\n      </pro-branch-lookup>\r\n      <pro-system-module-lookup\r\n        [p-label]=\"literals?.str0014\"\r\n        [p-disabled]=\"fixedModule\"\r\n        [p-hint]=\"literals?.str0015\"\r\n        [pro-columns]=\"moduleColumns\"\r\n        class=\"po-md-12\"\r\n        [parent]=\"settingForm\"\r\n        ><!-- Ambiente --><!-- Selecione o módulo do sistema. -->\r\n      </pro-system-module-lookup>\r\n      <pro-role-lookup\r\n        [p-label]=\"literals?.str0016\"\r\n        [p-disabled]=\"fixedRole\"\r\n        [p-hint]=\"literals?.str0017\"\r\n        class=\"po-md-12\"\r\n        [parent]=\"settingForm\"\r\n      ></pro-role-lookup\r\n      ><!-- Papel de trabalho --><!-- Selecione um Papel de trabalho. -->\r\n      <div *ngIf=\"showGoEmpFil\" class=\"session-reminder-container\">\r\n        <po-switch\r\n          class=\"session-remider-switch\"\r\n          name=\"mdi_menu_info\"\r\n          formControlName=\"mdi_menu_info\"\r\n          p-label=\" \"\r\n          [p-label-off]=\"literals?.str0005\"\r\n          [p-label-on]=\"literals?.str0005\"\r\n        ></po-switch\r\n        ><!-- Usar as informações acima em todas as sessões. -->\r\n      </div>\r\n      <div *ngIf=\"showMDIMenuInfo\" class=\"session-reminder-container\">\r\n        <po-switch\r\n          class=\"session-remider-switch\"\r\n          name=\"go_emp_fil\"\r\n          formControlName=\"go_emp_fil\"\r\n          p-label=\" \"\r\n          [p-label-off]=\"literals?.str0023\"\r\n          [p-label-on]=\"literals?.str0023\"\r\n        ></po-switch\r\n        ><!-- Iniciar com as informações da última sessão. -->\r\n        <span\r\n          class=\"po-icon po-field-icon po-icon-info session-reminder-tooltip\"\r\n          [p-tooltip]=\"literals?.str0003\"\r\n          p-tooltip-position=\"right\"\r\n          ><!-- Você pode desabilitar essa opção no menu do sistema. -->\r\n        </span>\r\n      </div>\r\n      <div\r\n        class=\"po-md-12 po-page-login-info-container session-settings-buttons\"\r\n      >\r\n        <po-button\r\n          class=\"po-md-6\"\r\n          name=\"back\"\r\n          [p-disabled]=\"isLoading || disableBackButton\"\r\n          [p-label]=\"literals?.str0008\"\r\n          (p-click)=\"onSessionSettingBack()\"\r\n          ><!-- Voltar -->\r\n        </po-button>\r\n        <po-button\r\n          class=\"po-md-6 session-settings-button-enter\"\r\n          name=\"submmit\"\r\n          p-kind=\"primary\"\r\n          [p-disabled]=\"\r\n            !(\r\n              this.settingForm.get('company_code').value &&\r\n              this.settingForm.get('branch_code').value &&\r\n              this.settingForm.get('environment_code').value\r\n            )\r\n          \"\r\n          [p-label]=\"isLoading ? literals?.str0006 : literals?.str0007\"\r\n          [p-loading]=\"isLoading\"\r\n          (p-click)=\"onSessionSettingSubmit()\"\r\n          ><!-- Carregando... --><!-- Entrar -->\r\n        </po-button>\r\n        <div class=\"po-page-login-info-icon-container session-empty-div\"></div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</pro-page-background>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PoButtonModule, PoFieldModule, PoModule, PoTagModule, PoTooltipModule } from '@po-ui/ng-components';\r\n\r\nimport { ProPageBackgroundModule } from '../pro-page-background';\r\nimport { ProFieldsModule } from './../../pro-fields/pro-fields.module';\r\nimport { ProSessionSettingsComponent } from './pro-session-settings.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PoButtonModule,\r\n    PoFieldModule,\r\n    ProPageBackgroundModule,\r\n    PoModule,\r\n    PoTagModule,\r\n    PoTooltipModule,\r\n    ProFieldsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ProSessionSettingsComponent],\r\n  exports: [ProSessionSettingsComponent]\r\n})\r\nexport class ProSessionSettingsModule {}\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20201116\r\n\r\nexport const literalsEnUS = {\r\n  str0001: 'Protheus Line',\r\n  str0002: 'User or password not valid.',\r\n  str0003: 'Unable to connect with server.',\r\n  str0004: 'A problem occurred in Login attempt',\r\n  str0005: 'Enter your user',\r\n  str0006: 'Ex. sp01\\\\name.lastname',\r\n  str0007: 'Enter your password',\r\n  str0008: 'This is an example with domain//user; however, depending on configuration, the user name may have another format.',\r\n  str0009: 'Associate Protheus user with Operational System user'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20201116\r\n\r\nexport const literalsEsES = {\r\n  str0001: 'Línea Protheus',\r\n  str0002: 'Usuario o contraseña no válida.',\r\n  str0003: 'No fue posible establecer conexión con el servidor.',\r\n  str0004: 'Ocurrió un problema al intentar el Login',\r\n  str0005: 'Incluya su usuario',\r\n  str0006: 'Ej. sp01\\\\nombre.apellido',\r\n  str0007: 'Incluya su contraseña',\r\n  str0008: 'Este es un ejemplo con dominio\\\\usuario, sin embargo, dependiendo de la configuración, el nombre del usuario puede tener otro formato.',\r\n  str0009: 'Vincule usuario del Protheus al usuario del sistema operativo'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20201116\r\n\r\nexport const literalsPtBR = {\r\n  str0001: 'Linha Protheus',\r\n  str0002: 'Usuário ou senha inválida.',\r\n  str0003: 'Não foi possível estabelecer conexão com o servidor.',\r\n  str0004: 'Ocorreu um problema na tentativa de Login',\r\n  str0005: 'Insira seu usuário',\r\n  str0006: 'Ex. sp01\\\\nome.sobrenome',\r\n  str0007: 'Insira sua senha',\r\n  str0008: 'Este é um exemplo com dominio\\\\usuario, porém dependendo da configuração, o nome de usuário pode ter outro formato.',\r\n  str0009: 'Associar usuário do Protheus com usuário do Sistema Operacional'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translaton resource\r\n// Reference date : 20201111\r\n\r\nexport const literalsRuRU = {\r\n    str0001: \"Линия Protheus\",\r\n    str0002: \"Пользователь или пароль недействительны.\",\r\n    str0003: \"Не удается подключиться к серверу.\",\r\n    str0004: \"При попытке входа в систему возникла проблема\",\r\n    str0005: \"Введите пользователя\",\r\n    str0006: \"Например: sp01\\\\name.lastname\",\r\n    str0007: \"Введите пароль\",\r\n    str0008: \"Это пример с домен\\\\пользователь; однако, в зависимости от конфигурации, имя пользователя может иметь другой формат.\",\r\n    str0009: \"Связать пользователя Protheus с пользователем Операционной Системы\"\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20220729\r\n\r\nexport const literalsEnUS = {\r\n  str0001: 'Protheus Line',\r\n  str0002: 'Choose a system base date.',\r\n  str0003: 'You can disable this option in the system menu.',\r\n  str0004: 'Support',\r\n  str0005: 'Use the information above in all sessions.',\r\n  str0006: 'Loading...',\r\n  str0007: 'Enter',\r\n  str0008: 'Back',\r\n  str0009: 'Welcome, {0}.',\r\n  str0010: 'Group',\r\n  str0011: 'Select Group of Companies.',\r\n  str0012: 'Branch',\r\n  str0013: 'Select Branch.',\r\n  str0014: 'Environment',\r\n  str0015: 'Select system module.',\r\n  str0016: 'Work role',\r\n  str0017: 'Select a work role.',\r\n  str0018: 'Base Date',\r\n  str0019: 'Form not valid',\r\n  str0020: 'Code',\r\n  str0021: 'Description',\r\n  str0022: 'Name',\r\n  str0023: 'Start with last session information.',\r\n  str0024: 'Unable to prepare printer. ',\r\n  str0025: 'Commercial name',\r\n  str0026: 'CNPJ',\r\n  str0027: 'Company',\r\n  str0028: 'Unit'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20220729\r\n\r\nexport const literalsEsES = {\r\n  str0001: 'Línea Protheus',\r\n  str0002: 'Seleccione la fecha base del sistema.',\r\n  str0003: 'Usted puede deshabilitar esta opción en el menú del sistema.',\r\n  str0004: 'Soporte',\r\n  str0005: 'Utilizar las informaciones anteriores en todas las sesiones.',\r\n  str0006: 'Cargando....',\r\n  str0007: 'Entrar',\r\n  str0008: 'Volver',\r\n  str0009: 'Bienvenida, {0}.',\r\n  str0010: 'Grupo',\r\n  str0011: 'Seleccione el Grupo de empresas.',\r\n  str0012: 'Sucursal',\r\n  str0013: 'Seleccione la sucursal.',\r\n  str0014: 'Entorno',\r\n  str0015: 'Seleccione el módulo del sistema.',\r\n  str0016: 'Papel de trabajo',\r\n  str0017: 'Seleccione un Papel de trabajo.',\r\n  str0018: 'Fecha base',\r\n  str0019: 'Formulario no válido',\r\n  str0020: 'Código',\r\n  str0021: 'Descripción',\r\n  str0022: 'Nombre',\r\n  str0023: 'Iniciar con la información de la última sesión.',\r\n  str0024: 'No se pudo enviar la requisición. Por favor, intente nuevamente.',\r\n  str0025: 'Nombre comercial',\r\n  str0026: 'CNPJ',\r\n  str0027: 'Empresa',\r\n  str0028: 'Unidad'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20220729\r\n\r\nexport const literalsPtBR = {\r\n  str0001: 'Linha Protheus',\r\n  str0002: 'Escolha a data base do sistema.',\r\n  str0003: 'Você pode desabilitar essa opção no menu do sistema.',\r\n  str0004: 'Suporte',\r\n  str0005: 'Usar as informações acima em todas as sessões.',\r\n  str0006: 'Carregando...',\r\n  str0007: 'Entrar',\r\n  str0008: 'Voltar',\r\n  str0009: 'Boas-vindas, {0}.',\r\n  str0010: 'Grupo',\r\n  str0011: 'Selecione o Grupo de Empresas.',\r\n  str0012: 'Filial',\r\n  str0013: 'Selecione a Filial.',\r\n  str0014: 'Ambiente',\r\n  str0015: 'Selecione o módulo do sistema.',\r\n  str0016: 'Papel de trabalho',\r\n  str0017: 'Selecione um Papel de trabalho.',\r\n  str0018: 'Data base',\r\n  str0019: 'Formulário inválido',\r\n  str0020: 'Código',\r\n  str0021: 'Descrição',\r\n  str0022: 'Nome',\r\n  str0023: 'Iniciar com as informações da última sessão.',\r\n  str0024: 'Não foi possível enviar a requisição. Por favor, tente novamente.',\r\n  str0025: 'Nome comercial',\r\n  str0026: 'CNPJ',\r\n  str0027: 'Empresa',\r\n  str0028: 'Unidade'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20220729\r\n\r\nexport const literalsRuRU = {\r\n  str0001: \"Линия Protheus\",\r\n  str0002: \"Выберите базовую дату системы.\",\r\n  str0003: \"Вы можете отключить эту опцию в системном меню.\",\r\n  str0004: \"Поддержка\",\r\n  str0005: \"Используйте приведенную выше информацию во всех сеансах.\",\r\n  str0006: \"Загрузка...\",\r\n  str0007: \"Ввод\",\r\n  str0008: \"Назад\",\r\n  str0009: \"Добро пожаловать, {0}.\",\r\n  str0010: \"Группа\",\r\n  str0011: \"Выберите Группу компаний.\",\r\n  str0012: \"Филиал\",\r\n  str0013: \"Выберите Филиал.\",\r\n  str0014: \"Среда\",\r\n  str0015: \"Выберите системный модуль.\",\r\n  str0016: \"Рабочая роль\",\r\n  str0017: \"Выберите рабочую роль.\",\r\n  str0018: \"Базовая дата\",\r\n  str0019: \"Форма недействительна\",\r\n  str0020: \"Код\",\r\n  str0021: \"Описание\",\r\n  str0022: \"Имя\",\r\n  str0023: \"Начните с информации о последнем сеансе.\",\r\n  str0024: \"Не удалось подготовить принтер.\",\r\n  str0025: \"Коммерческое название\",\r\n  str0026: 'cnpj',\r\n  str0027: 'Компания',\r\n  str0028: 'Ед. изм'\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20230531\r\n\r\nexport const literalsEnUS = {\r\n  str0001: \"Para utilizar esse serviço é preciso definir o profile a ser utilizado pelo método setProfile\"\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20230531\r\n\r\nexport const literalsEsES = {\r\n  str0001: \"Para utilizar esse serviço é preciso definir o profile a ser utilizado pelo método setProfile\"\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20230531\r\n\r\nexport const literalsPtBR = {\r\n  str0001: \"Para utilizar esse serviço é preciso definir o profile a ser utilizado pelo método setProfile\"\r\n};\r\n","/* tslint:disable */\r\n// TOTVS TypeScript translation resource\r\n// Reference date : 20230531\r\n\r\nexport const literalsRuRU = {\r\n  str0001: ''\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { PoI18nConfig, PoI18nModule } from '@po-ui/ng-components';\r\n\r\nimport { literalsEnUS as loginEnUS } from './i18n/pro-login.literals-EnUS';\r\nimport { literalsEsES as loginEsES } from './i18n/pro-login.literals-EsES';\r\nimport { literalsPtBR as loginPtBR } from './i18n/pro-login.literals-PtBR';\r\nimport { literalsRuRU as loginRuRU } from './i18n/pro-login.literals-RuRU';\r\n\r\nimport { literalsEnUS as sessionEnUS } from './i18n/pro-session-settings.literals-enUS';\r\nimport { literalsEsES as sessionEsES } from './i18n/pro-session-settings.literals-esES';\r\nimport { literalsPtBR as sessionPtBR } from './i18n/pro-session-settings.literals-ptBR';\r\nimport { literalsRuRU as sessionRuRU } from './i18n/pro-session-settings.literals-ruRU';\r\n\r\nimport { literalsEnUS as profileServiceEnUS } from './i18n/pro-user-profile-EnUS';\r\nimport { literalsEsES as profileServiceEsEs } from './i18n/pro-user-profile-EsES';\r\nimport { literalsPtBR as profileServicePtBR } from './i18n/pro-user-profile-PtBR';\r\nimport { literalsRuRU as profileServiceRuRU } from './i18n/pro-user-profile-RuRU';\r\n\r\nconst i18nConfig: PoI18nConfig = {\r\n  default: {\r\n    language: 'pt',\r\n    context: 'general',\r\n    cache: true\r\n  },\r\n  contexts: {\r\n    login: {\r\n      en: loginEnUS,\r\n      es: loginEsES,\r\n      pt: loginPtBR,\r\n      ru: loginRuRU\r\n    },\r\n    session: {\r\n      en: sessionEnUS,\r\n      es: sessionEsES,\r\n      pt: sessionPtBR,\r\n      ru: sessionRuRU\r\n    },\r\n    profileService: {\r\n      en: profileServiceEnUS,\r\n      es: profileServiceEsEs,\r\n      pt: profileServicePtBR,\r\n      ru: profileServiceRuRU\r\n    },\r\n    general: {}\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n * Módulo para concentrar todas as strings e serviços de tradução\r\n * que envolvem o PoI18nConfig e o PoI18nModule\r\n */\r\n@NgModule({\r\n  imports: [\r\n    PoI18nModule.config(i18nConfig),\r\n  ]\r\n})\r\nexport class ProI18nConfigModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { PoModule } from '@po-ui/ng-components';\r\n\r\nimport { ProI18nConfigModule } from '../../services/pro-i18nConfig';\r\nimport { ProHomeModule } from './pro-home/pro-home.module';\r\nimport { ProLoginModule } from './pro-login/pro-login.module';\r\nimport { ProPageBackgroundModule } from './pro-page-background/pro-page-background.module';\r\nimport { ProSessionSettingsModule } from './pro-session-settings/pro-session-settings.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ProI18nConfigModule,\r\n    ProHomeModule,\r\n    PoModule,\r\n    ProLoginModule,\r\n    ProPageBackgroundModule,\r\n    ProSessionSettingsModule\r\n  ],\r\n  exports: [\r\n    ProHomeModule,\r\n    ProLoginModule,\r\n    ProPageBackgroundModule,\r\n    ProSessionSettingsModule\r\n  ]\r\n})\r\nexport class ProPagesModule { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ProFieldsModule } from './pro-fields/pro-fields.module';\r\nimport { ProPagesModule } from './pro-pages/pro-pages.module';\r\n\r\n@NgModule({\r\n  imports: [ProFieldsModule, ProPagesModule],\r\n  exports: [ProFieldsModule, ProPagesModule]\r\n})\r\nexport class ProComponentsModule {}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProAppConfigService } from '../services/pro-app-config.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Interceptor que pega a requisição html e insere o endereço e o header que define o erro padrão do Protheus.\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProAppConfigInteceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(\r\n    original_request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let requestResult: HttpRequest<any>;\r\n\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n\r\n    if (original_request.url.search(/assets/) >= 0) {\r\n      requestResult = this.appendPathNameToUrl(original_request);\r\n    } else {\r\n      const isProtheus = proAppConfigService.isProtheusRender;\r\n\r\n      if (isProtheus) {\r\n        requestResult = this.appendDomainToUrl(original_request);\r\n      } else {\r\n        requestResult = original_request;\r\n      }\r\n    }\r\n\r\n    return next.handle(requestResult);\r\n  }\r\n\r\n  /**\r\n   * @description Altera a URL da requisição para acesso aos assets do app\r\n   * @param request Requisição HTTP original\r\n   * @returns Requisição HTTP com a alteração do path, somente para assets\r\n   */\r\n  private appendPathNameToUrl(request: HttpRequest<any>): HttpRequest<any> {\r\n    const location = window.location;\r\n    let appName: string = sessionStorage['appName'];\r\n    let clone: HttpRequest<any>;\r\n\r\n    if (appName === undefined) {\r\n      clone = request.clone();\r\n    } else {\r\n      if (request.url.substr(0, 1) !== '/') {\r\n        appName += '/';\r\n      }\r\n      const urlWithPathName = `${location.protocol}//${location.host}/app-root/${appName}${request.url}`;\r\n\r\n      clone = request.clone({\r\n        url: urlWithPathName\r\n      });\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * @description Altera da URL da requisição conforme regras\r\n   * @param request Requisição HTTP Original\r\n   * @returns Requisição HTTP, podendo ter sua URL alterada\r\n   */\r\n  private appendDomainToUrl(request: HttpRequest<any>): HttpRequest<any> {\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n    const domain = proAppConfigService.serverWithApiUrl;\r\n    let urlWithDomain: string = '';\r\n\r\n    //Caso a URL comece com http ou https, concatenar o domínio vai gerar um URL inválida\r\n    //Essa situação pode ocorrer quando o app consulta serviços de terceiros\r\n    const lowerUrl: string = request.url.toLowerCase();\r\n\r\n    if (lowerUrl.startsWith('http://') || lowerUrl.startsWith('https://')) {\r\n      urlWithDomain = request.url;\r\n    } else {\r\n      urlWithDomain = `${domain}${request.url}`;\r\n    }\r\n    return request.clone({\r\n      url: urlWithDomain\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProAppConfigInteceptor } from './interceptors/pro-app-config.inteceptor';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ProAppConfigInteceptor, multi: true }\r\n  ]\r\n})\r\nexport class ProAppConfigModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Route, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProAuthService } from '../services/pro-auth/pro-auth.service';\r\n\r\ntype canActivateReturn = Observable<boolean> | Promise<boolean> | boolean;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProAuthGuard  {\r\n  constructor(private proAuthService: ProAuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): canActivateReturn {\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  checkLogin(url: string): canActivateReturn {\r\n    if (this.proAuthService.isUserAuthenticate) {\r\n      return true;\r\n    }\r\n\r\n    // Store the attempted URL for redirecting\r\n    this.proAuthService.redirectUrl = url;\r\n\r\n    // Navigate to the login page with extras\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  canActivateChild(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): canActivateReturn {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  canLoad(route: Route): canActivateReturn {\r\n    const url = `/${route.path}`;\r\n    return this.checkLogin(url);\r\n  }\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { valueIsNull } from '../../../util';\r\nimport { ProAppConfigService } from '../../pro-app-config';\r\nimport { ProAuthService } from '../services/pro-auth/pro-auth.service';\r\nimport { ProAuthToken } from '../models/pro-auth-token';\r\nimport { ProJsToAdvplService } from './../../pro-js-to-advpl/services/pro-js-to-advpl.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Interceptor que pega a requisição html e insere no header o token.\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProAuthInteceptor implements HttpInterceptor {\r\n  constructor(\r\n    private injector: Injector,\r\n    private advplService: ProJsToAdvplService\r\n  ) { }\r\n\r\n  intercept(\r\n    original_request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let requestResult: HttpRequest<any>;\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n\r\n    if (this.isUrlNeedsProAuth(original_request.url)) {\r\n      const isProtheus = proAppConfigService.isProtheusRender;\r\n\r\n      if (isProtheus) {\r\n        if (this.doIHaveAToken()) {\r\n          requestResult = this.appendTokenToRequest(original_request);\r\n        } else {\r\n          requestResult = this.callTokenFromADVPL(original_request);\r\n        }\r\n      } else {\r\n        return next.handle(original_request);\r\n      }\r\n    } else {\r\n      requestResult = original_request.clone();\r\n    }\r\n    return next.handle(requestResult).pipe(\r\n      catchError((error, caught) => {\r\n        if (!this.isAuthError(error)) {\r\n          throw error;\r\n        }\r\n        if (\r\n          this.isUrlNeedsProAuth(original_request.url) &&\r\n          this.doIHaveAToken()\r\n        ) {\r\n          return from(this.appendTokenOnError(original_request, next));\r\n        } else {\r\n          return next.handle(original_request.clone());\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private isAuthError(error: any): boolean {\r\n    return error instanceof HttpErrorResponse && error.status === 401;\r\n  }\r\n\r\n  doIHaveAToken(): boolean {\r\n    const proAuthService: ProAuthService = this.injector.get(ProAuthService);\r\n    const token = proAuthService.token;\r\n    return !valueIsNull(token);\r\n  }\r\n\r\n  callTokenFromADVPL(request: HttpRequest<any>) {\r\n    this.advplService.jsToAdvpl('internalToken', '');\r\n    return request.clone();\r\n  }\r\n\r\n  appendTokenToRequest(request: HttpRequest<any>): HttpRequest<any> {\r\n    const proAuthService: ProAuthService = this.injector.get(ProAuthService);\r\n\r\n    if (!proAuthService.isTokenValid()) {\r\n      proAuthService.updateToken();\r\n    }\r\n\r\n    return this.cloneAuthRequest(request, proAuthService.token);\r\n  }\r\n\r\n  async appendTokenOnError(request: HttpRequest<any>, next: HttpHandler): Promise<HttpEvent<any>> {\r\n    const proAuthService: ProAuthService = this.injector.get(ProAuthService);\r\n\r\n    if (!proAuthService.isTokenValid()) {\r\n      await proAuthService.updateToken();\r\n    }\r\n\r\n    return next.handle(this.cloneAuthRequest(request, proAuthService.token)).toPromise();\r\n  }\r\n\r\n  private cloneAuthRequest(request: HttpRequest<any>, token: ProAuthToken): HttpRequest<any> {\r\n    return request.clone({\r\n      headers: request.headers.set(\r\n        'Authorization',\r\n        `Bearer ${token.access_token}`\r\n      )\r\n    });\r\n  }\r\n\r\n  isUrlNeedsProAuth(url: string): boolean {\r\n    let needProAuth = true;\r\n    const whiteList = [/token/, /assets/];\r\n\r\n    for (const whiteUrl of whiteList) {\r\n      if (url.search(whiteUrl) >= 0) {\r\n        needProAuth = false;\r\n        break;\r\n      }\r\n    }\r\n    return needProAuth;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProAuthGuard } from './guards/pro-auth.guard';\r\nimport { ProAuthInteceptor } from './interceptors/pro-auth.inteceptor';\r\nimport { ProAuthService } from './services/pro-auth/pro-auth.service';\r\nimport { ProUserInfoService } from './services/pro-user-info/pro-user-info.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [],\r\n  providers: [\r\n    ProAuthService,\r\n    ProAuthGuard,\r\n    ProUserInfoService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ProAuthInteceptor, multi: true }\r\n  ]\r\n})\r\nexport class ProAuthorizationModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProUserAccessInterface } from '../../../../../../interfaces/pro-user-access/pro-user-access.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProUserAccessService {\r\n\r\n  private readonly URL_ALIAS: string = '/api/framework/v1/accessPrivilegesServices/aliasAccess/';\r\n  private readonly URL_FUNCTION: string = '/api/framework/v1/accessPrivilegesServices/functionAccess/';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * efetua um get na api referente a função MpUserHasAccess do protheus\r\n   * a api utiliza o usuário logado para efetuar a busca\r\n   * @param cRotina Nome da rotina a ser pesquisada\r\n   * @param nOpc parametro opcional, numero da rotina no menudef a ser pesquisada\r\n   * caso não seja passada a pesquisa será com base apenas na função\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public userHasAccess(cRotina: string, nOpc: number = 0): Observable<ProUserAccessInterface> {\r\n    if (nOpc){\r\n      return this.http.get<ProUserAccessInterface>(`${this.URL_FUNCTION}${cRotina}/${nOpc}`);\r\n    }else {\r\n      return this.http.get<ProUserAccessInterface>(`${this.URL_FUNCTION}${cRotina}` );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * efetua um get na api referente a função FWChkTblAccess do protheus\r\n   * a api utiliza o usuário logado para efetuar a busca\r\n   * @param cTabela Tabela a ser pesquisada\r\n   * @param nOpc parametro opcional, numero da rotina no menudef a ser pesquisada\r\n   * caso não seja passada a pesquisa será com base apenas na função\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public aliasHasAccess(cTabela: string, nOpc: number = 0): Observable<ProUserAccessInterface> {\r\n    if (nOpc){\r\n      return this.http.get<ProUserAccessInterface>(`${this.URL_ALIAS}${cTabela}/${nOpc}`);\r\n    }else {\r\n      return this.http.get<ProUserAccessInterface>(`${this.URL_ALIAS}${cTabela}`);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PoNotificationModule } from '@po-ui/ng-components';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PoNotificationModule]\r\n})\r\nexport class ProMessagesModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [CommonModule]\r\n})\r\nexport class ProBrandModule { }\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ProAppConfigService } from '../../pro-app-config';\r\n\r\nconst CACHE_KEY = 'ProIdiom';\r\n\r\n/**\r\n * @description\r\n *\r\n * Interceptor que pega a requisição html e insere no header do idioma.\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSystemIdiomInteceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) { }\r\n\r\n  /**\r\n   * @description Intercept http para tratamento do módulo do Protheus nas requisições\r\n   * @param original_request Requisição http\r\n   * @param next Handler da requisição http\r\n   * @returns Observable da requisição http com o header do módulo caso o ERP seja Protheus\r\n   */\r\n  intercept(\r\n    original_request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let requestResult: HttpRequest<any> = original_request;\r\n\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n\r\n    if (!(original_request.url.search(/assets/) >= 0)) {\r\n      const isProtheus = proAppConfigService.isProtheusRender;\r\n\r\n      if (isProtheus) {\r\n        requestResult = this.appendLanguageToRequest(original_request);\r\n      }\r\n    }\r\n    return next.handle(requestResult);\r\n  }\r\n\r\n  /**\r\n   * @description Efetua a validação e adição do header de idioma\r\n   * @param request Requisição HTTP Original\r\n   * @returns HttpRequest, podendo ser alterada com a inclusão do idioma conforme o Protheus\r\n   */\r\n  private appendLanguageToRequest(request: HttpRequest<any>): HttpRequest<any> {\r\n    const language = this.getLanguage();\r\n\r\n    if (language) {\r\n      return request.clone({\r\n        headers: request.headers.set('Accept-Language', language)\r\n      });\r\n    } else {\r\n      return request.clone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Retorna o idioma presente no storage do navegador\r\n   * @returns string contendo o valor de idioma do Protheus\r\n   */\r\n  private getLanguage(): string | void {\r\n    return sessionStorage[CACHE_KEY];\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProLanguageService } from './services/pro-language.service';\r\nimport { ProSystemIdiomInteceptor } from './interceptors/pro-system-idiom.inteceptor';\r\n\r\n/**\r\n * @description Módulo de idioma, contendo os serviços e interceptor\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    ProLanguageService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ProSystemIdiomInteceptor, multi: true }\r\n  ]\r\n})\r\nexport class ProLanguageModule { }","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ProAppConfigService } from '../../../pro-app-config';\r\n\r\nconst CACHE_KEY = 'ProModule';\r\n\r\n/**\r\n * @description\r\n *\r\n * Interceptor que pega a requisição html e insere no header o módulo.\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSystemModulesInteceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) { }\r\n\r\n  /**\r\n   * @description Intercept http para tratamento do módulo do Protheus nas requisições\r\n   * @param original_request Requisição http\r\n   * @param next Handler da requisição http\r\n   * @returns Observable da requisição http com o header do módulo caso o ERP seja Protheus\r\n   */\r\n  intercept(\r\n    original_request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let requestResult: HttpRequest<any> = original_request;\r\n\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n\r\n    if (!(original_request.url.search(/assets/) >= 0)) {\r\n      const isProtheus = proAppConfigService.isProtheusRender;\r\n\r\n      if (isProtheus) {\r\n        requestResult = this.appendModuleToRequest(original_request);\r\n      }\r\n    }\r\n    return next.handle(requestResult);\r\n  }\r\n\r\n  private appendModuleToRequest(request: HttpRequest<any>): HttpRequest<any> {\r\n    const module = this.getModule();\r\n\r\n    if (module) {\r\n      return request.clone({\r\n        headers: request.headers.set('x-erp-module', module)\r\n      });\r\n    } else {\r\n      return request.clone();\r\n    }\r\n  }\r\n\r\n  private getModule(): string | void {\r\n    return sessionStorage[CACHE_KEY];\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ProAppConfigService } from '../../../pro-app-config';\r\n\r\nconst CACHE_KEY = 'ProDatabase';\r\n\r\n/**\r\n * @description\r\n *\r\n * Interceptor que pega a requisição html e insere no header o database.\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProSystemDatabaseInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) { }\r\n\r\n  /**\r\n   * @description Intercept http para tratamento do database do Protheus nas requisições\r\n   * @param original_request Requisição http\r\n   * @param next Handler da requisição http\r\n   * @returns Observable da requisição http com o header do database caso o ERP seja Protheus\r\n   */\r\n  intercept(\r\n    original_request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let requestResult: HttpRequest<any> = original_request;\r\n\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n\r\n    if (!(original_request.url.search(/assets/) >= 0)) {\r\n      const isProtheus = proAppConfigService.isProtheusRender;\r\n\r\n      if (isProtheus) {\r\n        requestResult = this.appendDataBaseToRequest(original_request);\r\n      }\r\n    }\r\n    return next.handle(requestResult);\r\n  }\r\n\r\n  /**\r\n   * @description Adiciona o header da database na requisição caso exista\r\n   * @param request Objeto HttpRequest da requisição\r\n   * @returns HttpRequest da requisição com a database ou apenas um cópia\r\n   */\r\n  private appendDataBaseToRequest(request: HttpRequest<any>): HttpRequest<any> {\r\n    const database: string | any = this.getDatabase();\r\n\r\n    if (database) {\r\n      return request.clone({\r\n        headers: request.headers.set('x-erp-database', database)\r\n      });\r\n    } else {\r\n      return request.clone();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Verifica o valor da database no SessionStorage\r\n   * @returns Retorna o valor da database no SessionStorage, podendo não ter valor algum\r\n   */\r\n  private getDatabase(): string | void {\r\n    return sessionStorage[CACHE_KEY];\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { ProSystemModuleService } from './pro-system-modules/services/pro-system-modules.service';\r\nimport { ProSystemModulesInteceptor } from './pro-system-modules/interceptors/pro-system-modules.inteceptor';\r\nimport { ProSystemDatabaseInterceptor } from './pro-system-database/interceptors/pro-system-database.interceptor';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    ProSystemModuleService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ProSystemModulesInteceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ProSystemDatabaseInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class ProSystemInfoModule { }\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProCompanyService } from '../pro-company/services/pro-company.service';\r\nimport { ProBranchService } from './../pro-branch/services/pro-branch.service';\r\nimport { ProAppConfigService } from '../../pro-app-config';\r\n\r\n/**\r\n * @description\r\n *\r\n * Interceptor que pega a requisição html e insere no header o token.\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProTenantInteceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(\r\n    original_request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    let requestResult: HttpRequest<any> = original_request;\r\n\r\n    const proAppConfigService: ProAppConfigService = this.injector.get(\r\n      ProAppConfigService\r\n    );\r\n\r\n    if (!(original_request.url.search(/assets/) >= 0)) {\r\n      const isProtheus = proAppConfigService.isProtheusRender;\r\n\r\n      if (isProtheus) {\r\n        requestResult = this.appendTenantToRequest(original_request);\r\n      }\r\n    }\r\n    return next.handle(requestResult);\r\n  }\r\n\r\n  private appendTenantToRequest(request: HttpRequest<any>): HttpRequest<any> {\r\n    const tenantid = this.getTenantId();\r\n\r\n    if (tenantid) {\r\n      return request.clone({\r\n        headers: request.headers.set('tenantid', tenantid)\r\n      });\r\n    } else {\r\n      return request.clone();\r\n    }\r\n  }\r\n\r\n  private getTenantId(): string | void {\r\n    const proBranchService: ProBranchService = this.injector.get(\r\n      ProBranchService\r\n    );\r\n\r\n    const proCompanyService: ProCompanyService = this.injector.get(\r\n      ProCompanyService\r\n    );\r\n\r\n    const companyCode = proCompanyService.company.Code;\r\n    const branchCode = proBranchService.branch.Code;\r\n\r\n    let tenantid = '';\r\n\r\n    if (companyCode !== '') {\r\n      tenantid += companyCode;\r\n      if (branchCode !== '') {\r\n        // adicionada a virgula a direita para preservar o espaço a direita\r\n        // no codigo da filial quando houver\r\n        tenantid += `,${branchCode},`;\r\n      }\r\n      return tenantid;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProTenantInteceptor } from './interceptors/pro-tenant.inteceptor';\r\nimport { ProBranchService } from './pro-branch/services/pro-branch.service';\r\nimport { ProCompanyService } from './pro-company/services/pro-company.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [\r\n    ProCompanyService,\r\n    ProBranchService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ProTenantInteceptor, multi: true }\r\n  ]\r\n})\r\nexport class ProTenantModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProThemeService } from './services/pro-theme.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [ProThemeService, { provide: 'Window', useValue: window }],\r\n})\r\nexport class ProThemeModule {}\r\n","\r\nimport { ProUserInfoService } from './../../pro-authorization/services/pro-user-info/pro-user-info.service';\r\nimport { map, Observable } from 'rxjs';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ProAccessToken, ProAuthService, ProUserInfo } from \"../../pro-authorization\";\r\nimport { ProThreadInfo } from \"../models/pro-thread-info\";\r\n\r\n/***\r\n * @description Classe com métodos para recuperar informações da thread do Protheus, thread a qual abriu o app via FWCallApp\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProThreadInfoService {\r\n  constructor(\r\n    private proAuthService: ProAuthService,\r\n    private proUserInfoService: ProUserInfoService\r\n  ) { }\r\n\r\n  /**\r\n   * @description Retorna um objeto contendo informações do usuário logado no app e na thread do Protheus\r\n   * @returns ProThreadInfo = {userId, userName}\r\n   * userId = ID do usuário\r\n   * userName = Nome (login) do usuário\r\n   */\r\n  get proThreadInfo(): ProThreadInfo {\r\n    const token: ProAccessToken = this.proAuthService.getTokenPayload();\r\n    const proThreadInfo: ProThreadInfo = {};\r\n\r\n    proThreadInfo.userId = token.userid;\r\n    proThreadInfo.userName = token.sub;\r\n\r\n    return proThreadInfo;\r\n  }\r\n\r\n  /**\r\n   * @description Recupera o ID do usuário logado no app e no Protheus\r\n   * @returns ID do usuário\r\n   */\r\n  get userId(): string | null {\r\n    return this.proAuthService.userId;\r\n  }\r\n\r\n  /**\r\n   * @description Recupera o nome (login) do usuário logado no app e no Protheus\r\n   * @returns Nome do usuário (login)\r\n   */\r\n  get userName(): string | null {\r\n    return this.proThreadInfo.userName;\r\n  }\r\n\r\n  /**\r\n   * @description Retorna informações do usuário logado (id, nome de usuário, nome e emails)\r\n   * @returns ProUserInfo = {id, userName, displayName, emails}\r\n   */\r\n  getUserInfoThread(): Observable<ProUserInfo> {\r\n    return this.proUserInfoService.get(this.userId, true).pipe(\r\n      map((user: ProUserInfo) => ({\r\n        id: user.id,\r\n        userName: user.userName,\r\n        displayName: user.displayName,\r\n        emails: user.emails\r\n      }))\r\n    );\r\n  }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProThreadInfoService } from './services/pro-thread-info.service';\r\n\r\n/**\r\n * @description Módulo com as classes que retornam informações da thread do Protheus\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [ProThreadInfoService]\r\n})\r\nexport class ProThreadInfoModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProTranslateStringService } from './services/pro-translate-string.service';\r\n\r\n/**\r\n * @description Módulo contendo as classes para consumo de traduções do Protheus, traduções presentes no RPO do Protheus como resources\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [ProTranslateStringService]\r\n})\r\nexport class ProTranslateStringModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProI18nConfigModule } from '../pro-i18nConfig';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    ProI18nConfigModule,\r\n  ]\r\n})\r\nexport class ProUserProfileModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProAppConfigModule } from './pro-app-config/pro-app-config.module';\r\nimport { ProAuthorizationModule } from './pro-authorization/pro-authorization.module';\r\nimport { ProBrandModule } from './pro-brand/pro-brand.module';\r\nimport { ProJsToAdvplModule } from './pro-js-to-advpl/pro-js-to-advpl.module';\r\nimport { ProLanguageModule } from './pro-language/pro-language.module';\r\nimport { ProMessagesModule } from './pro-messages/pro-messages.module';\r\nimport { ProSystemInfoModule } from './pro-system-info/pro-system-info.module';\r\nimport { ProTenantModule } from './pro-tenant/pro-tenant.module';\r\nimport { ProThemeModule } from './pro-theme/pro-theme.module';\r\nimport { ProThreadInfoModule } from './pro-thread-info/pro-thread-info.module';\r\nimport { ProTranslateStringModule } from './pro-translate-string/pro-translate-string.module';\r\nimport { ProUserProfileModule } from './pro-user-profile/pro-user-profile.module';\r\n\r\n/**\r\n * @description Módulo contendo os serviços do protheus-lib-core\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ProAppConfigModule,\r\n    ProAuthorizationModule,\r\n    ProJsToAdvplModule,\r\n    ProMessagesModule,\r\n    ProTenantModule,\r\n    ProSystemInfoModule,\r\n    ProLanguageModule,\r\n    ProThemeModule,\r\n    ProBrandModule,\r\n    ProThreadInfoModule,\r\n    ProTranslateStringModule,\r\n    ProUserProfileModule,\r\n  ],\r\n  exports: [\r\n    ProAppConfigModule,\r\n    ProAuthorizationModule,\r\n    ProJsToAdvplModule,\r\n    ProMessagesModule,\r\n    ProTenantModule,\r\n    ProSystemInfoModule,\r\n    ProLanguageModule,\r\n    ProBrandModule,\r\n    ProThreadInfoModule,\r\n    ProTranslateStringModule,\r\n    ProUserProfileModule,\r\n  ],\r\n})\r\nexport class ProServicesModule {}\r\n","import { HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProAdapterBaseV2Service {\r\n\r\n  /**\r\n   * @description Retorna parâmetros no formato HttpParams para ser enviado na requisição HTTP.\r\n   *\r\n   * @param page number, número da página\r\n   * @param pageSize number, quantidade de registros da página\r\n   * @param filter string, filtro a ser utilizado na requisição\r\n   * @param fields string, campos a serem retornados pela requisição\r\n   * @param order string, ordenação a ser utilizada no retorno da requisição\r\n   *\r\n   * @return HttpParams, parâmetros\r\n  */\r\n  getHttpParams(page?: number, pageSize?: number, filter?: string, fields?: string, order?: string): HttpParams {\r\n    const params: HttpParams = new HttpParams()\r\n      .append('page', page ? page : 1)\r\n      .append('pageSize', pageSize ? pageSize : 20)\r\n      .append('filter', filter ? filter : '')\r\n      .append('fields', fields ? fields : '')\r\n      .append('order', order ? order : '');\r\n\r\n    return params;\r\n  }\r\n}","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { PoI18nService } from '@po-ui/ng-components';\r\nimport { catchError, Observable, of, switchMap } from 'rxjs';\r\n\r\nimport { ProUserProfileRequestInterface } from './models/pro-user-profile-request.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProUserProfileService {\r\n  private readonly URL_PROFILE: string = \"/api/framework/v1/profileService/\";\r\n  programName: string = \"\";\r\n  task: string = \"\";\r\n  type: string = \"\";\r\n  isReady: boolean = false;\r\n  literals: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private poI18nService: PoI18nService,\r\n  ) {\r\n    const language: string = this.poI18nService.getShortLanguage();\r\n    poI18nService.getLiterals({ language, context: 'general' })\r\n      .subscribe(literals => {\r\n        this.literals = literals;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Metodo para definir o profile a ser utilizado\r\n   * antes de utilizar qualquer metodo de CRUD é necessário definir o profile por esse metodo.\r\n   * @param programName Nome do programa a ser usado no profile\r\n   * @param task Nome da tarefa a ser utilizado no profile\r\n   * @param type Tipo a ser utilizado no profile\r\n   */\r\n  public setProfile(programName: string, task: string, type: string) {\r\n    this.programName = programName;\r\n    this.task = task;\r\n    this.type = type;\r\n    this.isReady = true;\r\n  }\r\n\r\n  /**\r\n   * Cria um novo registro no profile\r\n   * (profile a ser gravado definido pelo metodo setProfile)\r\n   * @param value Valor a ser gravado no profile\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public create(value: string): Observable<any> {\r\n    const profileBody: ProUserProfileRequestInterface = this.getRequisitionBody(value);\r\n    if (this.isReady) {\r\n      return this.http.post(this.URL_PROFILE, profileBody);\r\n    } else {\r\n      return this.profileNotReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Busca o valor de uma chave salva no profile\r\n   * (profile a ser gravado definido pelo metodo setProfile)\r\n   * @param defaultValue Valor padrão a ser retornado caso não exista o profile na base\r\n   * @param respType tipo a ser retornado, podendo ser apenas json ou text\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public read(defaultValue: string = \"\", respType: any = \"json\"): Observable<any> {\r\n    if (this.isReady) {\r\n      let acceptHeader: string = \"application/json\";\r\n      if (respType != \"json\") {\r\n        respType = \"text\";\r\n        acceptHeader = \"text/plain\";\r\n      }\r\n      const params = new HttpParams().set('defaultValue', defaultValue);\r\n      const headers = new HttpHeaders().set('Accept', acceptHeader);\r\n      return this.http.get(this.getUrlApi(), { responseType: respType, params, headers });\r\n    } else {\r\n      return this.profileNotReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atualiza um registro no profile\r\n   * (profile a ser gravado definido pelo metodo setProfile)\r\n   * @param value Valor a ser gravado no profile\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public update(value: string): Observable<any> {\r\n    const profileBody: ProUserProfileRequestInterface = this.getRequisitionBody(value);\r\n    if (this.isReady) {\r\n      return this.http.put(this.getUrlApi(), profileBody);\r\n    } else {\r\n      return this.profileNotReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deleta um registro no profile\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public delete(): Observable<any> {\r\n    if (this.isReady) {\r\n      return this.http.delete(this.getUrlApi());\r\n    } else {\r\n      return this.profileNotReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deleta e cria um registro no profile\r\n   * esse metodo pode substituir o uso do metodo create e update em alguns casos\r\n   * (profile a ser gravado definido pelo metodo setProfile)\r\n   * @param value Valor a ser gravado no profile\r\n   * @returns Observable com o retorno da api\r\n   */\r\n  public deleteThenCreate(value: string): Observable<any> {\r\n    if (this.isReady) {\r\n      return this.http.delete(this.getUrlApi()).pipe(\r\n        catchError(() => {\r\n          // erro no delete deve ser pelo fato do profile não existir ainda\r\n          // retorna o post do profile\r\n          return of(this.http.post(this.URL_PROFILE, this.getRequisitionBody(value)));\r\n        }),\r\n        switchMap(() => this.http.post(this.URL_PROFILE, this.getRequisitionBody(value)))\r\n      );\r\n    } else {\r\n      return this.profileNotReady();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Observable para apresentar um erro para o usuário caso utilize algum metodo de CRUD\r\n   * sem utilizar o setProfile antes\r\n   * @returns Observable com erro\r\n   */\r\n  private profileNotReady<T>(): Observable<T> {\r\n    return new Observable(subscriber => {\r\n      subscriber.error({\r\n        status: 400,\r\n        message: this.literals.str0001 // 'Para utilizar esse serviço é preciso definir o profile a ser utilizado pelo método setProfile'\r\n      });\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * retorna a composição da url da api, com os path param necessários\r\n   * @returns url completa da api\r\n   */\r\n  getUrlApi(): string {\r\n    return `${this.URL_PROFILE}${this.programName}/${this.task}/${this.type}`;\r\n  }\r\n\r\n  /**\r\n   * body para ser utilizado no post e update da api de profile\r\n   * @param value Valor a ser gravado no profile\r\n   * @returns o body a ser utilizado\r\n   */\r\n  getRequisitionBody(value: string): ProUserProfileRequestInterface {\r\n    const profileBody: ProUserProfileRequestInterface = {\r\n      programName: this.programName,\r\n      task: this.task,\r\n      type: this.type,\r\n      value: value\r\n    };\r\n    return profileBody;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProAdapterBaseV2 } from '../../interfaces/pro-adapter-base-v2/pro-adapter-base-v2.interface';\r\nimport { ProAdapterListInterface, ProAdapterQueryInterface } from '../../interfaces/pro-generic-adapter/pro-generic-adapter.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProGenericAdapterService {\r\n  private readonly URL_LIST: string = \"/api/framework/v1/genericList\";\r\n  private readonly URL_QUERY: string = \"/api/framework/v1/genericQuery\";\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  /**\r\n   * Metodo para devolver uma listagem de registro baseado na api genericList\r\n   * @param searchParams parametros da interface ProAdapterListInterface a ser enviado\r\n   * para api genericList\r\n   * @returns Observable de ProAdapterBaseV2 a ser utilizado em um po-table\r\n   */\r\n  list<T>(searchParams: ProAdapterListInterface): Observable<ProAdapterBaseV2<T>> {\r\n    const params: HttpParams = this.convertSearchParamsToHttpParams(searchParams);\r\n    return this.http.get<ProAdapterBaseV2<T>>(this.URL_LIST , {params});\r\n  }\r\n\r\n  /**\r\n   * Metodo para devolver uma listagem de registro baseado na api genericQuery\r\n   * @param searchParams parametros da interface ProAdapterQueryInterface a ser enviado\r\n   * para api genericQuery\r\n   * @returns Observable de ProAdapterBaseV2 a ser utilizado em um po-table\r\n   */\r\n  query<T>(searchParams: ProAdapterQueryInterface): Observable<ProAdapterBaseV2<T>> {\r\n    const params: HttpParams = this.convertSearchParamsToHttpParams(searchParams);\r\n    return this.http.get<ProAdapterBaseV2<T>>(this.URL_QUERY , {params});\r\n  }\r\n\r\n  /**\r\n   * converte uma interface para httpParams\r\n   * cada propriedade vira um parametro http\r\n   * @param searchParams parametro a ser convetido\r\n   * @returns httpParams a ser utilizado em uma requisição\r\n   */\r\n  private convertSearchParamsToHttpParams(searchParams: ProAdapterListInterface | ProAdapterQueryInterface): HttpParams {\r\n    let params: HttpParams = new HttpParams();\r\n    Object.keys(searchParams).forEach(key => {\r\n      params = params.set(key, searchParams[key]);\r\n    });\r\n    return params;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * @description\r\n * Classe para tratamentos de i18n do Protheus\r\n */\r\nexport class ProI18nService {\r\n  /**\r\n   * @description\r\n   * Efetua a transformação de um texto de tradução com tokens,\r\n   * os tokens são iniciados com # e um número de 1 a 99.\r\n   * Os valores são convertidos para string via função String do JS,\r\n   * não possuindo um padrão de conversão\r\n   *\r\n   * @param str Texto de internacionalização\r\n   * @param values Lista de tokens, podendo ter de 0 a 99 itens\r\n   * @returns Texto original com a substituição dos tokens (#)\r\n   */\r\n  public static getTranslateTokenString(str: string, values: Array<any> = []): string {\r\n    for (let i: number = values.length - 1; i >= 0; i--) {\r\n      const token: string = String(values[i]);\r\n      const section: string = '#' + (i + 1).toString();\r\n      const posSection: number = str.indexOf(`${section}[`);\r\n\r\n      if (posSection >= 0) {\r\n        const hintStart: number = posSection + section.length;\r\n        const hintEnd: number = str.substring(hintStart + 1).indexOf(']#');\r\n\r\n        if (hintStart >= 0 && hintEnd >= 0) {\r\n          const search: RegExp = new RegExp(`${section}\\\\[.*]#`, 'g');\r\n          str = str.replace(search, section);\r\n        }\r\n      }\r\n\r\n      str = str.replace(section, token);\r\n    }\r\n\r\n    return str;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { ProComponentsModule } from './components/pro-components.module';\r\nimport { ProServicesModule } from './services/pro-services.module';\r\n\r\n@NgModule({\r\n  imports: [ProComponentsModule, ProServicesModule],\r\n  exports: [ProComponentsModule, ProServicesModule]\r\n})\r\nexport class ProtheusLibCoreModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["CACHE_KEY","i2.ProJsToAdvplService","i3.ProCompanyService","i1.ProBranchService","i1.ProBranchLookupService","i1.ProCompanyService","i1.ProCompanyLookupService","i1.ProJsToAdvplService","i1.ProRoleService","i1.ProRoleLookupService","i1.ProSystemModuleService","i1.ProSystemModuleLookupService","i2.ProUserInfoService","i3.ProJsToAdvplService","i1.ProAuthService","i1","i3.ProThemeService","i3.ProAppConfigService","i2.ProAuthService","i3.ProMessageService","i4","i5.ProLanguageService","i6.ProBrandService","i2.ProLanguageService","i3","i1.ProSessionSettingsService","i1.ProUserInfoService","i2","i4.ProSessionSettingsService","i5.ProCompanyService","i6.ProRoleService","i7.ProBranchService","i8","i9.ProTranslateStringService","i10.ProBrandService","i11.ProSystemModuleService","i12","i13.ProPageBackgroundComponent","i14.ProCompanyLookupComponent","i15.ProBranchLookupComponent","i16.ProRoleLookupComponent","i17.ProSystemModuleLookupComponent","literalsEnUS","literalsEsES","literalsPtBR","literalsRuRU","loginEnUS","loginEsES","loginPtBR","loginRuRU","sessionEnUS","sessionEsES","sessionPtBR","sessionRuRU","profileServiceEnUS","profileServiceEsEs","profileServicePtBR","profileServiceRuRU","map","catchError"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEO,MAAM,WAAW,GAAG;AACzB,IAAA,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,KAAK;CACf,CAAC;AAEF;;;;;AAKG;AACH;;ACfM,SAAU,WAAW,CAAC,KAAU,EAAA;AACpC,IAAA,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C,CAAC;AAEK,SAAU,gBAAgB,CAAC,GAAQ,EAAA;AACvC,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QAC/B,OAAO,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,CAAC;AACrD,KAAA;AAED,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO,GAAG,KAAK,CAAC,CAAC;AAClB,KAAA;IAED,OAAO,CAAC,CAAC,GAAG,CAAC;AACf,CAAC;AAEe,SAAA,QAAQ,CAAC,MAAW,EAAE,IAAS,EAAA;AAC7C,IAAA,OAAO,OAAO,MAAM,KAAK,IAAI,CAAC;AAChC,CAAC;AAEK,SAAU,cAAc,CAAC,GAAG,EAAA;AAChC,IAAA,OAAO,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AAC9C,CAAC;SAEe,gBAAgB,GAAA;AAC9B,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC;AAC3E;;MCfa,mBAAmB,CAAA;AAC9B,IAAA,WAAA,GAAA,GAAiB;IAEjB,SAAS,GAAA;AACP,QAAA,QACE,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,UAAU,EACvE;KACH;IAED,aAAa,GAAA;AACX,QAAA,QACE,OAAO,WAAW,KAAK,WAAW;AAClC,YAAA,OAAO,WAAW,CAAC,SAAS,KAAK,UAAU,EAC3C;KACH;IAED,aAAa,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AACxB,YAAA,OAAO,WAAW,CAAC;AACpB,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;AACpB,YAAA,OAAO,MAAM,CAAC;AACf,SAAA;KACF;IAED,SAAS,CAAC,IAAY,EAAE,OAAe,EAAA;AACrC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACxC,QAAA,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE;AAC3B,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AAAM,aAAA;AACL,YAAA,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACpC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;AAED;;;;AAIG;IACH,aAAa,CAAC,QAAgB,EAAE,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAChC;IAED,aAAa,CAAC,EAAU,EAAE,QAAQ,EAAA;AAChC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACxC,QAAA,IAAI,UAAU,IAAI,UAAU,CAAC,aAAa,CAAC,EAAE;YAC3C,UAAU,CAAC,aAAa,CAAC,CAAC,gBAAgB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC1D,SAAA;KACF;IAED,eAAe,CAAI,QAAQ,EAAE,OAAqB,EAAA;AAChD,QAAA,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE;AACvE,YAAA,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC1E,SAAA;AACD,QAAA,MAAM,iBAAiB,GAAG,IAAI,UAAU,CAAI,UAAU,IAAG;AACvD,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACxC,YAAA,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACnC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;YAEzD,IAAI,OAAO,CAAC,YAAY,EAAE;AACxB,gBAAA,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,iBAAiB,CACpE,OAAO,CAAC,SAAS,EACjB,QAAQ,CACT,CAAC;gBACF,UAAU,CAAC,aAAa,CAAC,CAAC,gBAAgB,CACxC,OAAO,CAAC,SAAS,EACjB,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,CAC9C,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,UAAU,CAAC,aAAa,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACzE,aAAA;AACH,SAAC,CAAC,CAAC;QACH,IAAI,OAAO,CAAC,QAAQ,EAAE;AACpB,YAAA,IAAI,CAAC,kBAAkB,CACrB,OAAO,CAAC,QAAQ,CAAC,IAAI,EACrB,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CACxE,CAAC;AACH,SAAA;AACD,QAAA,OAAO,iBAAiB,CAAC;KAC1B;AAED;;;;;AAKG;IACK,iBAAiB,CAAC,EAAE,EAAE,QAAQ,EAAA;AACpC,QAAA,OAAO,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AAC1C,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACxC,YAAA,QAAQ,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,CAAC,CAAC;AAE3C,YAAA,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE;AAClB,gBAAA,UAAU,CAAC,aAAa,CAAC,CAAC,mBAAmB,CAC3C,EAAE,EACF,UAAU,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,CAC/B,CAAC;AACF,gBAAA,OAAO,UAAU,CAAC,EAAE,CAAC,CAAC;AACvB,aAAA;AACH,SAAC,CAAC;KACH;IAED,iBAAiB,GAAA;AACf,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,eAAe,CAAC,CAAC;KAChE;IAED,kBAAkB,CAChB,IAAY,EACZ,KAAa,EACb,YAAuB,GAAA,EAAE,EACzB,OAAA,GAAkB,EAAE,EAAA;AAEpB,QAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC5B,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7B,SAAA;AAAM,aAAA;YACL,IAAI,YAAY,GAAG,CAAC,EAAE;AACpB,gBAAA,YAAY,EAAE,CAAC;gBACf,UAAU,CAAC,MAAK;oBACd,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;iBAC7D,EAAE,OAAO,CAAC,CAAC;AACb,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,GAAG,gBAAgB,CAAC,CAAC;AAC1D,aAAA;AACF,SAAA;KACF;IAED,eAAe,GAAA;QACb,OAAO,gBAAgB,EAAE,CAAC;KAC3B;8GAlIU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCLY,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAFnB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAEX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAFnB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAEX,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACxB,iBAAA,CAAA;;;ACED,MAAMA,WAAS,GAAG,YAAY,CAAC;MAIlB,iBAAiB,CAAA;IAQ5B,WACU,CAAA,IAAgB,EAChB,YAAiC,EAAA;QADjC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QATnC,IAAG,CAAA,GAAA,GAAG,yCAAyC,CAAC;QAChD,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QACP,IAAiB,CAAA,iBAAA,GAAG,kBAAkB,CAAC;QACvC,IAAiB,CAAA,iBAAA,GAAG,kBAAkB,CAAC;QACvC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;KAK/C;IAEL,kBAAkB,CAChB,aAAa,GAAG,EAAE,EAClB,IAAI,GAAG,CAAC,EACR,SAAS,GAAG,GAAG,EAAA;QAEf,MAAM,QAAQ,GAAG,GAAG,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACtE,SAAA;QACD,OAAO,IAAI,CAAC,2BAA2B,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KACxE;AAED;;;;;;AAMG;IACH,gBAAgB,CAAC,gBAAwB,EAAE,EAAE,OAAe,CAAC,EAAE,WAAmB,EAAE,EAAA;QAClF,OAAO,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KACtE;AAEO,IAAA,yBAAyB,CAC/B,aAAqB,EACrB,IAAY,EACZ,QAAgB,EAAA;AAEhB,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE;AAC1B,aAAA,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC/B,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE3C,IAAI,aAAa,KAAK,EAAE,EAAE;YACxB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AACxD,SAAA;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,GAAG,EAAE;YAC7C,OAAO;YACP,MAAM;AACP,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,2BAA2B,CACjC,aAAqB,EACrB,IAAY,EACZ,QAAgB,EAAA;AAEhB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,aAAa;YACb,IAAI;YACJ,QAAQ;AACT,SAAA,CAAC,CAAC;AAEH,QAAA,MAAM,oBAAoB,GAAG;AAC3B,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,iBAAiB;AAC5B,gBAAA,OAAO,EAAE,aAAa;AACvB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,iBAAiB;SAClC,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AAE9D,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAW,QAAA,EAAA,aAAa,CAAqB,mBAAA,CAAA;AAC3D,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,aAAa,GAAmB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACnE,gBAAA,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAChC,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC;QAEF,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,kBAAkB,EAClB,oBAAoB,CACrB,CAAC;KACH;AAED,IAAA,UAAU,CAAC,OAAe,EAAA;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACxC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;KAC1C;AAEO,IAAA,iBAAiB,CAAC,OAAe,EAAA;AACvC,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,IAAI,CAAC,GAAG,CAAA,CAAA,EAAI,OAAO,CAAE,CAAA,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;KACzE;AAEO,IAAA,mBAAmB,CAAC,OAAe,EAAA;AAEzC,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAW,QAAA,EAAA,OAAO,CAAqB,mBAAA,CAAA;AACrD,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,WAAW,GAAe,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC7D,gBAAA,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,EACD;AACE,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,gBAAgB;AAC3B,gBAAA,OAAO,EAAE,OAAO;AACjB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,gBAAgB;AACjC,SAAA,CACF,CAAC;KACH;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,IAAI,cAAc,CAACA,WAAS,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAACA,WAAS,CAAC,CAAC,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;AACxD,SAAA;KACF;IAED,IAAI,OAAO,CAAC,OAAmB,EAAA;QAC7B,cAAc,CAACA,WAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KACrD;IAEO,gBAAgB,GAAA;AACtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,gDAAgD;AAC9D,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;8GA/KU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACDD,MAAMD,WAAS,GAAG,WAAW,CAAC;MAKjB,gBAAgB,CAAA;AAS3B,IAAA,WAAA,CACU,IAAgB,EAChB,YAAiC,EACjC,iBAAoC,EAAA;QAFpC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QACjC,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QAXtC,IAAG,CAAA,GAAA,GAAG,wCAAwC,CAAC;QAC/C,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QAEP,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAgB,CAAA,gBAAA,GAAG,eAAe,CAAC;QACnC,IAAgB,CAAA,gBAAA,GAAG,eAAe,CAAC;KAM9C;IAEL,iBAAiB,CACf,WAAW,GAAG,EAAE,EAChB,IAAI,GAAG,CAAC,EACR,SAAS,GAAG,GAAG,EAAA;QAEf,MAAM,QAAQ,GAAG,GAAG,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACnE,SAAA;QACD,OAAO,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KACrE;AAED;;;;;;AAMG;IACH,eAAe,CAAC,cAAsB,EAAE,EAAE,OAAe,CAAC,EAAE,WAAmB,EAAE,EAAA;AAC/E,QAAA,OAAO,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC1E;AAED;;;;;;;AAOG;IACK,wBAAwB,CAC9B,WAAmB,EACnB,IAAY,EACZ,QAAgB,EAChB,4BAAqC,IAAI,EAAA;AAEzC,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE;AAC1B,aAAA,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC/B,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;AAE3C,QAAA,MAAM,OAAO,GAAe,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;QAE3D,IAAI,WAAW,KAAK,EAAE,EAAE;YACtB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AACpD,SAAA;AAED,QAAA,IAAI,yBAAyB,EAAE;YAC7B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AACzD,SAAA;AAED,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,IAAI,CAAC,GAAG,EAAE;YAC5C,OAAO;YACP,MAAM;AACP,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,0BAA0B,CAChC,WAAW,EACX,IAAI,EACJ,QAAQ,EAAA;AAER,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;AAE/C,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,WAAW;YACX,eAAe,EAAE,OAAO,CAAC,IAAI;YAC7B,IAAI;YACJ,QAAQ;AACT,SAAA,CAAC,CAAC;AAEH,QAAA,MAAM,gBAAgB,GAAG;AACvB,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,iBAAiB;AAC5B,gBAAA,OAAO,EAAE,aAAa;AACvB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,iBAAiB;SAClC,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AAC9D,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAU,OAAA,EAAA,WAAW,CAAqB,mBAAA,CAAA;AACxD,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,YAAY,GAAkB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACjE,gBAAA,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC/B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC;QAEF,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,kBAAkB,EAClB,gBAAgB,CACjB,CAAC;KACH;AAED,IAAA,SAAS,CAAC,MAAc,EAAE,OAAO,GAAG,EAAE,EAAA;QACpC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAC/C,SAAA;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;KACjD;IAEO,gBAAgB,CAAC,MAAc,EAAE,OAAe,EAAA;QACtD,IAAI,OAAO,KAAK,EAAE,EAAE;YAClB,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC/C,SAAA;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,CAAA,EAAG,IAAI,CAAC,GAAG,CAAI,CAAA,EAAA,OAAO,CAAI,CAAA,EAAA,MAAM,EAAE,EAAE;YAClE,OAAO;AACR,SAAA,CAAC,CAAC;KACJ;IAEO,kBAAkB,CAAC,MAAc,EAAE,OAAe,EAAA;AACxD,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;QAED,IAAI,OAAO,KAAK,EAAE,EAAE;YAClB,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC;AAC/C,SAAA;AAED,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,MAAM;YACN,OAAO;AACR,SAAA,CAAC,CAAC;AAEH,QAAA,MAAM,gBAAgB,GAAG;AACvB,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,gBAAgB;AAC3B,gBAAA,OAAO,EAAE,aAAa;AACvB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,gBAAgB;SACjC,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;YAC9D,IAAI,IAAI,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAEzC,YAAA,MAAM,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC;YAC5D,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;YAE9C,IAAI,CAAC,IAAI,EAAE;gBACT,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAU,OAAA,EAAA,MAAM,CAAqB,mBAAA,CAAA;AACnD,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,UAAU,GAAc,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC3D,gBAAA,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC;QAEF,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,kBAAkB,EAClB,gBAAgB,CACjB,CAAC;KACH;AAED,IAAA,IAAI,MAAM,GAAA;AACR,QAAA,IAAI,cAAc,CAACA,WAAS,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAACA,WAAS,CAAC,CAAC,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AAC3D,SAAA;KACF;IAED,IAAI,MAAM,CAAC,MAAiB,EAAA;QAC1B,cAAc,CAACA,WAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACpD;IAEO,gBAAgB,GAAA;AACtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,+CAA+C;AAC7D,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;8GAzNU,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCHY,sBAAsB,CAAA;AAEjC,IAAA,WAAA,CAAoB,gBAAkC,EAAA;QAAlC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AAD9C,QAAA,IAAA,CAAA,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QAEpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;AAED,IAAA,gBAAgB,CAAC,MAAmC,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAC5C,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,QAAQ,CAChB,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,KAAa,EAAA;QAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KAC/C;AAED,IAAA,SAAS,CAAC,MAAiB,EAAA;AACzB,QAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,MAAM,CAAC;KACvC;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEO,oBAAoB,GAAA;QAC1B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtD;8GAjCU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACHD;;;;;AAKG;MAMU,wBAAwB,CAAA;AAenC,IAAA,WAAA,CAAmB,OAA+B,EAAA;QAA/B,IAAO,CAAA,OAAA,GAAP,OAAO,CAAwB;AAZxC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAa,CAAC;KAYD;AAE/C,IAAA,WAAW,CAAC,KAAgB,EAAA;QACjC,OAAO,KAAK,CAAC,IAAI,CAAC;KACnB;AAED;;AAEG;IACH,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;KACrB;AAED;;;;;;;;;;;;;AAaI;AAEJ,IAAA,SAAS,CAAC,MAAiB,EAAA;QACzB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAClC,YAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,kBAAkB,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;AACnE,YAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC/B,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,SAAA;KACF;8GAjDU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAxB,wBAAwB,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAaxB,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC9B9B,y4BA+BA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDda,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;+BACE,mBAAmB,EAAA,QAAA,EAAA,y4BAAA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,CAAA;wFAMpB,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACI,YAAY,EAAA,CAAA;sBAArB,MAAM;gBAGW,MAAM,EAAA,CAAA;sBAAvB,KAAK;uBAAC,SAAS,CAAA;gBAEC,KAAK,EAAA,CAAA;sBAArB,KAAK;uBAAC,QAAQ,CAAA;gBAGO,OAAO,EAAA,CAAA;sBAA5B,KAAK;uBAAC,aAAa,CAAA;gBAE4B,MAAM,EAAA,CAAA;sBAArD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MElBnC,qBAAqB,CAAA;8GAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAArB,qBAAqB,EAAA,YAAA,EAAA,CAHjB,wBAAwB,CAAA,EAAA,OAAA,EAAA,CAD7B,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CAEjE,wBAAwB,CAAA,EAAA,CAAA,CAAA,EAAA;AAEvB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAJtB,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIhE,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAC;oBAC5E,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;AACpC,iBAAA,CAAA;;;MCAY,uBAAuB,CAAA;AAElC,IAAA,WAAA,CAAoB,iBAAoC,EAAA;QAApC,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;AADhD,QAAA,IAAA,CAAA,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QAEpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;AAED,IAAA,gBAAgB,CAAC,MAAmC,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAC9C,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,QAAQ,CAChB,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,KAAa,EAAA;QAC5B,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACjD;AAED,IAAA,UAAU,CAAC,OAAmB,EAAA;AAC5B,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1C;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEO,oBAAoB,GAAA;QAC1B,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvD;8GAjCU,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAvB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFtB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACJD;;;;;AAKG;MAMU,yBAAyB,CAAA;AAkBpC;;;AAGG;AACH,IAAA,WAAA,CAAmB,OAAgC,EAAA;QAAhC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAyB;AAnBzC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAc,CAAC;AAC/C,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAQ,CAAC;QAW1C,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;QACjC,IAAS,CAAA,SAAA,GAAY,IAAI,CAAC;KAM8B;AAEjD,IAAA,WAAW,CAAC,KAAiB,EAAA;QAClC,OAAO,KAAK,CAAC,IAAI,CAAC;KACnB;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;KACrB;AAED,IAAA,UAAU,CAAC,OAAgB,EAAA;AACzB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;AAED;;;;;;;;;;;;;AAaI;AAEJ;;;AAGG;AACH,IAAA,UAAU,CAAC,OAAmB,EAAA;QAC5B,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,YAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;gBACrB,mBAAmB,EAAE,OAAO,CAAC,aAAa;AAC1C,gBAAA,WAAW,EAAE,EAAE;AACf,gBAAA,kBAAkB,EAAE,EAAE;gBACtB,aAAa,EAAE,OAAO,CAAC,MAAM;AAC9B,aAAA,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACjC,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAEjC,YAAA,MAAM,SAAS,GAAY,CAAC,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC;YACzF,IAAI,IAAI,CAAC,OAAO,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAC;AAE/C,gBAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBACrB,WAAW,EAAE,OAAO,CAAC,eAAe;oBACpC,kBAAkB,EAAE,OAAO,CAAC,sBAAsB;AACnD,iBAAA,CAAC,CAAC;gBAEH,UAAU,CAAC,MAAK;;;AAGd,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;iBAC1B,EAAE,GAAG,CAAC,CAAC;AAET,aAAA;YACD,IAAI,IAAI,CAAC,SAAS,EAAC;AACjB,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACxB,aAAA;AACF,SAAA;KACF;8GArFU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAAzB,yBAAyB,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAczB,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC/B9B,84BA+BA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDda,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,SAAS;+BACE,oBAAoB,EAAA,QAAA,EAAA,84BAAA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,CAAA;yFAMrB,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACI,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBAGW,MAAM,EAAA,CAAA;sBAAvB,KAAK;uBAAC,SAAS,CAAA;gBAEC,KAAK,EAAA,CAAA;sBAArB,KAAK;uBAAC,QAAQ,CAAA;gBAGO,OAAO,EAAA,CAAA;sBAA5B,KAAK;uBAAC,aAAa,CAAA;gBAE4B,MAAM,EAAA,CAAA;sBAArD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;MEnBnC,sBAAsB,CAAA;8GAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAtB,sBAAsB,EAAA,YAAA,EAAA,CAHlB,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAD9B,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CAEjE,yBAAyB,CAAA,EAAA,CAAA,CAAA,EAAA;AAExB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,YAJvB,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIhE,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAC;oBAC5E,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE,CAAC,yBAAyB,CAAC;AACrC,iBAAA,CAAA;;;ACLD,MAAMN,WAAS,GAAG,SAAS,CAAC;MAKf,cAAc,CAAA;AACzB,IAAA,WAAA,CAAoB,YAAiC,EAAA;QAAjC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;KAAI;IAEzD,cAAc,CACZ,WAAW,GAAG,EAAE,EAChB,IAAI,GAAG,CAAC,EACR,QAAQ,GAAG,EAAE,EAAA;AAEb,QAAA,QAAQ,GAAG,GAAG,CAAC;AACf,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,gBAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,UAAU,CAAC,IAAI,CAAC;AACd,wBAAA,OAAO,EAAE,KAAK;AACd,wBAAA,KAAK,EAAE,EAAE;AACV,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;AACL,oBAAA,MAAM,QAAQ,GAAmB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;AAC1D,yBAAA,GAAG,CAAC,CAAC,IAAmB,KAAI;wBAC3B,OAAO;AACL,4BAAA,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACb,4BAAA,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;yBACrB,CAAC;AACJ,qBAAC,CAAC;AACD,yBAAA,MAAM,CAAC,CAAC,IAAa,KAAI;wBACxB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAChD,qBAAC,CAAC,CAAC;oBACL,UAAU,CAAC,IAAI,CAAC;AACd,wBAAA,OAAO,EAAE,QAAQ,CAAC,MAAM,GAAG,IAAI,GAAG,QAAQ;AAC1C,wBAAA,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,EAAE,IAAI,GAAG,QAAQ,CAAC;AAC9D,qBAAA,CAAC,CAAC;AACJ,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,SAAS,EAAE,aAAa;AACxB,gBAAA,QAAQ,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE;AAClC,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,UAAU,CAAc,UAAU,IAAG;gBAC9C,UAAU,CAAC,IAAI,CAAC;AACd,oBAAA,OAAO,EAAE,KAAK;AACd,oBAAA,KAAK,EAAE,EAAE;AACV,iBAAA,CAAC,CAAC;gBACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED,IAAA,aAAa,CAAC,QAAgB,EAAA;AAC5B,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;gBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC1C,gBAAA,MAAM,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACzD,gBAAA,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1B,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,SAAS,EAAE,aAAa;gBACxB,QAAQ,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE;AACrD,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,UAAU,CAAU,UAAU,IAAG;AAC1C,gBAAA,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC/C,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,IAAI,cAAc,CAACA,WAAS,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAACA,WAAS,CAAC,CAAC,CAAC;AAC9C,SAAA;AAAM,aAAA;YACL,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AACtC,SAAA;KACF;IAED,IAAI,IAAI,CAAC,IAAa,EAAA;QACpB,cAAc,CAACA,WAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAClD;8GArFU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAO,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCGY,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAoB,cAA8B,EAAA;QAA9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KAAI;AAEtD,IAAA,gBAAgB,CAAC,MAAmC,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CACvC,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,QAAQ,CAChB,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,IAAY,EAAA;QAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;KAChD;AAED,IAAA,OAAO,CAAC,IAAa,EAAA;AACnB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC;KACjC;8GAjBU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACND;;;;;AAKG;MAMU,sBAAsB,CAAA;AAcjC,IAAA,WAAA,CAAmB,OAA6B,EAAA;QAA7B,IAAO,CAAA,OAAA,GAAP,OAAO,CAAsB;AAXtC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAW,CAAC;KAWC;AAE7C,IAAA,WAAW,CAAC,KAAc,EAAA;QAC/B,OAAO,KAAK,CAAC,IAAI,CAAC;KACnB;AAED,IAAA,OAAO,CAAC,IAAa,EAAA;AACnB,QAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;8GAxBU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,oQCjBnC,i6BAgCA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDfa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;+BACE,iBAAiB,EAAA,QAAA,EAAA,i6BAAA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,CAAA;sFAMlB,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACI,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBAGW,MAAM,EAAA,CAAA;sBAAvB,KAAK;uBAAC,SAAS,CAAA;gBAEC,KAAK,EAAA,CAAA;sBAArB,KAAK;uBAAC,QAAQ,CAAA;gBAEO,OAAO,EAAA,CAAA;sBAA5B,KAAK;uBAAC,aAAa,CAAA;gBAEC,SAAS,EAAA,CAAA;sBAA7B,KAAK;uBAAC,YAAY,CAAA;;;MEjBR,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAnB,mBAAmB,EAAA,YAAA,EAAA,CAHf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAD3B,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CAEjE,sBAAsB,CAAA,EAAA,CAAA,CAAA,EAAA;AAErB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAJpB,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIhE,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAC;oBAC5E,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;AAClC,iBAAA,CAAA;;;ACJD,MAAMT,WAAS,GAAG,iBAAiB,CAAC;MAIvB,sBAAsB,CAAA;IASjC,WACU,CAAA,IAAgB,EAChB,YAAiC,EAAA;QADjC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QAVnC,IAAG,CAAA,GAAA,GAAG,iCAAiC,CAAC;QACxC,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QAEhB,IAAc,CAAA,cAAA,GAAG,gBAAgB,CAAC;QAClC,IAAc,CAAA,cAAA,GAAG,gBAAgB,CAAC;QAClC,IAAa,CAAA,aAAA,GAAG,eAAe,CAAC;QAChC,IAAa,CAAA,aAAA,GAAG,eAAe,CAAC;KAKlC;IAEL,sBAAsB,CACpB,WAAW,GAAG,EAAE,EAChB,IAAI,GAAG,CAAC,EACR,SAAS,GAAG,EAAE,EAAA;QAEd,MAAM,QAAQ,GAAG,GAAG,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,6BAA6B,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACxE,SAAA;QACD,OAAO,IAAI,CAAC,+BAA+B,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC1E;AAEO,IAAA,6BAA6B,CACnC,WAAW,EACX,IAAI,EACJ,QAAQ,EAAA;AAER,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE;AAC1B,aAAA,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC/B,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE3C,IAAI,WAAW,KAAK,EAAE,EAAE;YACtB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AACpD,SAAA;AACD,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KAC3E;AAEO,IAAA,+BAA+B,CACrC,WAAW,EACX,IAAI,EACJ,QAAQ,EAAA;AAER,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,WAAW;YACX,IAAI;YACJ,QAAQ;AACT,SAAA,CAAC,CAAC;AAEH,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAU,OAAA,EAAA,WAAW,CAAqB,mBAAA,CAAA;AACxD,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,WAAW,GAAyB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACvE,gBAAA,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,EACD;AACE,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,cAAc;AACzB,gBAAA,OAAO,EAAE,aAAa;AACvB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,cAAc;AAC/B,SAAA,CACF,CAAC;KACH;AAED,IAAA,eAAe,CAAC,cAAsB,EAAA;QACpC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;AACpD,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;KACtD;AAEO,IAAA,sBAAsB,CAAC,cAAsB,EAAA;AACnD,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,CAAG,EAAA,IAAI,CAAC,GAAG,CAAI,CAAA,EAAA,cAAc,EAAE,EAAE;YACtE,OAAO;AACR,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,wBAAwB,CAAC,cAAsB,EAAA;AACrD,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAU,OAAA,EAAA,cAAc,CAAqB,mBAAA,CAAA;AAC3D,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,UAAU,GAAqB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAClE,gBAAA,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,EACD;AACE,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,aAAa;AACxB,gBAAA,OAAO,EAAE,cAAc;AACxB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,aAAa;AAC9B,SAAA,CACF,CAAC;KACH;AAED,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,IAAI,cAAc,CAACA,WAAS,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAACA,WAAS,CAAC,CAAC,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AAC9C,SAAA;KACF;IAED,IAAI,YAAY,CAAC,YAA8B,EAAA;QAC7C,cAAc,CAACA,WAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;KAC1D;IAEO,gBAAgB,GAAA;AACtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,qDAAqD;AACnE,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;8GA9JU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCGY,4BAA4B,CAAA;AAEvC,IAAA,WAAA,CAAoB,sBAA8C,EAAA;QAA9C,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;AAD1D,QAAA,IAAA,CAAA,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;QAEpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;AAED,IAAA,gBAAgB,CAAC,MAAmC,EAAA;AAClD,QAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CACvD,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,QAAQ,CAChB,CAAC;KACH;AAED,IAAA,gBAAgB,CAAC,QAAgB,EAAA;QAC/B,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;KAC9D;AAED,IAAA,eAAe,CAAC,YAA8B,EAAA;AAC5C,QAAA,IAAI,CAAC,sBAAsB,CAAC,YAAY,GAAG,YAAY,CAAC;KACzD;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEO,oBAAoB,GAAA;QAC1B,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5D;8GAlCU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAS,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAA5B,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,cAF3B,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAHxC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACND;;;;;AAKG;MAMU,8BAA8B,CAAA;AAezC,IAAA,WAAA,CAAmB,OAAqC,EAAA;QAArC,IAAO,CAAA,OAAA,GAAP,OAAO,CAA8B;AAZ9C,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,YAAY,EAAoB,CAAC;KAYP;AAErD,IAAA,WAAW,CAAC,KAAuB,EAAA;AACxC,QAAA,OAAO,CAAG,EAAA,KAAK,CAAC,EAAE,EAAE,CAAC;KACtB;AAED,IAAA,eAAe,CAAC,YAA8B,EAAA;AAC5C,QAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACrB,uBAAuB,EAAE,YAAY,CAAC,WAAW;AAClD,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3C;8GA3BU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,4BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAA9B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,2RCjB3C,i8BAgCA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDfa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;+BACE,0BAA0B,EAAA,QAAA,EAAA,i8BAAA,EAAA,MAAA,EAAA,CAAA,yEAAA,CAAA,EAAA,CAAA;8FAM3B,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACI,iBAAiB,EAAA,CAAA;sBAA1B,MAAM;gBAGW,MAAM,EAAA,CAAA;sBAAvB,KAAK;uBAAC,SAAS,CAAA;gBAEK,SAAS,EAAA,CAAA;sBAA7B,KAAK;uBAAC,YAAY,CAAA;gBAEF,KAAK,EAAA,CAAA;sBAArB,KAAK;uBAAC,QAAQ,CAAA;gBAGO,OAAO,EAAA,CAAA;sBAA5B,KAAK;uBAAC,aAAa,CAAA;;;MElBT,2BAA2B,CAAA;8GAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAA3B,2BAA2B,EAAA,YAAA,EAAA,CAHvB,8BAA8B,CAAA,EAAA,OAAA,EAAA,CADnC,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CAEjE,8BAA8B,CAAA,EAAA,CAAA,CAAA,EAAA;AAE7B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,YAJ5B,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIhE,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,aAAa,EAAE,eAAe,CAAC;oBAC5E,YAAY,EAAE,CAAC,8BAA8B,CAAC;oBAC9C,OAAO,EAAE,CAAC,8BAA8B,CAAC;AAC1C,iBAAA,CAAA;;;MCUY,eAAe,CAAA;8GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAf,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAZxB,sBAAsB;YACtB,qBAAqB;YACrB,mBAAmB;AACnB,YAAA,2BAA2B,aAG3B,sBAAsB;YACtB,qBAAqB;YACrB,mBAAmB;YACnB,2BAA2B,CAAA,EAAA,CAAA,CAAA,EAAA;AAGlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAZxB,sBAAsB;YACtB,qBAAqB;YACrB,mBAAmB;AACnB,YAAA,2BAA2B,EAG3B,sBAAsB;YACtB,qBAAqB;YACrB,mBAAmB;YACnB,2BAA2B,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGlB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAd3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,sBAAsB;wBACtB,qBAAqB;wBACrB,mBAAmB;wBACnB,2BAA2B;AAC5B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,sBAAsB;wBACtB,qBAAqB;wBACrB,mBAAmB;wBACnB,2BAA2B;AAC5B,qBAAA;AACF,iBAAA,CAAA;;;MCbY,gBAAgB,CAAA;AAE3B,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;8GALU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,gDCP7B,kCAGA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDIa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;+BACE,UAAU,EAAA,QAAA,EAAA,kCAAA,EAAA,CAAA;;;MEOT,aAAa,CAAA;8GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAb,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,EAHT,YAAA,EAAA,CAAA,gBAAgB,CADrB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,gBAAgB,CAAA,EAAA,CAAA,CAAA,EAAA;AAEf,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAJd,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIX,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;AAC5B,iBAAA,CAAA;;;ACAD,MAAM,cAAc,GAAG,SAAS,CAAC;AACjC,MAAM,aAAa,GAAG,yBAAyB,CAAC;AAChD;;AAEG;MAIU,kBAAkB,CAAA;IAO7B,WACU,CAAA,IAAgB,EAChB,YAAiC,EAAA;QADjC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QARnC,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QAEP,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;QAC7B,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;QAC5B,IAAU,CAAA,UAAA,GAAW,iDAAiD,CAAC;KAKnF;AAEL;;;;;AAKG;AACH,IAAA,GAAG,CAAC,MAAc,EAAE,SAAA,GAAqB,KAAK,EAAA;AAC5C,QAAA,IAAI,IAAI,CAAC,OAAO,IAAI,SAAS,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAChC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAClC;AAEO,IAAA,UAAU,CAAC,MAAc,EAAA;AAC/B,QAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE;AAC9B,aAAA,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC;AAClC,aAAA,MAAM,CAAC,QAAQ,EAAE,iCAAiC,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAG,EAAA,aAAa,CAAI,CAAA,EAAA,MAAM,CAAE,CAAA,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAClE,GAAG,CAAC,CAAC,QAAqB,KAAI;AAC5B,YAAA,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAC3C,YAAA,OAAO,QAAQ,CAAC;AAClB,SAAC,CAAC,EAEF,GAAG,CAAC,CAAC,QAAqB,KAAI;YAC5B,cAAc,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC3D,CAAC,CACH,CAAC;KACH;AAEO,IAAA,YAAY,CAAC,MAAc,EAAA;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;AAE1D,QAAA,MAAM,gBAAgB,GAAG;AACvB,YAAA,QAAQ,EAAE;AACR,gBAAA,IAAI,EAAE,CAAG,EAAA,IAAI,CAAC,YAAY,CAAA,IAAA,EAAO,aAAa,CAAE,CAAA;AAChD,gBAAA,OAAO,EAAE,MAAM;AAChB,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;AAClB,YAAA,SAAS,EAAE,CAAG,EAAA,IAAI,CAAC,YAAY,CAAA,IAAA,EAAO,aAAa,CAAE,CAAA;SACtD,CAAC;QAEF,MAAM,kBAAkB,GAAG,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AAC9D,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE,CAAQ,KAAA,EAAA,MAAM,CAAqB,mBAAA,CAAA;AACjD,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,QAAQ,GAAgB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC3D,gBAAA,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC3C,cAAc,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAClE,gBAAA,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC;QAEF,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,kBAAkB,EAClB,gBAAgB,CACjB,CAAC;KACH;IAED,iBAAiB,GAAA;AACf,QAAA,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;KAC3C;IAEO,gBAAgB,GAAA;AAEtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,iDAAiD;AAC9D;;;;;;AAMG;AACJ,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;AAED;;;;AAIG;IACI,MAAM,GAAA;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/D;8GAnHU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAV,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACJD,MAAM,eAAe,GAAG,UAAU,CAAC;AACnC,MAAM,cAAc,GAAG,sBAAsB,CAAC;MAKjC,cAAc,CAAA;AAKzB,IAAA,WAAA,CACU,IAAgB,EAChB,kBAAsC,EACtC,YAAiC,EAAA;QAFjC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QACtC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QAEzC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC/D;IAED,oBAAoB,GAAA;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,EAAE;AACnD,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,gBAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,UAAU,CAAC,IAAI,CAAC;AACd,wBAAA,QAAQ,EAAE,EAAE;AACZ,wBAAA,aAAa,EAAE,IAAI;AACnB,wBAAA,QAAQ,EAAE,EAAE;AACZ,wBAAA,aAAa,EAAE,KAAK;AACpB,wBAAA,kBAAkB,EAAE,KAAK;AAC1B,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;oBACL,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC/C,oBAAA,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE,eAAe;AACtB,iBAAA;AACD,gBAAA,YAAY,EAAE,IAAI;AACnB,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,UAAU,CAAU,UAAU,IAAG;gBAC1C,UAAU,CAAC,IAAI,CAAC;AACd,oBAAA,QAAQ,EAAE,EAAE;AACZ,oBAAA,aAAa,EAAE,IAAI;AACnB,oBAAA,QAAQ,EAAE,EAAE;AACZ,oBAAA,aAAa,EAAE,KAAK;AACpB,oBAAA,kBAAkB,EAAE,KAAK;AAC1B,iBAAA,CAAC,CAAC;gBACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED,IAAA,YAAY,CAAC,IAAa,EAAA;AACxB,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,gBAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,UAAU,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AACnC,iBAAA;AAAM,qBAAA;oBACL,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACjD,oBAAA,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9B,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE,aAAa;oBACnB,OAAO,EAAE,IAAI,CACX,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAC/F;AACF,iBAAA;AACD,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,SAAS,EAAE,UAAU;AACtB,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE;AAC9B,iBAAA,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC;AAClC,iBAAA,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC;AAC7B,iBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC;AAC9B,iBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClC,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,cAAc,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;AACtE,SAAA;KACF;AAED,IAAA,YAAY,CAAC,aAAqB,EAAA;AAChC,QAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;AAC5B,aAAA,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC;AAClC,aAAA,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAEvC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,cAAc,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KACrE;AAED,IAAA,KAAK,CAAC,IAAa,EAAA;AACjB,QAAA,MAAM,YAAY,GAAG,IAAI,OAAO,EAAgB,CAAC;AAEjD,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAC/B;AACE,YAAA,IAAI,EAAE,CAAC,KAAmB,KAAI;AAC5B,gBAAA,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;AAC/D,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC1B,gBAAA,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B;AACD,YAAA,KAAK,EAAE,CAAC,KAAK,KAAI;AACf,gBAAA,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC3B;AACF,SAAA,CACF,CAAC;AAEF,QAAA,OAAO,YAAY,CAAC,YAAY,EAAE,CAAC;KACpC;AAED,IAAA,gBAAgB,CAAC,IAAY,EAAA;QAC3B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;KAC3D;AAED,IAAA,SAAS,CAAC,KAAmB,EAAA;QAC3B,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACzD;AAED,IAAA,YAAY,CAAC,MAAc,EAAA;AACzB,QAAA,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAqB,KAAI;AACtE,YAAA,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;AAC/B,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAA;QAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;AAC1C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;;AAE9D,QAAA,OAAO,OAAO,CAAC,GAAG,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;KAC5D;AAED,IAAA,MAAM,WAAW,GAAA;AACf,QAAA,MAAM,KAAK,GAAiB,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC;AAC1F,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACtB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,MAAM,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,CAAC;AACrD,QAAA,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AACxC,SAAA;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;AAED,IAAA,IAAI,kBAAkB,GAAA;AACpB,QAAA,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;KAC1E;IAED,MAAM,GAAA;AACJ,QAAA,cAAc,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;KAC7C;AAED,IAAA,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAA;AAC7C,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9C;AAED,IAAA,IAAI,MAAM,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC;KACtC;8GAvKU,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAW,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCPY,wBAAwB,CAAA;AACnC,IAAA,WAAA,CAAoB,cAA8B,EAAA;QAA9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KAAK;IACvD,OAAO,CACL,MAA+B,EAC/B,MAA4B,EAAA;AAE5B,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAC;KACnD;8GAPU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cAFvB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAHpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCAY,iBAAiB,CAAA;IAC5B,WACU,CAAA,qBAA4C,EAC5C,YAAiC,EAAA;QADjC,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAC5C,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AAEzC,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AACzC,YAAA,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAI;AACtE,gBAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,OAAO;AACR,iBAAA;AAAM,qBAAA;oBACL,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;oBACnD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC;AAC7D,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;;AAED,IAAA,cAAc,CAAC,OAAe,EAAE,IAAA,GAAe,CAAC,EAAA;AAC9C,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACjC,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,WAAW,CAAC,OAAe,EAAE,IAAA,GAAe,CAAC,EAAA;AAC3C,QAAA,MAAM,YAAY,GAAmB;YACnC,OAAO;YACP,WAAW,EAAE,oBAAoB,CAAC,GAAG;SACtC,CAAC;QACF,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,YAAA,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAClD,SAAA;QACD,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,YAAA,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAChD,SAAA;QACD,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,YAAA,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AACtD,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,cAAc,CAAC,QAAgB,EAAA;AAC7B,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;gBACnC,IAAI,gBAAgB,KAAK,MAAM,EAAE;oBAC/B,UAAU,CAAC,KAAK,CAAC;AACf,wBAAA,MAAM,EAAE,GAAG;AACX,wBAAA,WAAW,EAAE,+BAA+B;AAC7C,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;oBACL,UAAU,CAAC,IAAI,EAAE,CAAC;AACnB,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE,gBAAgB;AACtB,oBAAA,OAAO,EAAE,QAAQ;AAClB,iBAAA;AACD,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,SAAS,EAAE,gBAAgB;AAC5B,aAAA,CACF,CAAC;AACH,SAAA;KACF;8GAzEU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACRM,MAAM,kBAAkB,GAAG;AAChC,IAAA,2BAA2B,EAAE,SAAS;AACtC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,0BAA0B,EAAE,SAAS;AAErC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,sBAAsB,EAAE,SAAS;AACjC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,sBAAsB,EAAE,SAAS;AAEjC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AAErC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,wBAAwB,EAAE,SAAS;AAEnC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AAEpC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,uBAAuB,EAAE,SAAS;AAElC,IAAA,oCAAoC,EAAE,SAAS;AAC/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,oCAAoC,EAAE,SAAS;AAE/C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,6BAA6B,EAAE,SAAS;AACxC,IAAA,4BAA4B,EAAE,SAAS;AACvC,IAAA,4BAA4B,EAAE,SAAS;AACvC,IAAA,8BAA8B,EAAE,SAAS;AACzC,IAAA,gCAAgC,EAAE,SAAS;AAE3C,IAAA,oCAAoC,EAAE,SAAS;AAC/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,oCAAoC,EAAE,SAAS;AAE/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,mCAAmC,EAAE,SAAS;CAC/C,CAAC;AAEK,MAAM,iBAAiB,GAAG;AAC/B,IAAA,2BAA2B,EAAE,SAAS;AACtC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,0BAA0B,EAAE,SAAS;AAErC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,sBAAsB,EAAE,SAAS;AACjC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,sBAAsB,EAAE,SAAS;AAEjC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AAErC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,wBAAwB,EAAE,SAAS;AAEnC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AAEpC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,uBAAuB,EAAE,SAAS;AAElC,IAAA,oCAAoC,EAAE,SAAS;AAC/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,oCAAoC,EAAE,SAAS;AAE/C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,6BAA6B,EAAE,SAAS;AACxC,IAAA,4BAA4B,EAAE,SAAS;AACvC,IAAA,4BAA4B,EAAE,SAAS;AACvC,IAAA,8BAA8B,EAAE,SAAS;AACzC,IAAA,gCAAgC,EAAE,SAAS;AAE3C,IAAA,oCAAoC,EAAE,SAAS;AAC/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,oCAAoC,EAAE,SAAS;AAE/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,mCAAmC,EAAE,SAAS;CAC/C,CAAC;AAEK,MAAM,mBAAmB,GAAG;AACjC,IAAA,2BAA2B,EAAE,SAAS;AACtC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,0BAA0B,EAAE,SAAS;AAErC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,sBAAsB,EAAE,SAAS;AACjC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,sBAAsB,EAAE,SAAS;AAEjC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AACrC,IAAA,0BAA0B,EAAE,SAAS;AAErC,IAAA,wBAAwB,EAAE,SAAS;AACnC,IAAA,wBAAwB,EAAE,SAAS;AAEnC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AACpC,IAAA,yBAAyB,EAAE,SAAS;AAEpC,IAAA,uBAAuB,EAAE,SAAS;AAClC,IAAA,uBAAuB,EAAE,SAAS;AAElC,IAAA,oCAAoC,EAAE,SAAS;AAC/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,oCAAoC,EAAE,SAAS;AAE/C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,6BAA6B,EAAE,SAAS;AACxC,IAAA,4BAA4B,EAAE,SAAS;AACvC,IAAA,4BAA4B,EAAE,SAAS;AACvC,IAAA,8BAA8B,EAAE,SAAS;AACzC,IAAA,gCAAgC,EAAE,SAAS;AAE3C,IAAA,oCAAoC,EAAE,SAAS;AAC/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,oCAAoC,EAAE,SAAS;AAE/C,IAAA,mCAAmC,EAAE,SAAS;AAC9C,IAAA,kCAAkC,EAAE,SAAS;AAC7C,IAAA,gCAAgC,EAAE,SAAS;AAC3C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,+BAA+B,EAAE,SAAS;AAC1C,IAAA,iCAAiC,EAAE,SAAS;AAC5C,IAAA,mCAAmC,EAAE,SAAS;CAC/C;;AChLD;;;AAGG;AACH,IAAY,YAGX,CAAA;AAHD,CAAA,UAAY,YAAY,EAAA;AACtB,IAAA,YAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,YAAA,CAAA,qBAAA,CAAA,GAAA,qBAA2C,CAAA;AAC7C,CAAC,EAHW,YAAY,KAAZ,YAAY,GAGvB,EAAA,CAAA,CAAA,CAAA;AAUD;;AAEG;MACU,QAAQ,CAAA;AAKnB,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACrC,QAAA,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,KAAK,CAAC;KACtC;AAED,IAAA,IAAW,IAAI,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAW,IAAI,CAAC,IAAY,EAAA;AAC1B,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACnB;AAED,IAAA,IAAW,MAAM,GAAA;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAW,MAAM,CAAC,MAAuB,EAAA;AACvC,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;KACvB;AAED,IAAA,IAAW,IAAI,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAW,IAAI,CAAC,IAAoB,EAAA;AAClC,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACnB;AAED;;;AAGG;IACI,eAAe,GAAA;QACpB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAC3C,QAAA,OAAO,MAAM,CAAC;KACf;AAED;;;AAGG;AACI,IAAA,QAAQ,CAAC,KAAmB,EAAA;AACjC,QAAA,IAAI,MAAgB,CAAC;AAErB,QAAA,QAAQ,KAAK;YACX,KAAK,YAAY,CAAC,oBAAoB;AACpC,gBAAA,MAAM,GAAG,IAAI,oBAAoB,EAAE,CAAC;gBACpC,MAAM;YACR,KAAK,YAAY,CAAC,mBAAmB;AACnC,gBAAA,MAAM,GAAG,IAAI,mBAAmB,EAAE,CAAC;gBACnC,MAAM;AACT,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC5B,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;KACzB;AAED;;;AAGG;IACK,gBAAgB,GAAA;QACtB,OAAO;AACL,YAAA,KAAK,EAAE;AACL,gBAAA,KAAK,EAAE;AACL,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE;AACJ,4BAAA,QAAQ,EAAE,EAAE;AACZ,4BAAA,OAAO,EAAE,EAAE;AACX,4BAAA,KAAK,EAAE,EAAE;AACT,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,MAAM,EAAE,EAAE;AACV,4BAAA,OAAO,EAAE,EAAE;AACZ,yBAAA;AACD,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACD,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACF,qBAAA;AACD,oBAAA,MAAM,EAAE;AACN,wBAAA,GAAG,qBAAqB;AACzB,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,GAAG,sBAAsB;AACzB,wBAAA,IAAI,EAAE;4BACJ,GAAG,sBAAsB,CAAC,IAAI;AAC9B,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACF,qBAAA;AACD,oBAAA,OAAO,EAAE;AACP,wBAAA,GAAG,sBAAsB;AAC1B,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,EAAE;AACJ,gBAAA,KAAK,EAAE;AACL,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE;AACJ,4BAAA,QAAQ,EAAE,EAAE;AACZ,4BAAA,OAAO,EAAE,EAAE;AACX,4BAAA,KAAK,EAAE,EAAE;AACT,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,MAAM,EAAE,EAAE;AACV,4BAAA,OAAO,EAAE,EAAE;AACZ,yBAAA;AACD,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACD,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACF,qBAAA;AACD,oBAAA,MAAM,EAAE;AACN,wBAAA,OAAO,EAAE,EAAE;AACX,wBAAA,KAAK,EAAE,EAAE;AACT,wBAAA,OAAO,EAAE,EAAE;AACX,wBAAA,QAAQ,EAAE,EAAE;AACZ,wBAAA,KAAK,EAAE,EAAE;AACV,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,GAAG,sBAAsB;AACzB,wBAAA,IAAI,EAAE;4BACJ,GAAG,sBAAsB,CAAC,IAAI;AAC9B,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACF,qBAAA;AACD,oBAAA,OAAO,EAAE;AACP,wBAAA,KAAK,EAAE;AACL,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACD,wBAAA,GAAG,EAAE;AACH,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACD,wBAAA,IAAI,EAAE;AACJ,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACR,4BAAA,IAAI,EAAE,EAAE;AACT,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;SACF,CAAC;KACH;AACF,CAAA;AAED;;;AAGG;AACG,MAAO,oBAAqB,SAAQ,QAAQ,CAAA;AAChD,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;AACnC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAC5C;IAEO,uBAAuB,GAAA;QAC7B,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,iCAAiC,EAAE;AAC/C,YAAA,IAAI,EAAE,IAAI,CAAC,kCAAkC,EAAE;SAChD,CAAC;KACH;IAEO,kCAAkC,GAAA;QACxC,OAAO;AACL,YAAA,KAAK,EAAE;AACL,gBAAA,KAAK,EAAE;AACL,oBAAA,IAAI,EAAE;AACJ,wBAAA,QAAQ,EAAE,iBAAiB,CAAC,2BAA2B,CAAC;AACxD,wBAAA,OAAO,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACtD,wBAAA,KAAK,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;AAClD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,uBAAuB,CAAC;AAChD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,uBAAuB,CAAC;AAChD,wBAAA,MAAM,EAAE,iBAAiB,CAAC,yBAAyB,CAAC;AACpD,wBAAA,OAAO,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACvD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,iBAAiB,CAAC,uBAAuB,CAAC;AACjD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,iBAAiB,CAAC,uBAAuB,CAAC;AACjD,qBAAA;AACF,iBAAA;AACD,gBAAA,MAAM,EAAE;AACN,oBAAA,OAAO,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;AACpD,oBAAA,KAAK,EAAE,iBAAiB,CAAC,sBAAsB,CAAC;AAChD,oBAAA,OAAO,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;AACpD,oBAAA,QAAQ,EAAE,iBAAiB,CAAC,yBAAyB,CAAC;AACtD,oBAAA,KAAK,EAAE,iBAAiB,CAAC,sBAAsB,CAAC;AACjD,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACnD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACnD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACnD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACnD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,0BAA0B,CAAC;AACpD,qBAAA;AACD,oBAAA,GAAG,EAAE;AACH,wBAAA,IAAI,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;AACjD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,wBAAwB,CAAC;AAClD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,iBAAiB,CAAC,yBAAyB,CAAC;AAClD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,yBAAyB,CAAC;AAClD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,yBAAyB,CAAC;AAClD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,yBAAyB,CAAC;AACnD,qBAAA;AACF,iBAAA;AACD,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,iBAAiB,CAAC,4BAA4B,CAAC;AACrD,wBAAA,QAAQ,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AAC7D,wBAAA,OAAO,EAAE,iBAAiB,CAAC,4BAA4B,CAAC;AACxD,wBAAA,KAAK,EAAE,iBAAiB,CAAC,6BAA6B,CAAC;AACvD,wBAAA,IAAI,EAAE,iBAAiB,CAAC,4BAA4B,CAAC;AACrD,wBAAA,MAAM,EAAE,iBAAiB,CAAC,8BAA8B,CAAC;AACzD,wBAAA,OAAO,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AAC7D,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,IAAI,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AACzD,wBAAA,QAAQ,EAAE,iBAAiB,CAAC,oCAAoC,CAAC;AACjE,wBAAA,OAAO,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AAC5D,wBAAA,KAAK,EAAE,iBAAiB,CAAC,iCAAiC,CAAC;AAC3D,wBAAA,IAAI,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AACzD,wBAAA,MAAM,EAAE,iBAAiB,CAAC,kCAAkC,CAAC;AAC7D,wBAAA,OAAO,EAAE,iBAAiB,CAAC,oCAAoC,CAAC;AACjE,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,IAAI,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AACzD,wBAAA,QAAQ,EAAE,iBAAiB,CAAC,oCAAoC,CAAC;AACjE,wBAAA,OAAO,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AAC5D,wBAAA,KAAK,EAAE,iBAAiB,CAAC,iCAAiC,CAAC;AAC3D,wBAAA,IAAI,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AACzD,wBAAA,MAAM,EAAE,iBAAiB,CAAC,kCAAkC,CAAC;AAC7D,wBAAA,OAAO,EAAE,iBAAiB,CAAC,oCAAoC,CAAC;AACjE,qBAAA;AACD,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE,iBAAiB,CAAC,+BAA+B,CAAC;AACxD,wBAAA,QAAQ,EAAE,iBAAiB,CAAC,mCAAmC,CAAC;AAChE,wBAAA,OAAO,EAAE,iBAAiB,CAAC,+BAA+B,CAAC;AAC3D,wBAAA,KAAK,EAAE,iBAAiB,CAAC,gCAAgC,CAAC;AAC1D,wBAAA,IAAI,EAAE,iBAAiB,CAAC,+BAA+B,CAAC;AACxD,wBAAA,MAAM,EAAE,iBAAiB,CAAC,iCAAiC,CAAC;AAC5D,wBAAA,OAAO,EAAE,iBAAiB,CAAC,mCAAmC,CAAC;AAChE,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;gBACN,GAAG,wBAAwB,CAAC,MAAM;AACnC,aAAA;AACD,YAAA,YAAY,EAAE;gBACZ,GAAG,wBAAwB,CAAC,YAAY;AACzC,aAAA;SACF,CAAC;KACH;IAEO,iCAAiC,GAAA;QACvC,OAAO;AACL,YAAA,KAAK,EAAE;AACL,gBAAA,KAAK,EAAE;AACL,oBAAA,IAAI,EAAE;AACJ,wBAAA,QAAQ,EAAE,kBAAkB,CAAC,2BAA2B,CAAC;AACzD,wBAAA,OAAO,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACvD,wBAAA,KAAK,EAAE,kBAAkB,CAAC,wBAAwB,CAAC;AACnD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,uBAAuB,CAAC;AACjD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,uBAAuB,CAAC;AACjD,wBAAA,MAAM,EAAE,kBAAkB,CAAC,yBAAyB,CAAC;AACrD,wBAAA,OAAO,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACxD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,kBAAkB,CAAC,uBAAuB,CAAC;AAClD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,kBAAkB,CAAC,uBAAuB,CAAC;AAClD,qBAAA;AACF,iBAAA;AACD,gBAAA,MAAM,EAAE;AACN,oBAAA,OAAO,EAAE,kBAAkB,CAAC,wBAAwB,CAAC;AACrD,oBAAA,KAAK,EAAE,kBAAkB,CAAC,sBAAsB,CAAC;AACjD,oBAAA,OAAO,EAAE,kBAAkB,CAAC,wBAAwB,CAAC;AACrD,oBAAA,QAAQ,EAAE,kBAAkB,CAAC,yBAAyB,CAAC;AACvD,oBAAA,KAAK,EAAE,kBAAkB,CAAC,sBAAsB,CAAC;AAClD,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACpD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACpD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACpD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACpD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,0BAA0B,CAAC;AACrD,qBAAA;AACD,oBAAA,GAAG,EAAE;AACH,wBAAA,IAAI,EAAE,kBAAkB,CAAC,wBAAwB,CAAC;AAClD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,wBAAwB,CAAC;AACnD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,kBAAkB,CAAC,yBAAyB,CAAC;AACnD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,yBAAyB,CAAC;AACnD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,yBAAyB,CAAC;AACnD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,yBAAyB,CAAC;AACpD,qBAAA;AACF,iBAAA;AACD,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,kBAAkB,CAAC,4BAA4B,CAAC;AACtD,wBAAA,QAAQ,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC9D,wBAAA,OAAO,EAAE,kBAAkB,CAAC,4BAA4B,CAAC;AACzD,wBAAA,KAAK,EAAE,kBAAkB,CAAC,6BAA6B,CAAC;AACxD,wBAAA,IAAI,EAAE,kBAAkB,CAAC,4BAA4B,CAAC;AACtD,wBAAA,MAAM,EAAE,kBAAkB,CAAC,8BAA8B,CAAC;AAC1D,wBAAA,OAAO,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC9D,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,IAAI,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC1D,wBAAA,QAAQ,EAAE,kBAAkB,CAAC,oCAAoC,CAAC;AAClE,wBAAA,OAAO,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC7D,wBAAA,KAAK,EAAE,kBAAkB,CAAC,iCAAiC,CAAC;AAC5D,wBAAA,IAAI,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC1D,wBAAA,MAAM,EAAE,kBAAkB,CAAC,kCAAkC,CAAC;AAC9D,wBAAA,OAAO,EAAE,kBAAkB,CAAC,oCAAoC,CAAC;AAClE,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,IAAI,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC1D,wBAAA,QAAQ,EAAE,kBAAkB,CAAC,oCAAoC,CAAC;AAClE,wBAAA,OAAO,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC7D,wBAAA,KAAK,EAAE,kBAAkB,CAAC,iCAAiC,CAAC;AAC5D,wBAAA,IAAI,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC1D,wBAAA,MAAM,EAAE,kBAAkB,CAAC,kCAAkC,CAAC;AAC9D,wBAAA,OAAO,EAAE,kBAAkB,CAAC,oCAAoC,CAAC;AAClE,qBAAA;AACD,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE,kBAAkB,CAAC,+BAA+B,CAAC;AACzD,wBAAA,QAAQ,EAAE,kBAAkB,CAAC,mCAAmC,CAAC;AACjE,wBAAA,OAAO,EAAE,kBAAkB,CAAC,+BAA+B,CAAC;AAC5D,wBAAA,KAAK,EAAE,kBAAkB,CAAC,gCAAgC,CAAC;AAC3D,wBAAA,IAAI,EAAE,kBAAkB,CAAC,+BAA+B,CAAC;AACzD,wBAAA,MAAM,EAAE,kBAAkB,CAAC,iCAAiC,CAAC;AAC7D,wBAAA,OAAO,EAAE,kBAAkB,CAAC,mCAAmC,CAAC;AACjE,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;gBACN,GAAG,yBAAyB,CAAC,MAAM;AACpC,aAAA;AACD,YAAA,YAAY,EAAE;gBACZ,GAAG,yBAAyB,CAAC,YAAY;AAC1C,aAAA;SACF,CAAC;KACH;AACF,CAAA;AAED;;;AAGG;AACG,MAAO,mBAAoB,SAAQ,QAAQ,CAAA;AAC/C,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;AAClC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC3C;IAEO,sBAAsB,GAAA;QAC5B,OAAO;AACL,YAAA,KAAK,EAAE,IAAI,CAAC,iCAAiC,EAAE;SAChD,CAAC;KACH;IAEO,iCAAiC,GAAA;QACvC,OAAO;AACL,YAAA,KAAK,EAAE;AACL,gBAAA,KAAK,EAAE;AACL,oBAAA,IAAI,EAAE;AACJ,wBAAA,QAAQ,EAAE,mBAAmB,CAAC,2BAA2B,CAAC;AAC1D,wBAAA,OAAO,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACxD,wBAAA,KAAK,EAAE,mBAAmB,CAAC,wBAAwB,CAAC;AACpD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,uBAAuB,CAAC;AAClD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,uBAAuB,CAAC;AAClD,wBAAA,MAAM,EAAE,mBAAmB,CAAC,yBAAyB,CAAC;AACtD,wBAAA,OAAO,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACzD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,mBAAmB,CAAC,uBAAuB,CAAC;AACnD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,mBAAmB,CAAC,uBAAuB,CAAC;AACnD,qBAAA;AACF,iBAAA;AACD,gBAAA,MAAM,EAAE;AACN,oBAAA,OAAO,EAAE,mBAAmB,CAAC,wBAAwB,CAAC;AACtD,oBAAA,KAAK,EAAE,mBAAmB,CAAC,sBAAsB,CAAC;AAClD,oBAAA,OAAO,EAAE,mBAAmB,CAAC,wBAAwB,CAAC;AACtD,oBAAA,QAAQ,EAAE,mBAAmB,CAAC,yBAAyB,CAAC;AACxD,oBAAA,KAAK,EAAE,mBAAmB,CAAC,sBAAsB,CAAC;AACnD,iBAAA;AACD,gBAAA,OAAO,EAAE;AACP,oBAAA,KAAK,EAAE;AACL,wBAAA,IAAI,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACrD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACrD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACrD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACrD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,0BAA0B,CAAC;AACtD,qBAAA;AACD,oBAAA,GAAG,EAAE;AACH,wBAAA,IAAI,EAAE,mBAAmB,CAAC,wBAAwB,CAAC;AACnD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,wBAAwB,CAAC;AACpD,qBAAA;AACD,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,mBAAmB,CAAC,yBAAyB,CAAC;AACpD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,yBAAyB,CAAC;AACpD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,yBAAyB,CAAC;AACpD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,yBAAyB,CAAC;AACrD,qBAAA;AACF,iBAAA;AACD,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,mBAAmB,CAAC,4BAA4B,CAAC;AACvD,wBAAA,QAAQ,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC/D,wBAAA,OAAO,EAAE,mBAAmB,CAAC,4BAA4B,CAAC;AAC1D,wBAAA,KAAK,EAAE,mBAAmB,CAAC,6BAA6B,CAAC;AACzD,wBAAA,IAAI,EAAE,mBAAmB,CAAC,4BAA4B,CAAC;AACvD,wBAAA,MAAM,EAAE,mBAAmB,CAAC,8BAA8B,CAAC;AAC3D,wBAAA,OAAO,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC/D,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,IAAI,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC3D,wBAAA,QAAQ,EAAE,mBAAmB,CAAC,oCAAoC,CAAC;AACnE,wBAAA,OAAO,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC9D,wBAAA,KAAK,EAAE,mBAAmB,CAAC,iCAAiC,CAAC;AAC7D,wBAAA,IAAI,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC3D,wBAAA,MAAM,EAAE,mBAAmB,CAAC,kCAAkC,CAAC;AAC/D,wBAAA,OAAO,EAAE,mBAAmB,CAAC,oCAAoC,CAAC;AACnE,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACR,wBAAA,IAAI,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC3D,wBAAA,QAAQ,EAAE,mBAAmB,CAAC,oCAAoC,CAAC;AACnE,wBAAA,OAAO,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC9D,wBAAA,KAAK,EAAE,mBAAmB,CAAC,iCAAiC,CAAC;AAC7D,wBAAA,IAAI,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC3D,wBAAA,MAAM,EAAE,mBAAmB,CAAC,kCAAkC,CAAC;AAC/D,wBAAA,OAAO,EAAE,mBAAmB,CAAC,oCAAoC,CAAC;AACnE,qBAAA;AACD,oBAAA,OAAO,EAAE;AACP,wBAAA,IAAI,EAAE,mBAAmB,CAAC,+BAA+B,CAAC;AAC1D,wBAAA,QAAQ,EAAE,mBAAmB,CAAC,mCAAmC,CAAC;AAClE,wBAAA,OAAO,EAAE,mBAAmB,CAAC,+BAA+B,CAAC;AAC7D,wBAAA,KAAK,EAAE,mBAAmB,CAAC,gCAAgC,CAAC;AAC5D,wBAAA,IAAI,EAAE,mBAAmB,CAAC,+BAA+B,CAAC;AAC1D,wBAAA,MAAM,EAAE,mBAAmB,CAAC,iCAAiC,CAAC;AAC9D,wBAAA,OAAO,EAAE,mBAAmB,CAAC,mCAAmC,CAAC;AAClE,qBAAA;AACF,iBAAA;AACF,aAAA;AACD,YAAA,MAAM,EAAE;gBACN,GAAG,yBAAyB,CAAC,MAAM;AACpC,aAAA;AACD,YAAA,YAAY,EAAE;gBACZ,GAAG,yBAAyB,CAAC,YAAY;AAC1C,aAAA;SACF,CAAC;KACH;AACF;;MC5fY,eAAe,CAAA;AAE1B,IAAA,WAAA,CAAoB,OAAuB,EAAA;QAAvB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;AADpC,QAAA,IAAA,CAAA,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;KACI;AAE/C;;;AAGG;IACI,QAAQ,GAAA;AACb,QAAA,MAAM,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEtD,QAAQ,oBAAoB,EAAE,aAAa;YACzC,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC1D,gBAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC5D,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC1D,gBAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3D,MAAM;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC5D,MAAM;AACR,YAAA;gBACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC1D,gBAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;AAC/D,SAAA;KACF;IAEO,iBAAiB,GAAA;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;KACrD;8GAhCU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAc,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAf,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACAD,MAAMf,WAAS,GAAG,cAAc,CAAC;MAIpB,mBAAmB,CAAA;AAI9B,IAAA,WAAA,CACU,IAAgB,EAChB,YAAiC,EACjC,YAA6B,EAAA;QAF7B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QACjC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAiB;AALhC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAOvC,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,4BAA4B,CAAC;AACjC,aAAA,SAAS,EAAE;AACX,aAAA,IAAI,CAAC,CAAC,IAAI,KAAI;YACb,MAAM,YAAY,GAAiB,IAAI,CAAC;;AAExC,YAAA,IAAI,cAAc,CAACA,WAAS,CAAC,KAAK,SAAS,EAAE;gBAC3C,cAAc,CAACA,WAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;AAC1D,aAAA;AACD,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,OAAO,IAAI,CAAC,YAAY,CAAC;AAC3B,SAAC,CAAC,CAAC;KACN;AAED;;;AAGG;IACH,YAAY,CAAC,MAAe,IAAI,EAAA;AAC9B,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC1C,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;AACnC,SAAA;KACF;IAED,cAAc,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;KAC9C;AAED,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,IAAI,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;AACnC,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAACA,WAAS,CAAC,CAAC,CAAC;AAC5D,SAAA;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;KAC/B;AAED,IAAA,IAAI,gBAAgB,GAAA;AAClB,QAAA,OAAO,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;cAC7C,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc;AACpE,cAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;KACnC;AAED,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;KACtC;AAED,IAAA,IAAI,gBAAgB,GAAA;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,UAAU,CAAC;KACtD;IAED,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;8GAtEU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAe,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCAY,kBAAkB,CAAA;AAO7B,IAAA,WAAA,CACU,IAAgB,EAChB,YAAiC,EACjC,mBAAwC,EAAA;QAFxC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QACjC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QAT1C,IAAG,CAAA,GAAA,GAAG,8CAA8C,CAAC;QACrD,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QAEf,IAAmB,CAAA,mBAAA,GAAG,cAAc,CAAC;QACrC,IAAmB,CAAA,mBAAA,GAAG,cAAc,CAAC;KAMxC;IAEE,kBAAkB,GAAA;AACvB,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,GAAG,CAAC,CAAC;AACjD,aAAA;AAED,YAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACf,SAAA;KACF;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;AACX,oBAAA,WAAW,EAAE,0BAA0B;AACxC,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,QAAQ,GAAoB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC/D,gBAAA,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,EACD;AACE,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,mBAAmB;AAC/B,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,mBAAmB;AACpC,SAAA,CACF,CAAC;KACH;IAEO,gBAAgB,GAAA;AACtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,iDAAiD;AAC/D,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;8GArEU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAf,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgB,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCAY,eAAe,CAAA;AAO1B,IAAA,WAAA,CACU,IAAgB,EAChB,YAAiC,EACjC,mBAAwC,EAAA;QAFxC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QACjC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QAT1C,IAAG,CAAA,GAAA,GAAG,yBAAyB,CAAC;QAChC,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QAEf,IAAsB,CAAA,sBAAA,GAAG,iBAAiB,CAAC;QAC3C,IAAsB,CAAA,sBAAA,GAAG,iBAAiB,CAAC;KAM9C;IAEE,WAAW,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,gBAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1D,aAAA;AAED,YAAA,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACpC,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;AACpB,SAAA;KACF;AAED;;;AAGG;IACK,oBAAoB,GAAA;AAC1B,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,UAAU,CAAC,KAAK,CAAC;AACf,wBAAA,MAAM,EAAE,GAAG;AACX,wBAAA,WAAW,EAAE,yBAAyB;AACvC,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;AACL,oBAAA,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACnC,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACvB,aAAA;AACH,SAAC,EACD;AACE,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,sBAAsB;AAClC,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,sBAAsB;AACvC,SAAA,CACF,CAAC;KACH;IAEO,gBAAgB,GAAA;AACtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,8CAA8C;AAC5D,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;8GA1EU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAhB,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgB,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAf,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCkBY,iBAAiB,CAAA;IAiB5B,IAA6B,SAAS,CAAC,KAAa,EAAA;AAClD,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;AAED,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;KAChE;AAED,IAAA,WAAA,CACU,MAAc,EACd,KAAqB,EACrB,WAA2B,EAC3B,cAAiC,EACjC,aAA4B,EAC5B,KAAiB,EACjB,kBAAsC,EACtC,eAAgC,EAAA;QAPhC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;QACrB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAgB;QAC3B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAK,CAAA,KAAA,GAAL,KAAK,CAAY;QACjB,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QACtC,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;AA9BlC,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;QAU7B,IAAS,CAAA,SAAA,GAAsB,EAAE,CAAC;QAClC,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;QACV,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QAoBf,IAAI,CAAC,WAAW,EAAE,CAAC;AACnB,QAAA,MAAM,QAAQ,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAClD,aAAa;aACV,WAAW,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAC3C,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;AACrB,SAAC,CAAC,CAAC;AACL,QAAA,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KAC9C;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC3C;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACvC;AAED,IAAA,eAAe,CAAC,IAAY,EAAA;AAC1B,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAClD,cAAc,GAAG,IAAI,GAAG,IAAI,CAC7B,CAAC;AACF,QAAA,IAAI,KAAK,EAAE;YACT,UAAU,CAAC,MAAM,KAAK,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;AACtC,SAAA;KACF;IAEO,mBAAmB,GAAA;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,gBAAgB,KAAI;AACpD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;AAC9C,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,gBAAgB,CAAC,IAAI,EAAA;AACnB,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,MAAK;AACH,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW;AAC3C,kBAAE,IAAI,CAAC,WAAW,CAAC,WAAW;AAC9B,kBAAE,IAAI,CAAC,SAAS,CAAC;AACnB,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtD,SAAC,EACD,CAAC,KAAK,KAAI;AACR,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,YAAA,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnC,SAAC,CACF,CAAC;KACH;AAED,IAAA,YAAY,CAAC,eAAe,EAAA;AAC1B,QAAA,IAAI,eAAe,EAAE;YACnB,eAAe;iBACZ,IAAI,CAAC,MAAK;AACT,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB,aAAC,CAAC;AACD,iBAAA,KAAK,CAAC,CAAC,KAAK,KAAI;AACf,gBAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB,aAAC,CAAC,CAAC;AACN,SAAA;KACF;AAED,IAAA,oBAAoB,CAAC,WAAiB,EAAA;QACpC,IAAI,WAAW,CAAC,aAAa,EAAE;AAC7B,YAAA,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,aAAa,CAAC;AAC9C,YAAA,IAAI,CAAC,gBAAgB;AACnB,gBAAA,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB;AAC3C,oBAAA,WAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC;YACjD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC;YACrD,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC;AACtD,SAAA;KACF;IAED,IAAI,YAAY,CAAC,QAAiB,EAAA;AAChC,QAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;KAClC;AAED,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;AAED,IAAA,aAAa,CAAC,QAAqB,EAAA;AACjC,QAAA,MAAM,IAAI,GAAY;YACpB,QAAQ,EAAE,QAAQ,CAAC,KAAK;YACxB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,aAAa,EACX,QAAQ,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,oBAAoB;SAClE,CAAC;AACF,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAClB;AAED;;;;AAIG;IACH,gBAAgB,CAAC,EAAE,QAAQ,EAAE,EAAA;QAC3B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,aAAa;aACf,WAAW,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;AAC3C,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC3B,SAAC,CAAC,CAAC;AAEL,QAAA,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KAC9C;AAED,IAAA,WAAW,CAAC,QAAa,EAAA;QACvB,IAAI,CAAC,QAAQ,GAAG;YACd,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,UAAU,EAAE,QAAQ,CAAC,OAAO;YAC5B,gBAAgB,EAAE,QAAQ,CAAC,OAAO;YAClC,aAAa,EAAE,QAAQ,CAAC,OAAO;YAC/B,SAAS,EAAE,QAAQ,CAAC,OAAO;YAC3B,gBAAgB,EAAE,QAAQ,CAAC,OAAO;AAClC,YAAA,mBAAmB,EAAE,EAAE;SACxB,CAAC;KACH;AAED,IAAA,aAAa,CAAC,KAAa,EAAA;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IAED,mBAAmB,GAAA;QACjB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACpD;AAED;;;AAGG;IACH,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,EAAA;QAC1D,IAAI,WAAW,GAAG,2BAA2B,CAAC;AAE9C,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;YACvB,WAAW;AACT,gBAAA,QAAQ,KAAK,IAAI;AACf,sBAAE,oCAAoC;sBACpC,mCAAmC,CAAC;AAC3C,SAAA;AAAM,aAAA;YACL,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,WAAW,GAAG,yCAAyC,CAAC;AACzD,aAAA;iBAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC5B,WAAW,GAAG,4CAA4C,CAAC;AAC5D,aAAA;AACF,SAAA;AAED,QAAA,OAAO,WAAW,CAAC;KACpB;AAEO,IAAA,KAAK,CAAC,IAAa,EAAA;QACzB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAEtB,QAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;KAC5C;AAED,IAAA,iBAAiB,CAAC,KAAK,EAAA;QACrB,QAAQ,KAAK,CAAC,MAAM;AAClB,YAAA,KAAK,GAAG;AACN,gBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC/B,YAAA,KAAK,CAAC;AACJ,gBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC/B,YAAA;gBACE,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;AAC3C,oBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;AAChE,iBAAA;AAAM,qBAAA;oBACL,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;AACpC,iBAAA;AACJ,SAAA;KACF;AAED;;AAEG;IACH,WAAW,GAAA;QACT,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC9D,QAAA,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC;AACrD,YAAA,IAAI,EAAE,CAAC,KAAsB,KAAI;AAC/B,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;AACD,YAAA,KAAK,EAAE,CAAC,KAAU,KAAI;AACpB,gBAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;AACF,SAAA,CAAC,CAAC;KACJ;AAED;;;;AAIG;IACH,qBAAqB,GAAA;AACnB,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;AACvB,YAAA,IAAI,CAAC,IAAI,GAAG,uDAAuD,CAAC;AACpE,YAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAChC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,GAAG,iCAAiC,CAAC;YAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC1C,SAAA;KACF;AAED;;;;AAIG;IACH,iBAAiB,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC1C,SAAA;KACF;AAED;;;AAGG;IACH,WAAW,GAAA;QACT,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAA,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC;AAC3C,YAAA,IAAI,EAAE,CAAC,KAAa,KAAI;AACtB,gBAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;AACD,YAAA,KAAK,EAAE,CAAC,KAAU,KAAI;AACpB,gBAAA,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;gBACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;AACF,SAAA,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;KACzB;8GAtRU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,yGC3B9B,qkBAgBA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FDWa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;+BACE,WAAW,EAAA,QAAA,EAAA,qkBAAA,EAAA,CAAA;iRAqBQ,SAAS,EAAA,CAAA;sBAArC,KAAK;uBAAC,gBAAgB,CAAA;;;MEhCZ,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAd,cAAc,EAAA,YAAA,EAAA,CAHV,iBAAiB,CADtB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,kBAAkB,EAAE,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAErD,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA;AAEhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAJf,OAAA,EAAA,CAAA,YAAY,EAAE,kBAAkB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAIpD,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,mBAAmB,CAAC;oBAChE,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;AAC7B,iBAAA,CAAA;;;ACGD;;;;;;;AAOG;MACU,0BAA0B,CAAA;;IAqBrC,IAAqB,IAAI,CAAC,KAAU,EAAA;QAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,GAAG,SAAS,CAAC;KAC5E;AAED,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AAED;;;;;;AAMG;IACH,IAA+B,aAAa,CAAC,KAAU,EAAA;AACrD,QAAA,IAAI,CAAC,cAAc;AACjB,YAAA,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,GAAG,SAAS,CAAC;KACjE;AAED,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;IAGD,IAAqC,kBAAkB,CACrD,kBAA2B,EAAA;AAE3B,QAAA,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;KACjE;AACD,IAAA,IAAI,kBAAkB,GAAA;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;AAUD;;;;AAIG;IACH,WACS,CAAA,iBAAoC,EACnC,kBAAsC,EAAA;QADvC,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACnC,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QAhEhD,IAAqB,CAAA,qBAAA,GAA0B,EAAE,CAAC;AAiDlD;;;AAGG;;AAGH,QAAA,IAAA,CAAA,gBAAgB,GAAuB,IAAI,YAAY,EAAO,CAAC;QAW7D,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;AAED;;AAEG;IACH,WAAW,GAAA;QACT,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC9D,QAAA,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC;AACrD,YAAA,IAAI,EAAE,CAAC,KAAsB,KAAI;gBAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,QAAoB,KAAI;oBAC9D,OAAuB;wBACrB,KAAK,EAAE,QAAQ,CAAC,WAAW;wBAC3B,KAAK,EAAE,QAAQ,CAAC,QAAQ;qBACzB,CAAC;AACJ,iBAAC,CAAC,CAAC;aACJ;AACD,YAAA,KAAK,EAAE,CAAC,KAAU,KAAI;AACpB,gBAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;AACF,SAAA,CAAC,CAAC;KACJ;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;KACzE;IAED,gBAAgB,GAAA;QACd,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;KACzD;8GArGU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAP,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAQ,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAA1B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,4ZCtBvC,mlEAmEA,EAAA,MAAA,EAAA,CAAA,kDAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,eAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FD7Ca,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAdtC,SAAS;+BACE,qBAAqB,EAAA,QAAA,EAAA,mlEAAA,EAAA,MAAA,EAAA,CAAA,kDAAA,CAAA,EAAA,CAAA;oHAuBR,UAAU,EAAA,CAAA;sBAAhC,KAAK;uBAAC,cAAc,CAAA;gBAIC,QAAQ,EAAA,CAAA;sBAA7B,KAAK;uBAAC,aAAa,CAAA;gBAIO,aAAa,EAAA,CAAA;sBAAvC,KAAK;uBAAC,kBAAkB,CAAA;gBAGJ,IAAI,EAAA,CAAA;sBAAxB,KAAK;uBAAC,QAAQ,CAAA;gBAegB,aAAa,EAAA,CAAA;sBAA3C,KAAK;uBAAC,kBAAkB,CAAA;gBAUY,kBAAkB,EAAA,CAAA;sBAAtD,KAAK;uBAAC,wBAAwB,CAAA;gBAe/B,gBAAgB,EAAA,CAAA;sBADf,MAAM;uBAAC,qBAAqB,CAAA;;;AE1E/B;;;;AAIG;MAYU,uBAAuB,CAAA;8GAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAvB,uBAAuB,EAAA,YAAA,EAAA,CAHnB,0BAA0B,CAAA,EAAA,OAAA,EAAA,CANvC,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,eAAe;AACf,YAAA,aAAa,aAGL,0BAA0B,CAAA,EAAA,CAAA,CAAA,EAAA;AAEzB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,YAThC,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,eAAe;YACf,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAKJ,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAXnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,YAAY;wBACZ,eAAe;wBACf,aAAa;AACd,qBAAA;oBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;AACtC,iBAAA,CAAA;;;ACfD,MAAM,QAAQ,GAAG,mCAAmC,CAAC;MAKxC,yBAAyB,CAAA;IACpC,WACU,CAAA,IAAgB,EAChB,YAAiC,EAAA;QADjC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;KACtC;IAEL,uBAAuB,GAAA;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,EAAE;AACnD,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,gBAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACjC,UAAU,CAAC,IAAI,CAAC;AACd,wBAAA,SAAS,EAAE,EAAE;AACb,wBAAA,gBAAgB,EAAE,EAAE;AACpB,wBAAA,SAAS,EAAE,KAAK;AAChB,wBAAA,eAAe,EAAE,KAAK;AACtB,wBAAA,kBAAkB,EAAE,KAAK;AACzB,wBAAA,gBAAgB,EAAE,EAAE;AACpB,wBAAA,uBAAuB,EAAE,EAAE;AAC3B,wBAAA,gBAAgB,EAAE,IAAI;AACtB,wBAAA,mBAAmB,EAAE,KAAK;AAC3B,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;oBACL,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC/C,oBAAA,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,SAAS,EAAE,iBAAiB;AAC5B,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE,iBAAiB;AACxB,iBAAA;AACF,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,QAAQ,EACR,iCAAiC,CAClC,CAAC;AACF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,QAAQ,EAAE;gBACjD,OAAO;AACR,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAC/C,SAAA;QACD,MAAM,YAAY,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC5D,cAAc,CAAC,KAAK,EAAE,CAAC;AACvB,QAAA,cAAc,CAAC,OAAO,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;KACtD;AAED,IAAA,oBAAoB,CAClB,OAA2B,EAAA;AAE3B,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AACzC,YAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;gBACnC,IAAI,gBAAgB,KAAK,MAAM,EAAE;AAC/B,oBAAA,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrB,iBAAA;AAAM,qBAAA;AACL,oBAAA,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACtB,iBAAA;gBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,aAAC,EACD;AACE,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,SAAS,EAAE,sBAAsB;AACjC,gBAAA,QAAQ,EAAE;AACR,oBAAA,IAAI,EAAE,cAAc;AACpB,oBAAA,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;AACjC,iBAAA;AACF,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CACtC,cAAc,EACd,iCAAiC,CAClC,CAAC;AACF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAqB,QAAQ,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;AAC3E,SAAA;KACF;8GArFU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAzB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,cAFxB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCFY,kCAAkC,CAAA;AAC7C,IAAA,WAAA,CAAoB,sBAAiD,EAAA;QAAjD,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAA2B;KAAK;IAC1E,OAAO,CACL,MAA+B,EAC/B,MAA4B,EAAA;AAE5B,QAAA,OAAO,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,EAAE,CAAC;KAC9D;8GAPU,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAwB,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAlC,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kCAAkC,cAFjC,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAH9C,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCKY,kCAAkC,CAAA;IAC7C,WACU,CAAA,kBAAsC,EACtC,cAA8B,EAAA;QAD9B,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QACtC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAEtC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC/D;IACD,OAAO,CACL,MAA+B,EAC/B,MAA4B,EAAA;AAE5B,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;QAC1C,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAC5C;8GAbU,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAR,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAlC,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kCAAkC,cAFjC,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAH9C,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACJD;;AAEG;MAIU,yBAAyB,CAAA;AAOpC;;;;;AAKG;AACH,IAAA,WAAA,CACU,IAAgB,EAChB,YAAiC,EACjC,mBAAwC,EAAA;QAFxC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;QACjC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QAf1C,IAAG,CAAA,GAAA,GAAG,oCAAoC,CAAC;QAC3C,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QAEf,IAAoB,CAAA,oBAAA,GAAG,4BAA4B,CAAC;QACpD,IAAoB,CAAA,oBAAA,GAAG,4BAA4B,CAAC;KAYvD;AAEL;;;;AAIG;AACI,IAAA,UAAU,CAAC,KAAa,EAAA;AAC7B,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,gBAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,CAAA,EAAG,IAAI,CAAC,GAAG,CAAA,EAAG,KAAK,CAAA,CAAE,CAAC,CAAC;AACtD,aAAA;AAED,YAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACf,SAAA;KACF;AAED;;;AAGG;IACK,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CACtC,CAAC,EAAE,gBAAgB,EAAE,UAAU,EAAE,KAAI;AACnC,YAAA,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACjC,UAAU,CAAC,KAAK,CAAC;AACf,oBAAA,MAAM,EAAE,GAAG;AACX,oBAAA,WAAW,EAAE,2BAA2B;AACzC,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;gBACL,MAAM,UAAU,GAAY,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACzD,gBAAA,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7B,aAAA;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,EACD;AACE,YAAA,QAAQ,EAAE;gBACR,IAAI,EAAE,IAAI,CAAC,oBAAoB;AAC/B,gBAAA,OAAO,EAAE,EAAE;AACZ,aAAA;AACD,YAAA,YAAY,EAAE,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,oBAAoB;AACrC,SAAA,CACF,CAAC;KACH;AAED;;;AAGG;IACK,gBAAgB,GAAA;AACtB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,WAAW,EAAE,wDAAwD;AACtE,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;AAED;;;AAGG;IACH,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED;;;AAGG;AACH,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;8GAjGU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAjB,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgB,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAzB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,cAFxB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAHrC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCcY,2BAA2B,CAAA;AAyDtC;;;;AAIG;AACH,IAAA,kBAAkB,CAAC,QAAgB,EAAA;QACjC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,aAAa;aACf,WAAW,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;aAC7C,SAAS,CAAC,QAAQ,IAAG;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC3B,SAAC,CAAC,CAAC;QACL,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACrD,IAAI,EAAC,MAAO,EAAA,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE;AAC9C,SAAA,CAAC,CAAC;KACJ;AAED;;;AAGG;AACH,IAAA,WAAW,CAAC,QAAa,EAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACrD,QAAA,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACrD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACpD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACpD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACpD,QAAA,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAClD,QAAA,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAElD,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;AAED;;AAEG;IACH,oBAAoB,GAAA;AAClB,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACpD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACpD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACpD,QAAA,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAEpD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;AAED,IAAA,eAAe,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,EAAE,EAAA;AACzC,QAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;KAC1B;AAED;;;AAGG;IACH,cAAc,GAAA;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;QACvD,IAAI,WAAW,GAAG,2BAA2B,CAAC;AAE9C,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;AACvB,YAAA,WAAW,GAAG,QAAQ,KAAK,IAAI,GAAG,oCAAoC,GAAG,mCAAmC,CAAC;AAC9G,SAAA;AAAM,aAAA;YACL,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,WAAW,GAAG,yCAAyC,CAAC;AACzD,aAAA;iBAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC5B,WAAW,GAAG,4CAA4C,CAAC;AAC5D,aAAA;AACF,SAAA;AAED,QAAA,OAAO,WAAW,CAAC;KACpB;AAED;;;AAGG;AACK,IAAA,cAAc,CAAC,GAAG,EAAA;QACxB,cAAc,CAAC,GAAG,CAAC;cACf,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;cAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACjC;AAED;;;;;;;;;;;;;AAaG;IACH,WACU,CAAA,WAA+B,EAC/B,MAAc,EACd,cAAiC,EACjC,KAAqB,EACrB,yBAAoD,EACpD,iBAAoC,EACpC,cAA8B,EAC9B,gBAAkC,EAClC,aAA4B,EAC5B,yBAAoD,EACpD,eAAgC,EAChC,sBAA8C,EAAA;QAX9C,IAAW,CAAA,WAAA,GAAX,WAAW,CAAoB;QAC/B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmB;QACjC,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;QACrB,IAAyB,CAAA,yBAAA,GAAzB,yBAAyB,CAA2B;QACpD,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACpC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAyB,CAAA,yBAAA,GAAzB,yBAAyB,CAA2B;QACpD,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;QAChC,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;AAvJjD,QAAA,IAAA,CAAA,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AAG7B,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,OAAO,EAAE,CAAC;AAsBb,QAAA,IAAA,CAAA,cAAc,GAA0B;AACtD,YAAA,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;AAC/B,YAAA,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAE;SACzC,CAAC;AAEK,QAAA,IAAA,CAAA,aAAa,GAA0B,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAE7D,QAAA,IAAA,CAAA,aAAa,GAA0B;AACrD,YAAA,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;AAC7B,YAAA,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;AAC/B,YAAA,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;SACvC,CAAC;AAEc,QAAA,IAAA,CAAA,WAAW,GAA0B;AACnD,YAAA,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE;AAC/B,YAAA,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE;SACvC,CAAC;AAgHA,QAAA,MAAM,QAAQ,GAAG,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAClD,aAAa;aACV,WAAW,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;aAC7C,SAAS,CAAC,QAAQ,IAAG;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;AACrB,SAAC,CAAC,CAAC;AACL,QAAA,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;AAED;;;AAGG;IACH,uBAAuB,GAAA;QACrB,OAAO;YACL,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;YAC/C,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;YACtD,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;YAC9C,EAAE,QAAQ,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;SAC1D,CAAC;KACH;AAED;;;AAGG;IACH,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;KAChD;AAED;;;AAGG;AACH,IAAA,mBAAmB,CAAC,KAAU,EAAA;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;AAEvB,QAAA,MAAM,MAAM,GAAW,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC;AAE5E,QAAA,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACpD,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAY,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC9C,MAAM,IAAI,GAAY,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAE3C,YAAA,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAA;AACnG,aAAA;AAED,YAAA,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAA;AACtG,aAAA;AAED,YAAA,IAAI,CAAC,IAAI,IAAI,OAAO,KAAK,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAA;AAClG,aAAA;AACF,SAAA;KACF;AAED;;AAEG;IACH,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC1B,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC5C,QAAA,IAAI,CAAC,IAAI,GAAG,iCAAiC,CAAC;AAC9C,QAAA,IAAI,CAAC,aAAa,GAAG,iCAAiC,CAAC;QACvD,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;AAED;;;;AAIG;IACH,eAAe,GAAA;QACb,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,yBAAyB,CAAC,eAAe,EAAE,CAAC;AACjD,YAAA,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACjD,EAAE,GAAG,CAAC,CAAC;KACT;AAED;;AAEG;IACH,eAAe,GAAA;AACb,QAAA,IAAI,WAAyB,CAAC;QAE9B,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAC3E;AACE,YAAA,IAAI,EAAE,CAAC,IAAS,KAAI;AAClB,gBAAA,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACxB,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;oBAE9B,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACjB,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC9B,qBAAA;AACF,iBAAA;aACF;AACD,YAAA,QAAQ,EAAE,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,GAAG,IAAI;AAC/D,SAAA,CACF,CAAC;KACH;AAED;;AAEG;IACH,qBAAqB,GAAA;;AAEnB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;KAC9C;AAED;;AAEG;IACH,uBAAuB,GAAA;QACrB,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAE,CAAC,SAAS,CACrG,CAAC,YAA8B,KAAI;AACjC,YAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AACvF,SAAC,CACF,CAAA;KACF;AAED;;;AAGG;IACK,SAAS,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,mBAAmB,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,kBAAkB,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACjD,YAAA,gBAAgB,EAAE;gBAChB,IAAI;AACJ,gBAAA,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC;AACvD,aAAA;YACD,uBAAuB,EAAE,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACtD,YAAA,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;AACrB,YAAA,gBAAgB,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;AAC5B,YAAA,aAAa,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;AAC1B,YAAA,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;AACvB,YAAA,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;AAC1B,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,eAAe,CAAC,OAA2B,EAAA;AACzC,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE;YAC3D,OAAO;AACL,gBAAA,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;aACpC,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACrC,SAAA;KACF;IAEO,mBAAmB,GAAA;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,IAAG;AAClD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;AAC9C,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,oBAAoB,CAAC,WAAiB,EAAA;QACpC,IAAI,WAAW,CAAC,gBAAgB,EAAE;AAChC,YAAA,IAAI,CAAC,uBAAuB,GAAG,WAAW,CAAC,gBAAgB,CAAC;AAC5D,YAAA,IAAI,CAAC,WAAW;AACd,gBAAA,OAAO,WAAW,CAAC,gBAAgB,CAAC,gBAAgB,KAAK,WAAW;AAClE,sBAAE,KAAK;AACP,sBAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;YACrD,IAAI,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC;YACzD,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;YAC1E,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;YACvE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,gBAAgB,CAAC,eAAe,CAAC;YACjE,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,SAAA;QACD,IAAI,WAAW,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC;AACrD,SAAA;KACF;IAED,IAAI,uBAAuB,CAAC,QAA4B,EAAA;QACtD,IAAI,QAAQ,CAAC,SAAS,EAAE;YACtB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC1E,SAAA;AAAM,aAAA;AACL,YAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;AACjC,SAAA;AACD,QAAA,IAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC;KAC7C;AAED,IAAA,IAAI,uBAAuB,GAAA;QACzB,OAAO,IAAI,CAAC,2BAA2B,CAAC;KACzC;AAED,IAAA,0BAA0B,CAAC,SAAc,EAAA;QACvC,IAAI,aAAa,GAAG,SAAS,CAAC;QAC9B,IAAI,SAAS,IAAI,EAAE,SAAS,YAAY,IAAI,CAAC,EAAE;AAC7C,YAAA,aAAa,GAAG,CAAA,EAAG,SAAS,CAAA,eAAA,CAAiB,CAAC;AAC/C,SAAA;AACD,QAAA,OAAO,aAAa,CAAC;KACtB;IAEO,eAAe,GAAA;;AAErB,QAAA,IAAI,CAAC,WAAW;aACb,GAAG,CAAC,cAAc,CAAC;AACnB,aAAA,UAAU,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG;AAC/B,YAAA,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,YAAY;SAChD,CAAC;AACF,QAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG;AAC7B,YAAA,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,WAAW;SAC/C,CAAC;AACF,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG;AACzB,YAAA,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,SAAS;AAC5C,YAAA,WAAW,EAAE,IAAI,CAAC,uBAAuB,CAAC,gBAAgB;SAC3D,CAAC;KACH;IAED,oBAAoB,GAAA;AAClB,QAAA,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,EAAE,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;KAClC;IAED,sBAAsB,GAAA;AACpB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,EAAE,CAAC,IAAI,CAAC;aACL,IAAI,CACH,KAAK,CAAC,GAAG,CAAC,EACV,GAAG,CAAC,MAAK;AACP,YAAA,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;gBAC5B,MAAM,IAAI,KAAK,EAAE,CAAC;AACnB,aAAA;SACF,CAAC,EACF,KAAK,CAAC,EAAE,CAAC,EACT,GAAG,CAAC,MAAK;YACP,IAAI,CAAC,UAAU,EAAE,CAAC;AACpB,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC;YACT,KAAK,EAAE,MAAK;AACV,gBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC3C;AACF,SAAA,CAAC,CAAC;KACN;IAED,UAAU,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAC1B,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAC5D;gBACE,IAAI,EAAE,MAAK;AACT,oBAAA,IAAI,CAAC,cAAc,CAAC,cAAc,CAChC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CACtC,CAAC;oBACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;gBACD,KAAK,EAAE,MAAK;oBACV,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;AACF,aAAA,CACF,CAAC;AACH,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC3C,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;KACzB;AAEO,IAAA,aAAa,CAAC,OAAgB,EAAA;AACpC,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC7C,SAAA;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;KAC7C;AAEO,IAAA,YAAY,CAAC,IAAsB,EAAA;AACzC,QAAA,MAAM,UAAU,GAAuB;YACrC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACtC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;YAC5C,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;YAC1C,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK;YACpD,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACtC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,KAAK;YAC9C,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;SACzC,CAAC;QACF,OAAO,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;KACxE;AAED,IAAA,gBAAgB,CAAC,KAAc,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED;;;;AAIG;IACK,qBAAqB,GAAA;QAC3B,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9D,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5D;AAED;;;;AAIG;IACH,qBAAqB,GAAA;AACnB,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;AACvB,YAAA,IAAI,CAAC,IAAI,GAAG,uDAAuD,CAAC;AACpE,YAAA,IAAI,CAAC,aAAa,GAAG,uDAAuD,CAAC;AAC7E,YAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAChC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,GAAG,iCAAiC,CAAC;AAC9C,YAAA,IAAI,CAAC,aAAa,GAAG,iCAAiC,CAAC;YACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC1C,SAAA;KACF;AAED;;;;AAIG;IACH,iBAAiB,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC1C,SAAA;KACF;AAED;;;AAGG;IACH,WAAW,GAAA;QACT,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAA,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAC1C;AACE,YAAA,IAAI,EAAE,CAAC,KAAa,KAAI;AACtB,gBAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;AAED,YAAA,KAAK,EAAE,CAAC,KAAU,KAAI;AACpB,gBAAA,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;gBACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;AACF,SAAA,CACF,CAAC;KACH;8GAxhBU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAY,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAR,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAQ,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,eAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAA3B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,EAoC3B,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,CAAA,eAAA,EAAA,aAAA,CAAA,EAAA,UAAA,EAAA,CAAA,cAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,EAAA,UAAA,CAAA,EAAA,aAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,0BAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,wBAAwB,EACxB,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,2BAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,yBAAyB,gDCjEtC,s0LAwJA,EAAA,MAAA,EAAA,CAAA,kmBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAK,0BAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,wBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAM,yBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,8BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,YAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA1B,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAiB,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FD5Ha,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,sBAAsB,EAAA,QAAA,EAAA,s0LAAA,EAAA,MAAA,EAAA,CAAA,kmBAAA,CAAA,EAAA,CAAA;gaA0BR,WAAW,EAAA,CAAA;sBAAlC,KAAK;uBAAC,eAAe,CAAA;gBAIC,UAAU,EAAA,CAAA;sBAAhC,KAAK;uBAAC,cAAc,CAAA;gBAIC,QAAQ,EAAA,CAAA;sBAA7B,KAAK;uBAAC,aAAa,CAAA;gBAIO,aAAa,EAAA,CAAA;sBAAvC,KAAK;uBAAC,kBAAkB,CAAA;gBAEY,wBAAwB,EAAA,CAAA;sBAA5D,SAAS;uBAAC,wBAAwB,CAAA;gBACG,yBAAyB,EAAA,CAAA;sBAA9D,SAAS;uBAAC,yBAAyB,CAAA;;;MEzCzB,wBAAwB,CAAA;8GAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAxB,wBAAwB,EAAA,YAAA,EAAA,CAHpB,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAVxC,YAAY;YACZ,cAAc;YACd,aAAa;YACb,uBAAuB;YACvB,QAAQ;YACR,WAAW;YACX,eAAe;YACf,eAAe;AACf,YAAA,mBAAmB,aAGX,2BAA2B,CAAA,EAAA,CAAA,CAAA,EAAA;AAE1B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,YAbjC,YAAY;YACZ,cAAc;YACd,aAAa;YACb,uBAAuB;YACvB,QAAQ;YACR,WAAW;YACX,eAAe;YACf,eAAe;YACf,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAKV,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAfpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;wBACd,aAAa;wBACb,uBAAuB;wBACvB,QAAQ;wBACR,WAAW;wBACX,eAAe;wBACf,eAAe;wBACf,mBAAmB;AACpB,qBAAA;oBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;oBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;AACvC,iBAAA,CAAA;;;ACvBD;AACA;AACA;AAEO,MAAMU,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,eAAe;AACxB,IAAA,OAAO,EAAE,6BAA6B;AACtC,IAAA,OAAO,EAAE,gCAAgC;AACzC,IAAA,OAAO,EAAE,qCAAqC;AAC9C,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,OAAO,EAAE,yBAAyB;AAClC,IAAA,OAAO,EAAE,qBAAqB;AAC9B,IAAA,OAAO,EAAE,mHAAmH;AAC5H,IAAA,OAAO,EAAE,sDAAsD;CAChE;;ACdD;AACA;AACA;AAEO,MAAMC,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,iCAAiC;AAC1C,IAAA,OAAO,EAAE,qDAAqD;AAC9D,IAAA,OAAO,EAAE,0CAA0C;AACnD,IAAA,OAAO,EAAE,oBAAoB;AAC7B,IAAA,OAAO,EAAE,2BAA2B;AACpC,IAAA,OAAO,EAAE,uBAAuB;AAChC,IAAA,OAAO,EAAE,wIAAwI;AACjJ,IAAA,OAAO,EAAE,+DAA+D;CACzE;;ACdD;AACA;AACA;AAEO,MAAMC,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,4BAA4B;AACrC,IAAA,OAAO,EAAE,sDAAsD;AAC/D,IAAA,OAAO,EAAE,2CAA2C;AACpD,IAAA,OAAO,EAAE,oBAAoB;AAC7B,IAAA,OAAO,EAAE,0BAA0B;AACnC,IAAA,OAAO,EAAE,kBAAkB;AAC3B,IAAA,OAAO,EAAE,qHAAqH;AAC9H,IAAA,OAAO,EAAE,iEAAiE;CAC3E;;ACdD;AACA;AACA;AAEO,MAAMC,cAAY,GAAG;AACxB,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,0CAA0C;AACnD,IAAA,OAAO,EAAE,oCAAoC;AAC7C,IAAA,OAAO,EAAE,+CAA+C;AACxD,IAAA,OAAO,EAAE,sBAAsB;AAC/B,IAAA,OAAO,EAAE,+BAA+B;AACxC,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,sHAAsH;AAC/H,IAAA,OAAO,EAAE,oEAAoE;CAChF;;ACdD;AACA;AACA;AAEO,MAAMH,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,eAAe;AACxB,IAAA,OAAO,EAAE,4BAA4B;AACrC,IAAA,OAAO,EAAE,iDAAiD;AAC1D,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,4CAA4C;AACrD,IAAA,OAAO,EAAE,YAAY;AACrB,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,eAAe;AACxB,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,4BAA4B;AACrC,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,aAAa;AACtB,IAAA,OAAO,EAAE,uBAAuB;AAChC,IAAA,OAAO,EAAE,WAAW;AACpB,IAAA,OAAO,EAAE,qBAAqB;AAC9B,IAAA,OAAO,EAAE,WAAW;AACpB,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,aAAa;AACtB,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,sCAAsC;AAC/C,IAAA,OAAO,EAAE,6BAA6B;AACtC,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,MAAM;CAChB;;ACjCD;AACA;AACA;AAEO,MAAMC,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,uCAAuC;AAChD,IAAA,OAAO,EAAE,8DAA8D;AACvE,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,8DAA8D;AACvE,IAAA,OAAO,EAAE,cAAc;AACvB,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,kBAAkB;AAC3B,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,kCAAkC;AAC3C,IAAA,OAAO,EAAE,UAAU;AACnB,IAAA,OAAO,EAAE,yBAAyB;AAClC,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,mCAAmC;AAC5C,IAAA,OAAO,EAAE,kBAAkB;AAC3B,IAAA,OAAO,EAAE,iCAAiC;AAC1C,IAAA,OAAO,EAAE,YAAY;AACrB,IAAA,OAAO,EAAE,sBAAsB;AAC/B,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,aAAa;AACtB,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,iDAAiD;AAC1D,IAAA,OAAO,EAAE,kEAAkE;AAC3E,IAAA,OAAO,EAAE,kBAAkB;AAC3B,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,QAAQ;CAClB;;ACjCD;AACA;AACA;AAEO,MAAMC,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,iCAAiC;AAC1C,IAAA,OAAO,EAAE,sDAAsD;AAC/D,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,gDAAgD;AACzD,IAAA,OAAO,EAAE,eAAe;AACxB,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,mBAAmB;AAC5B,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,gCAAgC;AACzC,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,qBAAqB;AAC9B,IAAA,OAAO,EAAE,UAAU;AACnB,IAAA,OAAO,EAAE,gCAAgC;AACzC,IAAA,OAAO,EAAE,mBAAmB;AAC5B,IAAA,OAAO,EAAE,iCAAiC;AAC1C,IAAA,OAAO,EAAE,WAAW;AACpB,IAAA,OAAO,EAAE,qBAAqB;AAC9B,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,WAAW;AACpB,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,8CAA8C;AACvD,IAAA,OAAO,EAAE,mEAAmE;AAC5E,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,SAAS;AAClB,IAAA,OAAO,EAAE,SAAS;CACnB;;ACjCD;AACA;AACA;AAEO,MAAMC,cAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,gBAAgB;AACzB,IAAA,OAAO,EAAE,gCAAgC;AACzC,IAAA,OAAO,EAAE,iDAAiD;AAC1D,IAAA,OAAO,EAAE,WAAW;AACpB,IAAA,OAAO,EAAE,0DAA0D;AACnE,IAAA,OAAO,EAAE,aAAa;AACtB,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,wBAAwB;AACjC,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,2BAA2B;AACpC,IAAA,OAAO,EAAE,QAAQ;AACjB,IAAA,OAAO,EAAE,kBAAkB;AAC3B,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,4BAA4B;AACrC,IAAA,OAAO,EAAE,cAAc;AACvB,IAAA,OAAO,EAAE,wBAAwB;AACjC,IAAA,OAAO,EAAE,cAAc;AACvB,IAAA,OAAO,EAAE,uBAAuB;AAChC,IAAA,OAAO,EAAE,KAAK;AACd,IAAA,OAAO,EAAE,UAAU;AACnB,IAAA,OAAO,EAAE,KAAK;AACd,IAAA,OAAO,EAAE,0CAA0C;AACnD,IAAA,OAAO,EAAE,iCAAiC;AAC1C,IAAA,OAAO,EAAE,uBAAuB;AAChC,IAAA,OAAO,EAAE,MAAM;AACf,IAAA,OAAO,EAAE,UAAU;AACnB,IAAA,OAAO,EAAE,SAAS;CACnB;;ACjCD;AACA;AACA;AAEO,MAAM,YAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,+FAA+F;CACzG;;ACND;AACA;AACA;AAEO,MAAM,YAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,+FAA+F;CACzG;;ACND;AACA;AACA;AAEO,MAAM,YAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,+FAA+F;CACzG;;ACND;AACA;AACA;AAEO,MAAM,YAAY,GAAG;AAC1B,IAAA,OAAO,EAAE,EAAE;CACZ;;ACYD,MAAM,UAAU,GAAiB;AAC/B,IAAA,OAAO,EAAE;AACP,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,KAAK,EAAE,IAAI;AACZ,KAAA;AACD,IAAA,QAAQ,EAAE;AACR,QAAA,KAAK,EAAE;AACL,YAAA,EAAE,EAAEC,cAAS;AACb,YAAA,EAAE,EAAEC,cAAS;AACb,YAAA,EAAE,EAAEC,cAAS;AACb,YAAA,EAAE,EAAEC,cAAS;AACd,SAAA;AACD,QAAA,OAAO,EAAE;AACP,YAAA,EAAE,EAAEC,cAAW;AACf,YAAA,EAAE,EAAEC,cAAW;AACf,YAAA,EAAE,EAAEC,cAAW;AACf,YAAA,EAAE,EAAEC,cAAW;AAChB,SAAA;AACD,QAAA,cAAc,EAAE;AACd,YAAA,EAAE,EAAEC,YAAkB;AACtB,YAAA,EAAE,EAAEC,YAAkB;AACtB,YAAA,EAAE,EAAEC,YAAkB;AACtB,YAAA,EAAE,EAAEC,YAAkB;AACvB,SAAA;AACD,QAAA,OAAO,EAAE,EAAE;AACZ,KAAA;CACF,CAAC;AAEF;;;;AAIG;MAMU,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAnB,mBAAmB,EAAA,OAAA,EAAA,CAAA1C,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAH5B,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGtB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;AACP,wBAAA,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC;AAChC,qBAAA;AACF,iBAAA,CAAA;;;MC/BY,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAdvB,mBAAmB;YACnB,aAAa;YACb,QAAQ;YACR,cAAc;YACd,uBAAuB;AACvB,YAAA,wBAAwB,aAGxB,aAAa;YACb,cAAc;YACd,uBAAuB;YACvB,wBAAwB,CAAA,EAAA,CAAA,CAAA,EAAA;AAGf,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAdvB,mBAAmB;YACnB,aAAa;YACb,QAAQ;YACR,cAAc;YACd,uBAAuB;AACvB,YAAA,wBAAwB,EAGxB,aAAa;YACb,cAAc;YACd,uBAAuB;YACvB,wBAAwB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGf,cAAc,EAAA,UAAA,EAAA,CAAA;kBAhB1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,aAAa;wBACb,QAAQ;wBACR,cAAc;wBACd,uBAAuB;wBACvB,wBAAwB;AACzB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,aAAa;wBACb,cAAc;wBACd,uBAAuB;wBACvB,wBAAwB;AACzB,qBAAA;AACF,iBAAA,CAAA;;;MCfY,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAHpB,eAAe,EAAE,cAAc,CAC/B,EAAA,OAAA,EAAA,CAAA,eAAe,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA,EAAA;AAE9B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAHpB,eAAe,EAAE,cAAc,EAC/B,eAAe,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAE9B,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,eAAe,EAAE,cAAc,CAAC;AAC1C,oBAAA,OAAO,EAAE,CAAC,eAAe,EAAE,cAAc,CAAC;AAC3C,iBAAA,CAAA;;;ACFD;;;;AAIG;MAKU,sBAAsB,CAAA;AACjC,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAAK;IAE3C,SAAS,CACP,gBAAkC,EAClC,IAAiB,EAAA;AAEjB,QAAA,IAAI,aAA+B,CAAC;QAEpC,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;QAEF,IAAI,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC9C,YAAA,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;AAC5D,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AAExD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;AAC1D,aAAA;AAAM,iBAAA;gBACL,aAAa,GAAG,gBAAgB,CAAC;AAClC,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACnC;AAED;;;;AAIG;AACK,IAAA,mBAAmB,CAAC,OAAyB,EAAA;AACnD,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AACjC,QAAA,IAAI,OAAO,GAAW,cAAc,CAAC,SAAS,CAAC,CAAC;AAChD,QAAA,IAAI,KAAuB,CAAC;QAE5B,IAAI,OAAO,KAAK,SAAS,EAAE;AACzB,YAAA,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;gBACpC,OAAO,IAAI,GAAG,CAAC;AAChB,aAAA;AACD,YAAA,MAAM,eAAe,GAAG,CAAA,EAAG,QAAQ,CAAC,QAAQ,CAAK,EAAA,EAAA,QAAQ,CAAC,IAAI,aAAa,OAAO,CAAA,EAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAEnG,YAAA,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACpB,gBAAA,GAAG,EAAE,eAAe;AACrB,aAAA,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;AAIG;AACK,IAAA,iBAAiB,CAAC,OAAyB,EAAA;QACjD,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;AACF,QAAA,MAAM,MAAM,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;QACpD,IAAI,aAAa,GAAW,EAAE,CAAC;;;QAI/B,MAAM,QAAQ,GAAW,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;AAEnD,QAAA,IAAI,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;AACrE,YAAA,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC;AAC7B,SAAA;AAAM,aAAA;YACL,aAAa,GAAG,GAAG,MAAM,CAAA,EAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAC3C,SAAA;QACD,OAAO,OAAO,CAAC,KAAK,CAAC;AACnB,YAAA,GAAG,EAAE,aAAa;AACnB,SAAA,CAAC,CAAC;KACJ;8GA7EU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCFY,kBAAkB,CAAA;8GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YALnB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAKX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAJlB,SAAA,EAAA;YACT,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,KAAK,EAAE,IAAI,EAAE;AAC9E,SAAA,EAAA,OAAA,EAAA,CAHS,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAKX,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAN9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE;wBACT,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,KAAK,EAAE,IAAI,EAAE;AAC9E,qBAAA;AACF,iBAAA,CAAA;;;MCAY,YAAY,CAAA;IACvB,WAAoB,CAAA,cAA8B,EAAU,MAAc,EAAA;QAAtD,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAAU,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAAI;IAE9E,WAAW,CACT,IAA4B,EAC5B,KAA0B,EAAA;AAE1B,QAAA,MAAM,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;AAC9B,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC7B;AAED,IAAA,UAAU,CAAC,GAAW,EAAA;AACpB,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;AAC1C,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;;AAGD,QAAA,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,GAAG,CAAC;;QAGtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjC,QAAA,OAAO,KAAK,CAAC;KACd;IAED,gBAAgB,CACd,KAA6B,EAC7B,KAA0B,EAAA;QAE1B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACvC;AAED,IAAA,OAAO,CAAC,KAAY,EAAA;AAClB,QAAA,MAAM,GAAG,GAAG,CAAA,CAAA,EAAI,KAAK,CAAC,IAAI,EAAE,CAAC;AAC7B,QAAA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC7B;8GAlCU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAa,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAZ,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACCD;;;;AAIG;MAKU,iBAAiB,CAAA;IAC5B,WACU,CAAA,QAAkB,EAClB,YAAiC,EAAA;QADjC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QAClB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;KACtC;IAEL,SAAS,CACP,gBAAkC,EAClC,IAAiB,EAAA;AAEjB,QAAA,IAAI,aAA+B,CAAC;QACpC,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;QAEF,IAAI,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE;AAChD,YAAA,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AAExD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AACxB,oBAAA,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;AAC7D,iBAAA;AAAM,qBAAA;AACL,oBAAA,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;AAC3D,iBAAA;AACF,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACtC,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,aAAa,GAAG,gBAAgB,CAAC,KAAK,EAAE,CAAC;AAC1C,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CACpC,UAAU,CAAC,CAAC,KAAK,EAAE,MAAM,KAAI;AAC3B,YAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;AAC5B,gBAAA,MAAM,KAAK,CAAC;AACb,aAAA;AACD,YAAA,IACE,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC;gBAC5C,IAAI,CAAC,aAAa,EAAE,EACpB;gBACA,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9D,aAAA;AAAM,iBAAA;gBACL,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9C,aAAA;SACF,CAAC,CACH,CAAC;KACH;AAEO,IAAA,WAAW,CAAC,KAAU,EAAA;QAC5B,OAAO,KAAK,YAAY,iBAAiB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC;KACnE;IAED,aAAa,GAAA;QACX,MAAM,cAAc,GAAmB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AACzE,QAAA,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;AACnC,QAAA,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC5B;AAED,IAAA,kBAAkB,CAAC,OAAyB,EAAA;QAC1C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AACjD,QAAA,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;KACxB;AAED,IAAA,oBAAoB,CAAC,OAAyB,EAAA;QAC5C,MAAM,cAAc,GAAmB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAEzE,QAAA,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,EAAE;YAClC,cAAc,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAA;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;KAC7D;AAED,IAAA,MAAM,kBAAkB,CAAC,OAAyB,EAAE,IAAiB,EAAA;QACnE,MAAM,cAAc,GAAmB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAEzE,QAAA,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,EAAE;AAClC,YAAA,MAAM,cAAc,CAAC,WAAW,EAAE,CAAC;AACpC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;KACtF;IAEO,gBAAgB,CAAC,OAAyB,EAAE,KAAmB,EAAA;QACrE,OAAO,OAAO,CAAC,KAAK,CAAC;AACnB,YAAA,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAC1B,eAAe,EACf,CAAU,OAAA,EAAA,KAAK,CAAC,YAAY,EAAE,CAC/B;AACF,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,iBAAiB,CAAC,GAAW,EAAA;QAC3B,IAAI,WAAW,GAAG,IAAI,CAAC;AACvB,QAAA,MAAM,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAEtC,QAAA,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC7B,WAAW,GAAG,KAAK,CAAC;gBACpB,MAAM;AACP,aAAA;AACF,SAAA;AACD,QAAA,OAAO,WAAW,CAAC;KACpB;8GAtGU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAApB,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCAY,sBAAsB,CAAA;8GAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,YATvB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AASX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,EAPtB,SAAA,EAAA;YACT,cAAc;YACd,YAAY;YACZ,kBAAkB;YAClB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE;AACzE,SAAA,EAAA,OAAA,EAAA,CAPS,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FASX,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAVlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,YAAY,EAAE,EAAE;AAChB,oBAAA,SAAS,EAAE;wBACT,cAAc;wBACd,YAAY;wBACZ,kBAAkB;wBAClB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE;AACzE,qBAAA;AACF,iBAAA,CAAA;;;MCTY,oBAAoB,CAAA;AAK/B,IAAA,WAAA,CACU,IAAgB,EAAA;QAAhB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAJT,IAAS,CAAA,SAAA,GAAW,yDAAyD,CAAC;QAC9E,IAAY,CAAA,YAAA,GAAW,4DAA4D,CAAC;KAIhG;AAEL;;;;;;;AAOG;AACI,IAAA,aAAa,CAAC,OAAe,EAAE,IAAA,GAAe,CAAC,EAAA;AACpD,QAAA,IAAI,IAAI,EAAC;AACP,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,CAAG,EAAA,IAAI,CAAC,YAAY,GAAG,OAAO,CAAA,CAAA,EAAI,IAAI,CAAA,CAAE,CAAC,CAAC;AACxF,SAAA;AAAK,aAAA;AACJ,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,CAAA,EAAG,IAAI,CAAC,YAAY,CAAA,EAAG,OAAO,CAAA,CAAE,CAAE,CAAC;AACjF,SAAA;KACF;AAED;;;;;;;AAOG;AACI,IAAA,cAAc,CAAC,OAAe,EAAE,IAAA,GAAe,CAAC,EAAA;AACrD,QAAA,IAAI,IAAI,EAAC;AACP,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,CAAG,EAAA,IAAI,CAAC,SAAS,GAAG,OAAO,CAAA,CAAA,EAAI,IAAI,CAAA,CAAE,CAAC,CAAC;AACrF,SAAA;AAAK,aAAA;AACJ,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,CAAA,EAAG,IAAI,CAAC,SAAS,CAAA,EAAG,OAAO,CAAA,CAAE,CAAC,CAAC;AAC7E,SAAA;KACF;8GAvCU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCDY,iBAAiB,CAAA;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAjB,iBAAiB,EAAA,OAAA,EAAA,CAFlB,YAAY,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA;+GAEjC,iBAAiB,EAAA,OAAA,EAAA,CAFlB,YAAY,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAEjC,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,oBAAoB,CAAC;AAC9C,iBAAA,CAAA;;;MCAY,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAFf,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAEX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAFf,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAEX,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACxB,iBAAA,CAAA;;;ACAD,MAAMP,WAAS,GAAG,UAAU,CAAC;AAE7B;;;;AAIG;MAKU,wBAAwB,CAAA;AACnC,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAAK;AAE3C;;;;;AAKG;IACH,SAAS,CACP,gBAAkC,EAClC,IAAiB,EAAA;QAEjB,IAAI,aAAa,GAAqB,gBAAgB,CAAC;QAEvD,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;AAEF,QAAA,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACjD,YAAA,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AAExD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;AAChE,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACnC;AAED;;;;AAIG;AACK,IAAA,uBAAuB,CAAC,OAAyB,EAAA;AACvD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAEpC,QAAA,IAAI,QAAQ,EAAE;YACZ,OAAO,OAAO,CAAC,KAAK,CAAC;gBACnB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC;AAC1D,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,SAAA;KACF;AAED;;;AAGG;IACK,WAAW,GAAA;AACjB,QAAA,OAAO,cAAc,CAACA,WAAS,CAAC,CAAC;KAClC;8GApDU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cAFvB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAHpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACRD;;AAEG;MAQU,iBAAiB,CAAA;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YANlB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAMX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EALjB,SAAA,EAAA;YACT,kBAAkB;YAClB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,wBAAwB,EAAE,KAAK,EAAE,IAAI,EAAE;AAChF,SAAA,EAAA,OAAA,EAAA,CAJS,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAMX,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAP7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE;wBACT,kBAAkB;wBAClB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,wBAAwB,EAAE,KAAK,EAAE,IAAI,EAAE;AAChF,qBAAA;AACF,iBAAA,CAAA;;;ACXD,MAAMA,WAAS,GAAG,WAAW,CAAC;AAE9B;;;;AAIG;MAKU,0BAA0B,CAAA;AACrC,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAAK;AAE3C;;;;;AAKG;IACH,SAAS,CACP,gBAAkC,EAClC,IAAiB,EAAA;QAEjB,IAAI,aAAa,GAAqB,gBAAgB,CAAC;QAEvD,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;AAEF,QAAA,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACjD,YAAA,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AAExD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;AAC9D,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACnC;AAEO,IAAA,qBAAqB,CAAC,OAAyB,EAAA;AACrD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAEhC,QAAA,IAAI,MAAM,EAAE;YACV,OAAO,OAAO,CAAC,KAAK,CAAC;gBACnB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC;AACrD,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,SAAA;KACF;IAEO,SAAS,GAAA;AACf,QAAA,OAAO,cAAc,CAACA,WAAS,CAAC,CAAC;KAClC;8GA3CU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAA1B,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,cAFzB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAHtC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACVD,MAAM,SAAS,GAAG,aAAa,CAAC;AAEhC;;;;AAIG;MAKU,4BAA4B,CAAA;AACvC,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAAK;AAE3C;;;;;AAKG;IACH,SAAS,CACP,gBAAkC,EAClC,IAAiB,EAAA;QAEjB,IAAI,aAAa,GAAqB,gBAAgB,CAAC;QAEvD,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;AAEF,QAAA,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACjD,YAAA,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AAExD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;AAChE,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACnC;AAED;;;;AAIG;AACK,IAAA,uBAAuB,CAAC,OAAyB,EAAA;AACvD,QAAA,MAAM,QAAQ,GAAiB,IAAI,CAAC,WAAW,EAAE,CAAC;AAElD,QAAA,IAAI,QAAQ,EAAE;YACZ,OAAO,OAAO,CAAC,KAAK,CAAC;gBACnB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,QAAQ,CAAC;AACzD,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,SAAA;KACF;AAED;;;AAGG;IACK,WAAW,GAAA;AACjB,QAAA,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC;KAClC;8GApDU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAA5B,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,cAF3B,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAHxC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCCY,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAPpB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAOX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EANnB,SAAA,EAAA;YACT,sBAAsB;YACtB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,0BAA0B,EAAE,KAAK,EAAE,IAAI,EAAE;YACjF,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,4BAA4B,EAAE,KAAK,EAAE,IAAI,EAAE;AACpF,SAAA,EAAA,OAAA,EAAA,CALS,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAOX,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAR/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE;wBACT,sBAAsB;wBACtB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,0BAA0B,EAAE,KAAK,EAAE,IAAI,EAAE;wBACjF,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,4BAA4B,EAAE,KAAK,EAAE,IAAI,EAAE;AACpF,qBAAA;AACF,iBAAA,CAAA;;;ACPD;;;;AAIG;MAKU,mBAAmB,CAAA;AAC9B,IAAA,WAAA,CAAoB,QAAkB,EAAA;QAAlB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAAK;IAE3C,SAAS,CACP,gBAAkC,EAClC,IAAiB,EAAA;QAEjB,IAAI,aAAa,GAAqB,gBAAgB,CAAC;QAEvD,MAAM,mBAAmB,GAAwB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAChE,mBAAmB,CACpB,CAAC;AAEF,QAAA,IAAI,EAAE,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACjD,YAAA,MAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AAExD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;AAC9D,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACnC;AAEO,IAAA,qBAAqB,CAAC,OAAyB,EAAA;AACrD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAEpC,QAAA,IAAI,QAAQ,EAAE;YACZ,OAAO,OAAO,CAAC,KAAK,CAAC;gBACnB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;AACnD,aAAA,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,SAAA;KACF;IAEO,WAAW,GAAA;QACjB,MAAM,gBAAgB,GAAqB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAC1D,gBAAgB,CACjB,CAAC;QAEF,MAAM,iBAAiB,GAAsB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAC5D,iBAAiB,CAClB,CAAC;AAEF,QAAA,MAAM,WAAW,GAAG,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC;AACnD,QAAA,MAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;QAEhD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,IAAI,WAAW,KAAK,EAAE,EAAE;YACtB,QAAQ,IAAI,WAAW,CAAC;YACxB,IAAI,UAAU,KAAK,EAAE,EAAE;;;AAGrB,gBAAA,QAAQ,IAAI,CAAA,CAAA,EAAI,UAAU,CAAA,CAAA,CAAG,CAAC;AAC/B,aAAA;AACD,YAAA,OAAO,QAAQ,CAAC;AACjB,SAAA;KACF;8GA1DU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAFlB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCAY,eAAe,CAAA;8GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAf,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAPhB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAOX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EANf,SAAA,EAAA;YACT,iBAAiB;YACjB,gBAAgB;YAChB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,KAAK,EAAE,IAAI,EAAE;AAC3E,SAAA,EAAA,OAAA,EAAA,CALS,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAOX,eAAe,EAAA,UAAA,EAAA,CAAA;kBAR3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE;wBACT,iBAAiB;wBACjB,gBAAgB;wBAChB,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,KAAK,EAAE,IAAI,EAAE;AAC3E,qBAAA;AACF,iBAAA,CAAA;;;MCNY,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAHf,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAGX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAFd,SAAA,EAAA,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,YAD3D,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGX,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJ1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;AACtE,iBAAA,CAAA;;;ACDD;;AAEG;MAIU,oBAAoB,CAAA;IAC/B,WACU,CAAA,cAA8B,EAC9B,kBAAsC,EAAA;QADtC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;KAC3C;AAEL;;;;;AAKG;AACH,IAAA,IAAI,aAAa,GAAA;QACf,MAAM,KAAK,GAAmB,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACpE,MAAM,aAAa,GAAkB,EAAE,CAAC;AAExC,QAAA,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AACpC,QAAA,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;AAEnC,QAAA,OAAO,aAAa,CAAC;KACtB;AAED;;;AAGG;AACH,IAAA,IAAI,MAAM,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;KACnC;AAED;;;AAGG;AACH,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;KACpC;AAED;;;AAGG;IACH,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CACxD0D,KAAG,CAAC,CAAC,IAAiB,MAAM;YAC1B,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC,CACJ,CAAC;KACH;8GAnDU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5C,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAF,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACPD;;AAEG;MAKU,mBAAmB,CAAA;8GAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAHpB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAGX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAFnB,SAAA,EAAA,CAAC,oBAAoB,CAAC,YADvB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGX,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,oBAAoB,CAAC;AAClC,iBAAA,CAAA;;;ACND;;AAEG;MAKU,wBAAwB,CAAA;8GAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,YAHzB,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;AAGX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAFxB,SAAA,EAAA,CAAC,yBAAyB,CAAC,YAD5B,YAAY,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGX,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,yBAAyB,CAAC;AACvC,iBAAA,CAAA;;;MCCY,oBAAoB,CAAA;8GAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAApB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YAJ7B,YAAY;YACZ,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA;AAGV,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YAJ7B,YAAY;YACZ,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGV,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAPhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,EAAE;AAChB,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;AACpB,qBAAA;AACF,iBAAA,CAAA;;;ACKD;;AAEG;MA+BU,iBAAiB,CAAA;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAjB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YA5B1B,YAAY;YACZ,kBAAkB;YAClB,sBAAsB;YACtB,kBAAkB;YAClB,iBAAiB;YACjB,eAAe;YACf,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,cAAc;YACd,mBAAmB;YACnB,wBAAwB;AACxB,YAAA,oBAAoB,aAGpB,kBAAkB;YAClB,sBAAsB;YACtB,kBAAkB;YAClB,iBAAiB;YACjB,eAAe;YACf,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,mBAAmB;YACnB,wBAAwB;YACxB,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA;AAGX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YA5B1B,YAAY;YACZ,kBAAkB;YAClB,sBAAsB;YACtB,kBAAkB;YAClB,iBAAiB;YACjB,eAAe;YACf,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,cAAc;YACd,mBAAmB;YACnB,wBAAwB;AACxB,YAAA,oBAAoB,EAGpB,kBAAkB;YAClB,sBAAsB;YACtB,kBAAkB;YAClB,iBAAiB;YACjB,eAAe;YACf,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YACd,mBAAmB;YACnB,wBAAwB;YACxB,oBAAoB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGX,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBA9B7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,kBAAkB;wBAClB,sBAAsB;wBACtB,kBAAkB;wBAClB,iBAAiB;wBACjB,eAAe;wBACf,mBAAmB;wBACnB,iBAAiB;wBACjB,cAAc;wBACd,cAAc;wBACd,mBAAmB;wBACnB,wBAAwB;wBACxB,oBAAoB;AACrB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,kBAAkB;wBAClB,sBAAsB;wBACtB,kBAAkB;wBAClB,iBAAiB;wBACjB,eAAe;wBACf,mBAAmB;wBACnB,iBAAiB;wBACjB,cAAc;wBACd,mBAAmB;wBACnB,wBAAwB;wBACxB,oBAAoB;AACrB,qBAAA;AACF,iBAAA,CAAA;;;MC1CY,uBAAuB,CAAA;AAElC;;;;;;;;;;AAUE;IACF,aAAa,CAAC,IAAa,EAAE,QAAiB,EAAE,MAAe,EAAE,MAAe,EAAE,KAAc,EAAA;AAC9F,QAAA,MAAM,MAAM,GAAe,IAAI,UAAU,EAAE;AACxC,aAAA,MAAM,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAC/B,aAAA,MAAM,CAAC,UAAU,EAAE,QAAQ,GAAG,QAAQ,GAAG,EAAE,CAAC;AAC5C,aAAA,MAAM,CAAC,QAAQ,EAAE,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC;AACtC,aAAA,MAAM,CAAC,QAAQ,EAAE,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC;AACtC,aAAA,MAAM,CAAC,OAAO,EAAE,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC;AAEvC,QAAA,OAAO,MAAM,CAAC;KACf;8GAtBU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAvB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFtB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCKY,qBAAqB,CAAA;IAQhC,WACU,CAAA,IAAgB,EAChB,aAA4B,EAAA;QAD5B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QATrB,IAAW,CAAA,WAAA,GAAW,mCAAmC,CAAC;QAC3E,IAAW,CAAA,WAAA,GAAW,EAAE,CAAC;QACzB,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;QAClB,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;QAClB,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;QAOvB,MAAM,QAAQ,GAAW,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAC/D,aAAa,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;aACxD,SAAS,CAAC,QAAQ,IAAG;AACpB,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC3B,SAAC,CAAC,CAAC;KACN;AAED;;;;;;AAMG;AACI,IAAA,UAAU,CAAC,WAAmB,EAAE,IAAY,EAAE,IAAY,EAAA;AAC/D,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;AAED;;;;;AAKG;AACI,IAAA,MAAM,CAAC,KAAa,EAAA;QACzB,MAAM,WAAW,GAAmC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACnF,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AACtD,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,SAAA;KACF;AAED;;;;;;AAMG;AACI,IAAA,IAAI,CAAC,YAAA,GAAuB,EAAE,EAAE,WAAgB,MAAM,EAAA;QAC3D,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,YAAY,GAAW,kBAAkB,CAAC;YAC9C,IAAI,QAAQ,IAAI,MAAM,EAAE;gBACtB,QAAQ,GAAG,MAAM,CAAC;gBAClB,YAAY,GAAG,YAAY,CAAC;AAC7B,aAAA;AACD,YAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAClE,YAAA,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;AACrF,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,SAAA;KACF;AAED;;;;;AAKG;AACI,IAAA,MAAM,CAAC,KAAa,EAAA;QACzB,MAAM,WAAW,GAAmC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACnF,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,WAAW,CAAC,CAAC;AACrD,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,SAAA;KACF;AAED;;;AAGG;IACI,MAAM,GAAA;QACX,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AAC3C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,SAAA;KACF;AAED;;;;;;AAMG;AACI,IAAA,gBAAgB,CAAC,KAAa,EAAA;QACnC,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAC5C+C,YAAU,CAAC,MAAK;;;gBAGd,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC7E,CAAC,EACF,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAClF,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,SAAA;KACF;AAED;;;;AAIG;IACK,eAAe,GAAA;AACrB,QAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;YACjC,UAAU,CAAC,KAAK,CAAC;AACf,gBAAA,MAAM,EAAE,GAAG;AACX,gBAAA,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;AAC/B,aAAA,CAAC,CAAC;YACH,UAAU,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;KACJ;AAED;;;AAGG;IACH,SAAS,GAAA;AACP,QAAA,OAAO,GAAG,IAAI,CAAC,WAAW,CAAA,EAAG,IAAI,CAAC,WAAW,CAAI,CAAA,EAAA,IAAI,CAAC,IAAI,CAAA,CAAA,EAAI,IAAI,CAAC,IAAI,EAAE,CAAC;KAC3E;AAED;;;;AAIG;AACH,IAAA,kBAAkB,CAAC,KAAa,EAAA;AAC9B,QAAA,MAAM,WAAW,GAAmC;YAClD,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;AACf,YAAA,KAAK,EAAE,KAAK;SACb,CAAC;AACF,QAAA,OAAO,WAAW,CAAC;KACpB;8GA3JU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAhC,EAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAArB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAFpB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAHjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCCY,wBAAwB,CAAA;AAInC,IAAA,WAAA,CACU,IAAgB,EAAA;QAAhB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAJT,IAAQ,CAAA,QAAA,GAAW,+BAA+B,CAAC;QACnD,IAAS,CAAA,SAAA,GAAW,gCAAgC,CAAC;KAIjE;AAEL;;;;;AAKG;AACH,IAAA,IAAI,CAAI,YAAqC,EAAA;QAC3C,MAAM,MAAM,GAAe,IAAI,CAAC,+BAA+B,CAAC,YAAY,CAAC,CAAC;AAC9E,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,QAAQ,EAAG,EAAC,MAAM,EAAC,CAAC,CAAC;KACrE;AAED;;;;;AAKG;AACH,IAAA,KAAK,CAAI,YAAsC,EAAA;QAC7C,MAAM,MAAM,GAAe,IAAI,CAAC,+BAA+B,CAAC,YAAY,CAAC,CAAC;AAC9E,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,SAAS,EAAG,EAAC,MAAM,EAAC,CAAC,CAAC;KACtE;AAED;;;;;AAKG;AACK,IAAA,+BAA+B,CAAC,YAAgE,EAAA;AACtG,QAAA,IAAI,MAAM,GAAe,IAAI,UAAU,EAAE,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;AACtC,YAAA,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,MAAM,CAAC;KACf;8GA1CU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cAFvB,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAHpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACJD;;;AAGG;MACU,cAAc,CAAA;AACzB;;;;;;;;;;AAUG;AACI,IAAA,OAAO,uBAAuB,CAAC,GAAW,EAAE,SAAqB,EAAE,EAAA;AACxE,QAAA,KAAK,IAAI,CAAC,GAAW,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACnD,MAAM,KAAK,GAAW,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,YAAA,MAAM,OAAO,GAAW,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;YACjD,MAAM,UAAU,GAAW,GAAG,CAAC,OAAO,CAAC,CAAG,EAAA,OAAO,CAAG,CAAA,CAAA,CAAC,CAAC;YAEtD,IAAI,UAAU,IAAI,CAAC,EAAE;AACnB,gBAAA,MAAM,SAAS,GAAW,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC;AACtD,gBAAA,MAAM,OAAO,GAAW,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEnE,gBAAA,IAAI,SAAS,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,EAAE;oBAClC,MAAM,MAAM,GAAW,IAAI,MAAM,CAAC,CAAG,EAAA,OAAO,CAAS,OAAA,CAAA,EAAE,GAAG,CAAC,CAAC;oBAC5D,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACpC,iBAAA;AACF,aAAA;YAED,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACnC,SAAA;AAED,QAAA,OAAO,GAAG,CAAC;KACZ;8GAhCU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAd,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cANb,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAMP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAP1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCKY,qBAAqB,CAAA;8GAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAArB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAHtB,mBAAmB,EAAE,iBAAiB,CACtC,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA;AAErC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAHtB,mBAAmB,EAAE,iBAAiB,EACtC,mBAAmB,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAErC,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC;AACjD,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC;AAClD,iBAAA,CAAA;;;ACRD;;AAEG;;;;"}