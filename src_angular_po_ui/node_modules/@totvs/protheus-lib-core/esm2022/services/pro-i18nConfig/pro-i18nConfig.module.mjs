import { NgModule } from '@angular/core';
import { PoI18nModule } from '@po-ui/ng-components';
import { literalsEnUS as loginEnUS } from './i18n/pro-login.literals-EnUS';
import { literalsEsES as loginEsES } from './i18n/pro-login.literals-EsES';
import { literalsPtBR as loginPtBR } from './i18n/pro-login.literals-PtBR';
import { literalsRuRU as loginRuRU } from './i18n/pro-login.literals-RuRU';
import { literalsEnUS as sessionEnUS } from './i18n/pro-session-settings.literals-enUS';
import { literalsEsES as sessionEsES } from './i18n/pro-session-settings.literals-esES';
import { literalsPtBR as sessionPtBR } from './i18n/pro-session-settings.literals-ptBR';
import { literalsRuRU as sessionRuRU } from './i18n/pro-session-settings.literals-ruRU';
import { literalsEnUS as profileServiceEnUS } from './i18n/pro-user-profile-EnUS';
import { literalsEsES as profileServiceEsEs } from './i18n/pro-user-profile-EsES';
import { literalsPtBR as profileServicePtBR } from './i18n/pro-user-profile-PtBR';
import { literalsRuRU as profileServiceRuRU } from './i18n/pro-user-profile-RuRU';
import * as i0 from "@angular/core";
import * as i1 from "@po-ui/ng-components";
const i18nConfig = {
    default: {
        language: 'pt',
        context: 'general',
        cache: true
    },
    contexts: {
        login: {
            en: loginEnUS,
            es: loginEsES,
            pt: loginPtBR,
            ru: loginRuRU
        },
        session: {
            en: sessionEnUS,
            es: sessionEsES,
            pt: sessionPtBR,
            ru: sessionRuRU
        },
        profileService: {
            en: profileServiceEnUS,
            es: profileServiceEsEs,
            pt: profileServicePtBR,
            ru: profileServiceRuRU
        },
        general: {}
    }
};
/**
 * @description
 * Módulo para concentrar todas as strings e serviços de tradução
 * que envolvem o PoI18nConfig e o PoI18nModule
 */
export class ProI18nConfigModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.9", ngImport: i0, type: ProI18nConfigModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.9", ngImport: i0, type: ProI18nConfigModule, imports: [i1.PoI18nModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.9", ngImport: i0, type: ProI18nConfigModule, imports: [PoI18nModule.config(i18nConfig)] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.9", ngImport: i0, type: ProI18nConfigModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        PoI18nModule.config(i18nConfig),
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvLWkxOG5Db25maWcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcHJvdGhldXMtbGliLWNvcmUvc3JjL3NlcnZpY2VzL3Byby1pMThuQ29uZmlnL3Byby1pMThuQ29uZmlnLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBZ0IsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbEUsT0FBTyxFQUFFLFlBQVksSUFBSSxTQUFTLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsWUFBWSxJQUFJLFNBQVMsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxZQUFZLElBQUksU0FBUyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLFlBQVksSUFBSSxTQUFTLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUzRSxPQUFPLEVBQUUsWUFBWSxJQUFJLFdBQVcsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxZQUFZLElBQUksV0FBVyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDeEYsT0FBTyxFQUFFLFlBQVksSUFBSSxXQUFXLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUN4RixPQUFPLEVBQUUsWUFBWSxJQUFJLFdBQVcsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBRXhGLE9BQU8sRUFBRSxZQUFZLElBQUksa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxJQUFJLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbEYsT0FBTyxFQUFFLFlBQVksSUFBSSxrQkFBa0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLElBQUksa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7O0FBRWxGLE1BQU0sVUFBVSxHQUFpQjtJQUMvQixPQUFPLEVBQUU7UUFDUCxRQUFRLEVBQUUsSUFBSTtRQUNkLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLEtBQUssRUFBRSxJQUFJO0tBQ1o7SUFDRCxRQUFRLEVBQUU7UUFDUixLQUFLLEVBQUU7WUFDTCxFQUFFLEVBQUUsU0FBUztZQUNiLEVBQUUsRUFBRSxTQUFTO1lBQ2IsRUFBRSxFQUFFLFNBQVM7WUFDYixFQUFFLEVBQUUsU0FBUztTQUNkO1FBQ0QsT0FBTyxFQUFFO1lBQ1AsRUFBRSxFQUFFLFdBQVc7WUFDZixFQUFFLEVBQUUsV0FBVztZQUNmLEVBQUUsRUFBRSxXQUFXO1lBQ2YsRUFBRSxFQUFFLFdBQVc7U0FDaEI7UUFDRCxjQUFjLEVBQUU7WUFDZCxFQUFFLEVBQUUsa0JBQWtCO1lBQ3RCLEVBQUUsRUFBRSxrQkFBa0I7WUFDdEIsRUFBRSxFQUFFLGtCQUFrQjtZQUN0QixFQUFFLEVBQUUsa0JBQWtCO1NBQ3ZCO1FBQ0QsT0FBTyxFQUFFLEVBQUU7S0FDWjtDQUNGLENBQUM7QUFFRjs7OztHQUlHO0FBTUgsTUFBTSxPQUFPLG1CQUFtQjs4R0FBbkIsbUJBQW1COytHQUFuQixtQkFBbUI7K0dBQW5CLG1CQUFtQixZQUg1QixZQUFZLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQzs7MkZBR3RCLG1CQUFtQjtrQkFML0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUM7cUJBQ2hDO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9JMThuQ29uZmlnLCBQb0kxOG5Nb2R1bGUgfSBmcm9tICdAcG8tdWkvbmctY29tcG9uZW50cyc7XHJcblxyXG5pbXBvcnQgeyBsaXRlcmFsc0VuVVMgYXMgbG9naW5FblVTIH0gZnJvbSAnLi9pMThuL3Byby1sb2dpbi5saXRlcmFscy1FblVTJztcclxuaW1wb3J0IHsgbGl0ZXJhbHNFc0VTIGFzIGxvZ2luRXNFUyB9IGZyb20gJy4vaTE4bi9wcm8tbG9naW4ubGl0ZXJhbHMtRXNFUyc7XHJcbmltcG9ydCB7IGxpdGVyYWxzUHRCUiBhcyBsb2dpblB0QlIgfSBmcm9tICcuL2kxOG4vcHJvLWxvZ2luLmxpdGVyYWxzLVB0QlInO1xyXG5pbXBvcnQgeyBsaXRlcmFsc1J1UlUgYXMgbG9naW5SdVJVIH0gZnJvbSAnLi9pMThuL3Byby1sb2dpbi5saXRlcmFscy1SdVJVJztcclxuXHJcbmltcG9ydCB7IGxpdGVyYWxzRW5VUyBhcyBzZXNzaW9uRW5VUyB9IGZyb20gJy4vaTE4bi9wcm8tc2Vzc2lvbi1zZXR0aW5ncy5saXRlcmFscy1lblVTJztcclxuaW1wb3J0IHsgbGl0ZXJhbHNFc0VTIGFzIHNlc3Npb25Fc0VTIH0gZnJvbSAnLi9pMThuL3Byby1zZXNzaW9uLXNldHRpbmdzLmxpdGVyYWxzLWVzRVMnO1xyXG5pbXBvcnQgeyBsaXRlcmFsc1B0QlIgYXMgc2Vzc2lvblB0QlIgfSBmcm9tICcuL2kxOG4vcHJvLXNlc3Npb24tc2V0dGluZ3MubGl0ZXJhbHMtcHRCUic7XHJcbmltcG9ydCB7IGxpdGVyYWxzUnVSVSBhcyBzZXNzaW9uUnVSVSB9IGZyb20gJy4vaTE4bi9wcm8tc2Vzc2lvbi1zZXR0aW5ncy5saXRlcmFscy1ydVJVJztcclxuXHJcbmltcG9ydCB7IGxpdGVyYWxzRW5VUyBhcyBwcm9maWxlU2VydmljZUVuVVMgfSBmcm9tICcuL2kxOG4vcHJvLXVzZXItcHJvZmlsZS1FblVTJztcclxuaW1wb3J0IHsgbGl0ZXJhbHNFc0VTIGFzIHByb2ZpbGVTZXJ2aWNlRXNFcyB9IGZyb20gJy4vaTE4bi9wcm8tdXNlci1wcm9maWxlLUVzRVMnO1xyXG5pbXBvcnQgeyBsaXRlcmFsc1B0QlIgYXMgcHJvZmlsZVNlcnZpY2VQdEJSIH0gZnJvbSAnLi9pMThuL3Byby11c2VyLXByb2ZpbGUtUHRCUic7XHJcbmltcG9ydCB7IGxpdGVyYWxzUnVSVSBhcyBwcm9maWxlU2VydmljZVJ1UlUgfSBmcm9tICcuL2kxOG4vcHJvLXVzZXItcHJvZmlsZS1SdVJVJztcclxuXHJcbmNvbnN0IGkxOG5Db25maWc6IFBvSTE4bkNvbmZpZyA9IHtcclxuICBkZWZhdWx0OiB7XHJcbiAgICBsYW5ndWFnZTogJ3B0JyxcclxuICAgIGNvbnRleHQ6ICdnZW5lcmFsJyxcclxuICAgIGNhY2hlOiB0cnVlXHJcbiAgfSxcclxuICBjb250ZXh0czoge1xyXG4gICAgbG9naW46IHtcclxuICAgICAgZW46IGxvZ2luRW5VUyxcclxuICAgICAgZXM6IGxvZ2luRXNFUyxcclxuICAgICAgcHQ6IGxvZ2luUHRCUixcclxuICAgICAgcnU6IGxvZ2luUnVSVVxyXG4gICAgfSxcclxuICAgIHNlc3Npb246IHtcclxuICAgICAgZW46IHNlc3Npb25FblVTLFxyXG4gICAgICBlczogc2Vzc2lvbkVzRVMsXHJcbiAgICAgIHB0OiBzZXNzaW9uUHRCUixcclxuICAgICAgcnU6IHNlc3Npb25SdVJVXHJcbiAgICB9LFxyXG4gICAgcHJvZmlsZVNlcnZpY2U6IHtcclxuICAgICAgZW46IHByb2ZpbGVTZXJ2aWNlRW5VUyxcclxuICAgICAgZXM6IHByb2ZpbGVTZXJ2aWNlRXNFcyxcclxuICAgICAgcHQ6IHByb2ZpbGVTZXJ2aWNlUHRCUixcclxuICAgICAgcnU6IHByb2ZpbGVTZXJ2aWNlUnVSVVxyXG4gICAgfSxcclxuICAgIGdlbmVyYWw6IHt9XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBNw7NkdWxvIHBhcmEgY29uY2VudHJhciB0b2RhcyBhcyBzdHJpbmdzIGUgc2VydmnDp29zIGRlIHRyYWR1w6fDo29cclxuICogcXVlIGVudm9sdmVtIG8gUG9JMThuQ29uZmlnIGUgbyBQb0kxOG5Nb2R1bGVcclxuICovXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgUG9JMThuTW9kdWxlLmNvbmZpZyhpMThuQ29uZmlnKSxcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcm9JMThuQ29uZmlnTW9kdWxlIHsgfVxyXG4iXX0=