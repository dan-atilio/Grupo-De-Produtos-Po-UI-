import { Injectable } from '@angular/core';
import { environment } from '../../../environments/environment';
import * as i0 from "@angular/core";
import * as i1 from "./../../../services/pro-tenant/pro-company/services/pro-company.service";
export class ProCompanyLookupService {
    constructor(proCompanyService) {
        this.proCompanyService = proCompanyService;
        this.useHTTP = environment.useHTTP;
        this.changeServiceChannel();
    }
    getFilteredItems(params) {
        return this.proCompanyService.getListOfCompanies(params.filter, params.page, params.pageSize);
    }
    getObjectByValue(value) {
        return this.proCompanyService.getCompany(value);
    }
    setCompany(company) {
        this.proCompanyService.company = company;
    }
    setChannelAsHTTP(value) {
        this.useHTTP = value;
        this.changeServiceChannel();
    }
    isChannelHTTP() {
        return this.useHTTP;
    }
    changeServiceChannel() {
        this.proCompanyService.setChannelAsHTTP(this.useHTTP);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.9", ngImport: i0, type: ProCompanyLookupService, deps: [{ token: i1.ProCompanyService }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.9", ngImport: i0, type: ProCompanyLookupService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.9", ngImport: i0, type: ProCompanyLookupService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: () => [{ type: i1.ProCompanyService }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvLWNvbXBhbnktbG9va3VwLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wcm90aGV1cy1saWItY29yZS9zcmMvY29tcG9uZW50cy9wcm8tZmllbGRzL3Byby1jb21wYW55LWxvb2t1cC9wcm8tY29tcGFueS1sb29rdXAuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7O0FBUWhFLE1BQU0sT0FBTyx1QkFBdUI7SUFFbEMsWUFBb0IsaUJBQW9DO1FBQXBDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFEaEQsWUFBTyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFFcEMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELGdCQUFnQixDQUFDLE1BQW1DO1FBQ2xELE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixDQUM5QyxNQUFNLENBQUMsTUFBTSxFQUNiLE1BQU0sQ0FBQyxJQUFJLEVBQ1gsTUFBTSxDQUFDLFFBQVEsQ0FDaEIsQ0FBQztJQUNKLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxLQUFhO1FBQzVCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsVUFBVSxDQUFDLE9BQW1CO1FBQzVCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQzNDLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxLQUFjO1FBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFRCxhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFTyxvQkFBb0I7UUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN4RCxDQUFDOzhHQWpDVSx1QkFBdUI7a0hBQXZCLHVCQUF1QixjQUZ0QixNQUFNOzsyRkFFUCx1QkFBdUI7a0JBSG5DLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb0xvb2t1cEZpbHRlciwgUG9Mb29rdXBGaWx0ZXJlZEl0ZW1zUGFyYW1zIH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IGVudmlyb25tZW50IH0gZnJvbSAnLi4vLi4vLi4vZW52aXJvbm1lbnRzL2Vudmlyb25tZW50JztcclxuXHJcbmltcG9ydCB7IFByb0NvbXBhbnkgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3Byby10ZW5hbnQvcHJvLWNvbXBhbnkvbW9kZWxzL3Byby1jb21wYW55JztcclxuaW1wb3J0IHsgUHJvQ29tcGFueVNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3Byby10ZW5hbnQvcHJvLWNvbXBhbnkvc2VydmljZXMvcHJvLWNvbXBhbnkuc2VydmljZSc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcm9Db21wYW55TG9va3VwU2VydmljZSBpbXBsZW1lbnRzIFBvTG9va3VwRmlsdGVyIHtcclxuICBwcml2YXRlIHVzZUhUVFAgPSBlbnZpcm9ubWVudC51c2VIVFRQO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJvQ29tcGFueVNlcnZpY2U6IFByb0NvbXBhbnlTZXJ2aWNlKSB7XHJcbiAgICB0aGlzLmNoYW5nZVNlcnZpY2VDaGFubmVsKCk7XHJcbiAgfVxyXG5cclxuICBnZXRGaWx0ZXJlZEl0ZW1zKHBhcmFtczogUG9Mb29rdXBGaWx0ZXJlZEl0ZW1zUGFyYW1zKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybiB0aGlzLnByb0NvbXBhbnlTZXJ2aWNlLmdldExpc3RPZkNvbXBhbmllcyhcclxuICAgICAgcGFyYW1zLmZpbHRlcixcclxuICAgICAgcGFyYW1zLnBhZ2UsXHJcbiAgICAgIHBhcmFtcy5wYWdlU2l6ZVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGdldE9iamVjdEJ5VmFsdWUodmFsdWU6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm4gdGhpcy5wcm9Db21wYW55U2VydmljZS5nZXRDb21wYW55KHZhbHVlKTtcclxuICB9XHJcblxyXG4gIHNldENvbXBhbnkoY29tcGFueTogUHJvQ29tcGFueSkge1xyXG4gICAgdGhpcy5wcm9Db21wYW55U2VydmljZS5jb21wYW55ID0gY29tcGFueTtcclxuICB9XHJcblxyXG4gIHNldENoYW5uZWxBc0hUVFAodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMudXNlSFRUUCA9IHZhbHVlO1xyXG4gICAgdGhpcy5jaGFuZ2VTZXJ2aWNlQ2hhbm5lbCgpO1xyXG4gIH1cclxuXHJcbiAgaXNDaGFubmVsSFRUUCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnVzZUhUVFA7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNoYW5nZVNlcnZpY2VDaGFubmVsKCkge1xyXG4gICAgdGhpcy5wcm9Db21wYW55U2VydmljZS5zZXRDaGFubmVsQXNIVFRQKHRoaXMudXNlSFRUUCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==