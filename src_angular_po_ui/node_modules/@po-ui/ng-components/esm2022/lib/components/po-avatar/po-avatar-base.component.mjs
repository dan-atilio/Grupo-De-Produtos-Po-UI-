import { Directive, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
const PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];
const PO_AVATAR_SIZE_DEFAULT = 'md';
/**
 * @description
 *
 * O componente `po-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de
 * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.
 *
 * Além de poder ser utilizado separadamente, é possível usar o `po-avatar` juntamente com outros componentes e criar
 * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.
 */
export class PoAvatarBaseComponent {
    /**
     * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)
     * ou um servidor externo (`https://po-ui.io/assets/images/logo-black-small.png`).
     */
    src;
    /**
     * @optional
     *
     * @description
     *
     * Indica como o navegador deve carregar a imagem.
     *
     * Valores válidos:
     *  - `eager` (a imagem é carregada imediatamente, independente de estar visível ou não)
     *  - `lazy` (a imagem só é carregada quando estiver próxima de ser renderizada)
     *
     * @default `eager`
     */
    loading = 'eager';
    /** Evento disparado ao clicar na imagem do *avatar*. */
    click = new EventEmitter();
    _size = 'md';
    /**
     * @optional
     *
     * @description
     *
     * Tamanho de exibição do componente.
     *
     * Valores válidos:
     *  - `xs` (24x24)
     *  - `sm` (32x32)
     *  - `md` (64x64)
     *  - `lg` (96x96)
     *  - `xl` (144x144)
     *
     * @default `md`
     */
    set size(value) {
        this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;
    }
    get size() {
        return this._size;
    }
    get hasClickEvent() {
        return !!this.click.observers.length;
    }
    static ɵfac = function PoAvatarBaseComponent_Factory(t) { return new (t || PoAvatarBaseComponent)(); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoAvatarBaseComponent, inputs: { src: [i0.ɵɵInputFlags.None, "p-src", "src"], loading: [i0.ɵɵInputFlags.None, "p-loading", "loading"], size: [i0.ɵɵInputFlags.None, "p-size", "size"] }, outputs: { click: "p-click" } });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoAvatarBaseComponent, [{
        type: Directive
    }], null, { src: [{
            type: Input,
            args: ['p-src']
        }], loading: [{
            type: Input,
            args: ['p-loading']
        }], click: [{
            type: Output,
            args: ['p-click']
        }], size: [{
            type: Input,
            args: ['p-size']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYXZhdGFyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWF2YXRhci9wby1hdmF0YXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFdkUsTUFBTSxlQUFlLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDdkQsTUFBTSxzQkFBc0IsR0FBRyxJQUFJLENBQUM7QUFFcEM7Ozs7Ozs7O0dBUUc7QUFFSCxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDOzs7T0FHRztJQUNhLEdBQUcsQ0FBUztJQUU1Qjs7Ozs7Ozs7Ozs7O09BWUc7SUFDaUIsT0FBTyxHQUFxQixPQUFPLENBQUM7SUFFeEQsd0RBQXdEO0lBQ3JDLEtBQUssR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBRTNDLEtBQUssR0FBVyxJQUFJLENBQUM7SUFFN0I7Ozs7Ozs7Ozs7Ozs7OztPQWVHO0lBQ0gsSUFBcUIsSUFBSSxDQUFDLEtBQWE7UUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDO0lBQ2hGLENBQUM7SUFDRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELElBQUksYUFBYTtRQUNmLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUN2QyxDQUFDOytFQXBEVSxxQkFBcUI7NkRBQXJCLHFCQUFxQjs7aUZBQXJCLHFCQUFxQjtjQURqQyxTQUFTO2dCQU1RLEdBQUc7a0JBQWxCLEtBQUs7bUJBQUMsT0FBTztZQWVNLE9BQU87a0JBQTFCLEtBQUs7bUJBQUMsV0FBVztZQUdDLEtBQUs7a0JBQXZCLE1BQU07bUJBQUMsU0FBUztZQW9CSSxJQUFJO2tCQUF4QixLQUFLO21CQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5jb25zdCBQT19BVkFUQVJfU0laRVMgPSBbJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ107XG5jb25zdCBQT19BVkFUQVJfU0laRV9ERUZBVUxUID0gJ21kJztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLWF2YXRhcmAgw6kgdW0gY29udGFpbmVyIHBhcmEgaW1hZ2VucyBlbSBtaW5pYXR1cmEsIHBvc3N1aSB1bSBmb3JtYXRvIHJlZG9uZG8gZSBjaW5jbyBvcMOnw7VlcyBkZVxuICogdGFtYW5obywgcG9kZSBzZXIgdXRpbGl6YWRvIHBhcmEgbW9zdHJhciBhIGZvdG8gZG8gcGVyZmlsIGRlIHVtIHVzdcOhcmlvLCBlbnRyZSBvdXRyYXMgcG9zc2liaWxpZGFkZXMuXG4gKlxuICogQWzDqW0gZGUgcG9kZXIgc2VyIHV0aWxpemFkbyBzZXBhcmFkYW1lbnRlLCDDqSBwb3Nzw612ZWwgdXNhciBvIGBwby1hdmF0YXJgIGp1bnRhbWVudGUgY29tIG91dHJvcyBjb21wb25lbnRlcyBlIGNyaWFyXG4gKiBsYXlvdXRzIHJpY29zIGUgYmVtIGludGVyZXNzYW50ZXMgcGFyYSBvcyB1c3XDoXJpb3MsIGNvbW8gcG9yIGV4ZW1wbG8sIHVtYSBsaXN0YSBkZSBpdGVucyBvdSBwcm9kdXRvcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9BdmF0YXJCYXNlQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEZvbnRlIGRhIGltYWdlbSBxdWUgcG9kZSBzZXIgdW0gY2FtaW5obyBsb2NhbCAoYC4vYXNzZXRzL2ltYWdlcy9sb2dvLWJsYWNrLXNtYWxsLnBuZ2ApXG4gICAqIG91IHVtIHNlcnZpZG9yIGV4dGVybm8gKGBodHRwczovL3BvLXVpLmlvL2Fzc2V0cy9pbWFnZXMvbG9nby1ibGFjay1zbWFsbC5wbmdgKS5cbiAgICovXG4gIEBJbnB1dCgncC1zcmMnKSBzcmM6IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBJbmRpY2EgY29tbyBvIG5hdmVnYWRvciBkZXZlIGNhcnJlZ2FyIGEgaW1hZ2VtLlxuICAgKlxuICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgKiAgLSBgZWFnZXJgIChhIGltYWdlbSDDqSBjYXJyZWdhZGEgaW1lZGlhdGFtZW50ZSwgaW5kZXBlbmRlbnRlIGRlIGVzdGFyIHZpc8OtdmVsIG91IG7Do28pXG4gICAqICAtIGBsYXp5YCAoYSBpbWFnZW0gc8OzIMOpIGNhcnJlZ2FkYSBxdWFuZG8gZXN0aXZlciBwcsOzeGltYSBkZSBzZXIgcmVuZGVyaXphZGEpXG4gICAqXG4gICAqIEBkZWZhdWx0IGBlYWdlcmBcbiAgICovXG4gIEBJbnB1dCgncC1sb2FkaW5nJykgbG9hZGluZzogJ2VhZ2VyJyB8ICdsYXp5JyA9ICdlYWdlcic7XG5cbiAgLyoqIEV2ZW50byBkaXNwYXJhZG8gYW8gY2xpY2FyIG5hIGltYWdlbSBkbyAqYXZhdGFyKi4gKi9cbiAgQE91dHB1dCgncC1jbGljaycpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgcHJpdmF0ZSBfc2l6ZTogc3RyaW5nID0gJ21kJztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBUYW1hbmhvIGRlIGV4aWJpw6fDo28gZG8gY29tcG9uZW50ZS5cbiAgICpcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICogIC0gYHhzYCAoMjR4MjQpXG4gICAqICAtIGBzbWAgKDMyeDMyKVxuICAgKiAgLSBgbWRgICg2NHg2NClcbiAgICogIC0gYGxnYCAoOTZ4OTYpXG4gICAqICAtIGB4bGAgKDE0NHgxNDQpXG4gICAqXG4gICAqIEBkZWZhdWx0IGBtZGBcbiAgICovXG4gIEBJbnB1dCgncC1zaXplJykgc2V0IHNpemUodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX3NpemUgPSBQT19BVkFUQVJfU0laRVMuaW5jbHVkZXModmFsdWUpID8gdmFsdWUgOiBQT19BVkFUQVJfU0laRV9ERUZBVUxUO1xuICB9XG4gIGdldCBzaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gIH1cblxuICBnZXQgaGFzQ2xpY2tFdmVudCgpIHtcbiAgICByZXR1cm4gISF0aGlzLmNsaWNrLm9ic2VydmVycy5sZW5ndGg7XG4gIH1cbn1cbiJdfQ==