import { Directive, EventEmitter, Input, Output } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * O componente `po-page-slide` é utilizado para incluir conteúdos secundários
 * adicionando controles e navegações adicionais, mas mantendo o usuário na
 * página principal.
 *
 * Este componente é ativado a partir do método `#open()` e pode ser  encerrado
 * através do botão que encontra-se no cabeçalho do mesmo ou através do método
 * `#close()`.
 *
 * > Para o correto funcionamento do componente `po-page-slide`, deve ser
 * > importado o módulo `BrowserAnimationsModule` no módulo principal da sua
 * > aplicação.
 */
export class PoPageSlideBaseComponent {
    /**
     * @description
     *
     * Título da página.
     */
    title;
    /**
     * @description
     *
     * Subtítulo da página.
     */
    subtitle;
    /**
     * @optional
     *
     * @description
     *
     * Oculta o botão de encerramento da página.
     *
     * Esta opção só é possível se a propriedade `p-click-out` estiver habilitada.
     *
     * @default `false`
     */
    hideClose = false;
    /**
     * @optional
     *
     * @description
     *
     * Define se permite o encerramento da página ao clicar fora da mesma.
     *
     * @default `false`
     */
    clickOut = false;
    /**
     * @optional
     *
     * @description
     *
     * Permite a expansão dinâmica da largura do `po-page-slide` quando `p-size` for `auto` (automático).
     * Propriedade necessária para correto funcionamento da `po-table` dentro do `po-page-slide`
     *
     * @default `false`
     */
    flexibleWidth = false;
    /**
     * @optional
     *
     * @description
     * Evento executado ao fechar o page slide.
     */
    closePageSlide = new EventEmitter();
    // Controla se a página está ou não oculta, por padrão é oculto.
    hidden = true;
    _size = 'md';
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho da página.
     *
     * Valores válidos:
     *  - `sm` (pequeno)
     *  - `md` (médio)
     *  - `lg` (grande)
     *  - `xl` (extra-grande)
     *  - `auto` (automático)
     *
     * > Todas as opções de tamanho, exceto `auto`, possuem uma largura máxima de **768px**.
     *
     * @default `md`
     */
    set size(value) {
        const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];
        this._size = sizes.indexOf(value) > -1 ? value : 'md';
    }
    get size() {
        return this._size;
    }
    /**
     * Ativa a visualização da página.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo
     * ser utilizado o `ViewChild` da seguinte forma:
     *
     * ```typescript
     * import { PoPageSlideComponent } from '@po/ng-components';
     *
     * ...
     *
     * @ViewChild(PoPageSlideComponent, { static: true }) pageSlide: PoPageSlideComponent;
     *
     * public openPage() {
     *   this.pageSlide.open();
     * }
     * ```
     */
    open() {
        // Evita com que a página seja aberta sem que seja possível fechá-la.
        if (this.hideClose && !this.clickOut) {
            this.hideClose = false;
        }
        this.hidden = false;
    }
    /**
     * Encerra a visualização da página.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo
     * ser utilizado o `ViewChild` da seguinte forma:
     *
     * ```typescript
     * import { PoPageSlideComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoPageSlideComponent, { static: true }) pageSlide: PoPageSlideComponent;
     *
     * public closePage() {
     *   this.pageSlide.close();
     * }
     * ```
     */
    close() {
        this.hidden = true;
        this.closePageSlide.emit();
    }
    static ɵfac = function PoPageSlideBaseComponent_Factory(t) { return new (t || PoPageSlideBaseComponent)(); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoPageSlideBaseComponent, inputs: { title: [i0.ɵɵInputFlags.None, "p-title", "title"], subtitle: [i0.ɵɵInputFlags.None, "p-subtitle", "subtitle"], hideClose: [i0.ɵɵInputFlags.HasDecoratorInputTransform, "p-hide-close", "hideClose", convertToBoolean], clickOut: [i0.ɵɵInputFlags.HasDecoratorInputTransform, "p-click-out", "clickOut", convertToBoolean], flexibleWidth: [i0.ɵɵInputFlags.HasDecoratorInputTransform, "p-flexible-width", "flexibleWidth", convertToBoolean], size: [i0.ɵɵInputFlags.None, "p-size", "size"] }, outputs: { closePageSlide: "p-close" }, features: [i0.ɵɵInputTransformsFeature] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoPageSlideBaseComponent, [{
        type: Directive
    }], null, { title: [{
            type: Input,
            args: ['p-title']
        }], subtitle: [{
            type: Input,
            args: ['p-subtitle']
        }], hideClose: [{
            type: Input,
            args: [{ alias: 'p-hide-close', transform: convertToBoolean }]
        }], clickOut: [{
            type: Input,
            args: [{ alias: 'p-click-out', transform: convertToBoolean }]
        }], flexibleWidth: [{
            type: Input,
            args: [{ alias: 'p-flexible-width', transform: convertToBoolean }]
        }], closePageSlide: [{
            type: Output,
            args: ['p-close']
        }], size: [{
            type: Input,
            args: ['p-size']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1zbGlkZS1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1wYWdlL3BvLXBhZ2Utc2xpZGUvcG8tcGFnZS1zbGlkZS1iYXNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztBQUV2RDs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUVILE1BQU0sT0FBTyx3QkFBd0I7SUFDbkM7Ozs7T0FJRztJQUNlLEtBQUssQ0FBUztJQUVoQzs7OztPQUlHO0lBQ2tCLFFBQVEsQ0FBVTtJQUV2Qzs7Ozs7Ozs7OztPQVVHO0lBQzRELFNBQVMsR0FBWSxLQUFLLENBQUM7SUFFMUY7Ozs7Ozs7O09BUUc7SUFDMkQsUUFBUSxHQUFZLEtBQUssQ0FBQztJQUV4Rjs7Ozs7Ozs7O09BU0c7SUFDZ0UsYUFBYSxHQUFZLEtBQUssQ0FBQztJQUVsRzs7Ozs7T0FLRztJQUNnQixjQUFjLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFFL0UsZ0VBQWdFO0lBQ3pELE1BQU0sR0FBRyxJQUFJLENBQUM7SUFFYixLQUFLLEdBQUcsSUFBSSxDQUFDO0lBRXJCOzs7Ozs7Ozs7Ozs7Ozs7OztPQWlCRztJQUNILElBQXFCLElBQUksQ0FBQyxLQUFhO1FBQ3JDLE1BQU0sS0FBSyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDeEQsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7O09BaUJHO0lBQ0ksSUFBSTtRQUNULHFFQUFxRTtRQUNyRSxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ3BDLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1NBQ3hCO1FBRUQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7Ozs7OztPQWlCRztJQUNJLEtBQUs7UUFDVixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUM7a0ZBM0lVLHdCQUF3Qjs2REFBeEIsd0JBQXdCLGdOQTBCUSxnQkFBZ0IscUZBV2pCLGdCQUFnQixvR0FZWCxnQkFBZ0I7O2lGQWpEcEQsd0JBQXdCO2NBRHBDLFNBQVM7Z0JBT1UsS0FBSztrQkFBdEIsS0FBSzttQkFBQyxTQUFTO1lBT0ssUUFBUTtrQkFBNUIsS0FBSzttQkFBQyxZQUFZO1lBYTRDLFNBQVM7a0JBQXZFLEtBQUs7bUJBQUMsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtZQVdDLFFBQVE7a0JBQXJFLEtBQUs7bUJBQUMsRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtZQVlPLGFBQWE7a0JBQS9FLEtBQUs7bUJBQUMsRUFBRSxLQUFLLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO1lBUTlDLGNBQWM7a0JBQWhDLE1BQU07bUJBQUMsU0FBUztZQXlCSSxJQUFJO2tCQUF4QixLQUFLO21CQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1wYWdlLXNsaWRlYCDDqSB1dGlsaXphZG8gcGFyYSBpbmNsdWlyIGNvbnRlw7pkb3Mgc2VjdW5kw6FyaW9zXG4gKiBhZGljaW9uYW5kbyBjb250cm9sZXMgZSBuYXZlZ2HDp8O1ZXMgYWRpY2lvbmFpcywgbWFzIG1hbnRlbmRvIG8gdXN1w6FyaW8gbmFcbiAqIHDDoWdpbmEgcHJpbmNpcGFsLlxuICpcbiAqIEVzdGUgY29tcG9uZW50ZSDDqSBhdGl2YWRvIGEgcGFydGlyIGRvIG3DqXRvZG8gYCNvcGVuKClgIGUgcG9kZSBzZXIgIGVuY2VycmFkb1xuICogYXRyYXbDqXMgZG8gYm90w6NvIHF1ZSBlbmNvbnRyYS1zZSBubyBjYWJlw6dhbGhvIGRvIG1lc21vIG91IGF0cmF2w6lzIGRvIG3DqXRvZG9cbiAqIGAjY2xvc2UoKWAuXG4gKlxuICogPiBQYXJhIG8gY29ycmV0byBmdW5jaW9uYW1lbnRvIGRvIGNvbXBvbmVudGUgYHBvLXBhZ2Utc2xpZGVgLCBkZXZlIHNlclxuICogPiBpbXBvcnRhZG8gbyBtw7NkdWxvIGBCcm93c2VyQW5pbWF0aW9uc01vZHVsZWAgbm8gbcOzZHVsbyBwcmluY2lwYWwgZGEgc3VhXG4gKiA+IGFwbGljYcOnw6NvLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBjbGFzcyBQb1BhZ2VTbGlkZUJhc2VDb21wb25lbnQge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFTDrXR1bG8gZGEgcMOhZ2luYS5cbiAgICovXG4gIEBJbnB1dCgncC10aXRsZScpIHRpdGxlOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBTdWJ0w610dWxvIGRhIHDDoWdpbmEuXG4gICAqL1xuICBASW5wdXQoJ3Atc3VidGl0bGUnKSBzdWJ0aXRsZT86IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBPY3VsdGEgbyBib3TDo28gZGUgZW5jZXJyYW1lbnRvIGRhIHDDoWdpbmEuXG4gICAqXG4gICAqIEVzdGEgb3DDp8OjbyBzw7Mgw6kgcG9zc8OtdmVsIHNlIGEgcHJvcHJpZWRhZGUgYHAtY2xpY2stb3V0YCBlc3RpdmVyIGhhYmlsaXRhZGEuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCh7IGFsaWFzOiAncC1oaWRlLWNsb3NlJywgdHJhbnNmb3JtOiBjb252ZXJ0VG9Cb29sZWFuIH0pIGhpZGVDbG9zZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSBzZSBwZXJtaXRlIG8gZW5jZXJyYW1lbnRvIGRhIHDDoWdpbmEgYW8gY2xpY2FyIGZvcmEgZGEgbWVzbWEuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCh7IGFsaWFzOiAncC1jbGljay1vdXQnLCB0cmFuc2Zvcm06IGNvbnZlcnRUb0Jvb2xlYW4gfSkgY2xpY2tPdXQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBQZXJtaXRlIGEgZXhwYW5zw6NvIGRpbsOibWljYSBkYSBsYXJndXJhIGRvIGBwby1wYWdlLXNsaWRlYCBxdWFuZG8gYHAtc2l6ZWAgZm9yIGBhdXRvYCAoYXV0b23DoXRpY28pLlxuICAgKiBQcm9wcmllZGFkZSBuZWNlc3PDoXJpYSBwYXJhIGNvcnJldG8gZnVuY2lvbmFtZW50byBkYSBgcG8tdGFibGVgIGRlbnRybyBkbyBgcG8tcGFnZS1zbGlkZWBcbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KHsgYWxpYXM6ICdwLWZsZXhpYmxlLXdpZHRoJywgdHJhbnNmb3JtOiBjb252ZXJ0VG9Cb29sZWFuIH0pIGZsZXhpYmxlV2lkdGg6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBFdmVudG8gZXhlY3V0YWRvIGFvIGZlY2hhciBvIHBhZ2Ugc2xpZGUuXG4gICAqL1xuICBAT3V0cHV0KCdwLWNsb3NlJykgY2xvc2VQYWdlU2xpZGU6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgLy8gQ29udHJvbGEgc2UgYSBww6FnaW5hIGVzdMOhIG91IG7Do28gb2N1bHRhLCBwb3IgcGFkcsOjbyDDqSBvY3VsdG8uXG4gIHB1YmxpYyBoaWRkZW4gPSB0cnVlO1xuXG4gIHByaXZhdGUgX3NpemUgPSAnbWQnO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIERlZmluZSBvIHRhbWFuaG8gZGEgcMOhZ2luYS5cbiAgICpcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICogIC0gYHNtYCAocGVxdWVubylcbiAgICogIC0gYG1kYCAobcOpZGlvKVxuICAgKiAgLSBgbGdgIChncmFuZGUpXG4gICAqICAtIGB4bGAgKGV4dHJhLWdyYW5kZSlcbiAgICogIC0gYGF1dG9gIChhdXRvbcOhdGljbylcbiAgICpcbiAgICogPiBUb2RhcyBhcyBvcMOnw7VlcyBkZSB0YW1hbmhvLCBleGNldG8gYGF1dG9gLCBwb3NzdWVtIHVtYSBsYXJndXJhIG3DoXhpbWEgZGUgKio3NjhweCoqLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgbWRgXG4gICAqL1xuICBASW5wdXQoJ3Atc2l6ZScpIHNldCBzaXplKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBjb25zdCBzaXplcyA9IFsnc20nLCAnbWQnLCAnbGcnLCAneGwnLCAnYXV0byddO1xuICAgIHRoaXMuX3NpemUgPSBzaXplcy5pbmRleE9mKHZhbHVlKSA+IC0xID8gdmFsdWUgOiAnbWQnO1xuICB9XG5cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gIH1cblxuICAvKipcbiAgICogQXRpdmEgYSB2aXN1YWxpemHDp8OjbyBkYSBww6FnaW5hLlxuICAgKlxuICAgKiBQYXJhIHV0aWxpesOhLWxhIMOpIG5lY2Vzc8OhcmlvIHRlciBhIGluc3TDom5jaWEgZG8gY29tcG9uZW50ZSBubyBET00sIHBvZGVuZG9cbiAgICogc2VyIHV0aWxpemFkbyBvIGBWaWV3Q2hpbGRgIGRhIHNlZ3VpbnRlIGZvcm1hOlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGltcG9ydCB7IFBvUGFnZVNsaWRlQ29tcG9uZW50IH0gZnJvbSAnQHBvL25nLWNvbXBvbmVudHMnO1xuICAgKlxuICAgKiAuLi5cbiAgICpcbiAgICogQFZpZXdDaGlsZChQb1BhZ2VTbGlkZUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgcGFnZVNsaWRlOiBQb1BhZ2VTbGlkZUNvbXBvbmVudDtcbiAgICpcbiAgICogcHVibGljIG9wZW5QYWdlKCkge1xuICAgKiAgIHRoaXMucGFnZVNsaWRlLm9wZW4oKTtcbiAgICogfVxuICAgKiBgYGBcbiAgICovXG4gIHB1YmxpYyBvcGVuKCkge1xuICAgIC8vIEV2aXRhIGNvbSBxdWUgYSBww6FnaW5hIHNlamEgYWJlcnRhIHNlbSBxdWUgc2VqYSBwb3Nzw612ZWwgZmVjaMOhLWxhLlxuICAgIGlmICh0aGlzLmhpZGVDbG9zZSAmJiAhdGhpcy5jbGlja091dCkge1xuICAgICAgdGhpcy5oaWRlQ2xvc2UgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB0aGlzLmhpZGRlbiA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEVuY2VycmEgYSB2aXN1YWxpemHDp8OjbyBkYSBww6FnaW5hLlxuICAgKlxuICAgKiBQYXJhIHV0aWxpesOhLWxhIMOpIG5lY2Vzc8OhcmlvIHRlciBhIGluc3TDom5jaWEgZG8gY29tcG9uZW50ZSBubyBET00sIHBvZGVuZG9cbiAgICogc2VyIHV0aWxpemFkbyBvIGBWaWV3Q2hpbGRgIGRhIHNlZ3VpbnRlIGZvcm1hOlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGltcG9ydCB7IFBvUGFnZVNsaWRlQ29tcG9uZW50IH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuICAgKlxuICAgKiAuLi5cbiAgICpcbiAgICogQFZpZXdDaGlsZChQb1BhZ2VTbGlkZUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgcGFnZVNsaWRlOiBQb1BhZ2VTbGlkZUNvbXBvbmVudDtcbiAgICpcbiAgICogcHVibGljIGNsb3NlUGFnZSgpIHtcbiAgICogICB0aGlzLnBhZ2VTbGlkZS5jbG9zZSgpO1xuICAgKiB9XG4gICAqIGBgYFxuICAgKi9cbiAgcHVibGljIGNsb3NlKCk6IHZvaWQge1xuICAgIHRoaXMuaGlkZGVuID0gdHJ1ZTtcbiAgICB0aGlzLmNsb3NlUGFnZVNsaWRlLmVtaXQoKTtcbiAgfVxufVxuIl19