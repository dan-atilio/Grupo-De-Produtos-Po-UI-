import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/po-language/po-language.service";
import * as i2 from "@angular/common";
import * as i3 from "../../po-field/po-clean/po-clean.component";
import * as i4 from "../../po-loading/po-loading-icon/po-loading-icon.component";
import * as i5 from "../../po-icon/po-icon.component";
const _c0 = ["inputFilter"];
function PoMenuFilterComponent_po_icon_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-icon", 8);
} }
function PoMenuFilterComponent_po_loading_icon_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-loading-icon", 9);
} }
export const poMenuFilterLiteralsDefault = {
    en: { search: 'Search' },
    es: { search: 'Buscar' },
    pt: { search: 'Pesquisar' },
    ru: { search: 'Поиск' }
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que apresenta o campo de pesquisa no po-menu.
 */
export class PoMenuFilterComponent {
    languageService;
    loading;
    enableCollapse = false;
    // utilizado para repassar ao po-clean
    inputFilterElement;
    filter = new EventEmitter();
    literals;
    constructor(languageService) {
        this.languageService = languageService;
        this.literals = {
            ...poMenuFilterLiteralsDefault[this.languageService?.getLanguageDefault()],
            ...poMenuFilterLiteralsDefault[this.languageService?.getShortLanguage()]
        };
    }
    filterItems(search) {
        this.filter.emit(search);
    }
    static ɵfac = function PoMenuFilterComponent_Factory(t) { return new (t || PoMenuFilterComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoMenuFilterComponent, selectors: [["po-menu-filter"]], viewQuery: function PoMenuFilterComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7, ElementRef);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputFilterElement = _t.first);
        } }, inputs: { loading: [i0.ɵɵInputFlags.None, "p-loading", "loading"], enableCollapse: [i0.ɵɵInputFlags.None, "p-enable-collapse", "enableCollapse"] }, outputs: { filter: "p-filter" }, decls: 8, vars: 6, consts: [[1, "po-menu-filter-container"], ["type", "text", 1, "po-menu-filter", 3, "placeholder", "keyup"], ["inputFilter", ""], [1, "po-menu-filter-search-icon-container"], ["p-icon", "ICON_SEARCH po-field-icon", "class", "po-menu-filter-icon", 4, "ngIf"], ["p-size", "sm", 4, "ngIf"], [1, "po-menu-filter-close-icon-container"], [3, "p-element-ref", "p-change-event"], ["p-icon", "ICON_SEARCH po-field-icon", 1, "po-menu-filter-icon"], ["p-size", "sm"]], template: function PoMenuFilterComponent_Template(rf, ctx) { if (rf & 1) {
            const _r3 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "div", 0)(1, "input", 1, 2);
            i0.ɵɵlistener("keyup", function PoMenuFilterComponent_Template_input_keyup_1_listener() { i0.ɵɵrestoreView(_r3); const _r0 = i0.ɵɵreference(2); return i0.ɵɵresetView(ctx.filterItems(_r0.value)); });
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(3, "div", 3);
            i0.ɵɵtemplate(4, PoMenuFilterComponent_po_icon_4_Template, 1, 0, "po-icon", 4)(5, PoMenuFilterComponent_po_loading_icon_5_Template, 1, 0, "po-loading-icon", 5);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "div", 6)(7, "po-clean", 7);
            i0.ɵɵlistener("p-change-event", function PoMenuFilterComponent_Template_po_clean_p_change_event_7_listener() { i0.ɵɵrestoreView(_r3); const _r0 = i0.ɵɵreference(2); return i0.ɵɵresetView(ctx.filterItems(_r0.value)); });
            i0.ɵɵelementEnd()()();
        } if (rf & 2) {
            i0.ɵɵclassProp("po-menu-filter-container-hidden", ctx.enableCollapse);
            i0.ɵɵadvance();
            i0.ɵɵproperty("placeholder", ctx.literals.search);
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("ngIf", !ctx.loading);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.loading);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("p-element-ref", ctx.inputFilterElement);
        } }, dependencies: [i2.NgIf, i3.PoCleanComponent, i4.PoLoadingIconComponent, i5.PoIconComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoMenuFilterComponent, [{
        type: Component,
        args: [{ selector: 'po-menu-filter', template: "<div class=\"po-menu-filter-container\" [class.po-menu-filter-container-hidden]=\"enableCollapse\">\n  <input\n    #inputFilter\n    type=\"text\"\n    class=\"po-menu-filter\"\n    [placeholder]=\"literals.search\"\n    (keyup)=\"filterItems(inputFilter.value)\"\n  />\n\n  <div class=\"po-menu-filter-search-icon-container\">\n    <po-icon p-icon=\"ICON_SEARCH po-field-icon\" *ngIf=\"!loading\" class=\"po-menu-filter-icon\"></po-icon>\n    <po-loading-icon *ngIf=\"loading\" p-size=\"sm\"></po-loading-icon>\n  </div>\n  <div class=\"po-menu-filter-close-icon-container\">\n    <po-clean [p-element-ref]=\"inputFilterElement\" (p-change-event)=\"filterItems(inputFilter.value)\"></po-clean>\n  </div>\n</div>\n" }]
    }], () => [{ type: i1.PoLanguageService }], { loading: [{
            type: Input,
            args: ['p-loading']
        }], enableCollapse: [{
            type: Input,
            args: ['p-enable-collapse']
        }], inputFilterElement: [{
            type: ViewChild,
            args: ['inputFilter', { read: ElementRef, static: true }]
        }], filter: [{
            type: Output,
            args: ['p-filter']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoMenuFilterComponent, { className: "PoMenuFilterComponent", filePath: "lib/components/po-menu/po-menu-filter/po-menu-filter.component.ts", lineNumber: 23 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLW1lbnUvcG8tbWVudS1maWx0ZXIvcG8tbWVudS1maWx0ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLW1lbnUvcG8tbWVudS1maWx0ZXIvcG8tbWVudS1maWx0ZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7SUNVMUYsNkJBQW1HOzs7SUFDbkcscUNBQStEOztBRFBuRSxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRztJQUN6QyxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRTtJQUM5QyxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRTtJQUM5QyxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRTtJQUNqRCxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRTtDQUM5QyxDQUFDO0FBRUY7Ozs7OztHQU1HO0FBS0gsTUFBTSxPQUFPLHFCQUFxQjtJQVliO0lBWEMsT0FBTyxDQUFVO0lBRVQsY0FBYyxHQUFZLEtBQUssQ0FBQztJQUU1RCxzQ0FBc0M7SUFDd0Isa0JBQWtCLENBQWE7SUFFekUsTUFBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFekMsUUFBUSxDQUFNO0lBRXJCLFlBQW1CLGVBQWtDO1FBQWxDLG9CQUFlLEdBQWYsZUFBZSxDQUFtQjtRQUNuRCxJQUFJLENBQUMsUUFBUSxHQUFHO1lBQ2QsR0FBRywyQkFBMkIsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFFLENBQUM7WUFDMUUsR0FBRywyQkFBMkIsQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLGdCQUFnQixFQUFFLENBQUM7U0FDekUsQ0FBQztJQUNKLENBQUM7SUFDRCxXQUFXLENBQUMsTUFBYztRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzQixDQUFDOytFQXBCVSxxQkFBcUI7NkRBQXJCLHFCQUFxQjttQ0FNRSxVQUFVOzs7Ozs7WUM1QjlDLDhCQUErRixrQkFBQTtZQU0zRix1SkFBUyxlQUFBLDBCQUE4QixDQUFBLElBQUM7WUFMMUMsaUJBTUU7WUFFRiw4QkFBa0Q7WUFDaEQsOEVBQW1HLGlGQUFBO1lBRXJHLGlCQUFNO1lBQ04sOEJBQWlELGtCQUFBO1lBQ0EsNEtBQWtCLGVBQUEsMEJBQThCLENBQUEsSUFBQztZQUFDLGlCQUFXLEVBQUEsRUFBQTs7WUFkMUUscUVBQXdEO1lBSzFGLGNBQStCO1lBQS9CLGlEQUErQjtZQUtjLGVBQWM7WUFBZCxtQ0FBYztZQUN6QyxjQUFhO1lBQWIsa0NBQWE7WUFHckIsZUFBb0M7WUFBcEMsc0RBQW9DOzs7aUZEUXJDLHFCQUFxQjtjQUpqQyxTQUFTOzJCQUNFLGdCQUFnQjtrREFJTixPQUFPO2tCQUExQixLQUFLO21CQUFDLFdBQVc7WUFFVSxjQUFjO2tCQUF6QyxLQUFLO21CQUFDLG1CQUFtQjtZQUdvQyxrQkFBa0I7a0JBQS9FLFNBQVM7bUJBQUMsYUFBYSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO1lBRXhDLE1BQU07a0JBQXpCLE1BQU07bUJBQUMsVUFBVTs7a0ZBUlAscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9MYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9wby1sYW5ndWFnZS9wby1sYW5ndWFnZS5zZXJ2aWNlJztcbmltcG9ydCB7IFBvTWVudUZpbHRlckxpdGVyYWxzIH0gZnJvbSAnLi9wby1tZW51LWZpbHRlci1saXRlcmFscy5pbnRlcmZhY2UnO1xuXG5leHBvcnQgY29uc3QgcG9NZW51RmlsdGVyTGl0ZXJhbHNEZWZhdWx0ID0ge1xuICBlbjogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAnU2VhcmNoJyB9LFxuICBlczogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAnQnVzY2FyJyB9LFxuICBwdDogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAnUGVzcXVpc2FyJyB9LFxuICBydTogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAn0J/QvtC40YHQuicgfVxufTtcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSBhcHJlc2VudGEgbyBjYW1wbyBkZSBwZXNxdWlzYSBubyBwby1tZW51LlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1tZW51LWZpbHRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1tZW51LWZpbHRlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9NZW51RmlsdGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCdwLWxvYWRpbmcnKSBsb2FkaW5nOiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1lbmFibGUtY29sbGFwc2UnKSBlbmFibGVDb2xsYXBzZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8vIHV0aWxpemFkbyBwYXJhIHJlcGFzc2FyIGFvIHBvLWNsZWFuXG4gIEBWaWV3Q2hpbGQoJ2lucHV0RmlsdGVyJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgaW5wdXRGaWx0ZXJFbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIEBPdXRwdXQoJ3AtZmlsdGVyJykgZmlsdGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHB1YmxpYyBsaXRlcmFsczogYW55O1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBsYW5ndWFnZVNlcnZpY2U6IFBvTGFuZ3VhZ2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5saXRlcmFscyA9IHtcbiAgICAgIC4uLnBvTWVudUZpbHRlckxpdGVyYWxzRGVmYXVsdFt0aGlzLmxhbmd1YWdlU2VydmljZT8uZ2V0TGFuZ3VhZ2VEZWZhdWx0KCldLFxuICAgICAgLi4ucG9NZW51RmlsdGVyTGl0ZXJhbHNEZWZhdWx0W3RoaXMubGFuZ3VhZ2VTZXJ2aWNlPy5nZXRTaG9ydExhbmd1YWdlKCldXG4gICAgfTtcbiAgfVxuICBmaWx0ZXJJdGVtcyhzZWFyY2g6IHN0cmluZykge1xuICAgIHRoaXMuZmlsdGVyLmVtaXQoc2VhcmNoKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInBvLW1lbnUtZmlsdGVyLWNvbnRhaW5lclwiIFtjbGFzcy5wby1tZW51LWZpbHRlci1jb250YWluZXItaGlkZGVuXT1cImVuYWJsZUNvbGxhcHNlXCI+XG4gIDxpbnB1dFxuICAgICNpbnB1dEZpbHRlclxuICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICBjbGFzcz1cInBvLW1lbnUtZmlsdGVyXCJcbiAgICBbcGxhY2Vob2xkZXJdPVwibGl0ZXJhbHMuc2VhcmNoXCJcbiAgICAoa2V5dXApPVwiZmlsdGVySXRlbXMoaW5wdXRGaWx0ZXIudmFsdWUpXCJcbiAgLz5cblxuICA8ZGl2IGNsYXNzPVwicG8tbWVudS1maWx0ZXItc2VhcmNoLWljb24tY29udGFpbmVyXCI+XG4gICAgPHBvLWljb24gcC1pY29uPVwiSUNPTl9TRUFSQ0ggcG8tZmllbGQtaWNvblwiICpuZ0lmPVwiIWxvYWRpbmdcIiBjbGFzcz1cInBvLW1lbnUtZmlsdGVyLWljb25cIj48L3BvLWljb24+XG4gICAgPHBvLWxvYWRpbmctaWNvbiAqbmdJZj1cImxvYWRpbmdcIiBwLXNpemU9XCJzbVwiPjwvcG8tbG9hZGluZy1pY29uPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cInBvLW1lbnUtZmlsdGVyLWNsb3NlLWljb24tY29udGFpbmVyXCI+XG4gICAgPHBvLWNsZWFuIFtwLWVsZW1lbnQtcmVmXT1cImlucHV0RmlsdGVyRWxlbWVudFwiIChwLWNoYW5nZS1ldmVudCk9XCJmaWx0ZXJJdGVtcyhpbnB1dEZpbHRlci52YWx1ZSlcIj48L3BvLWNsZWFuPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19