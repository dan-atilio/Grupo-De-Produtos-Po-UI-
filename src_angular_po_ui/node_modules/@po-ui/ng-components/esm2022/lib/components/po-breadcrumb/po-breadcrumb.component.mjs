import { Component, ElementRef, ViewChild } from '@angular/core';
import { PoBreadcrumbBaseComponent } from './po-breadcrumb-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/po-language/po-language.service";
import * as i2 from "@angular/common";
import * as i3 from "../po-link/po-link.component";
import * as i4 from "../po-popup/po-popup.component";
import * as i5 from "../po-icon/po-icon.component";
import * as i6 from "./po-breadcrumb-favorite/po-breadcrumb-favorite.component";
const _c0 = ["breadcrumb"];
const _c1 = ["dropdownIcon"];
const _c2 = ["target"];
const _c3 = ["popup"];
function PoBreadcrumbComponent_ul_3_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "ul", 6, 7)(2, "li")(3, "po-link", 8);
    i0.ɵɵlistener("p-action", function PoBreadcrumbComponent_ul_3_Template_po_link_p_action_3_listener() { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.emitAction(ctx_r7.itemsView[0])); });
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(4, "po-icon", 9);
    i0.ɵɵelementStart(5, "li", 10, 11);
    i0.ɵɵlistener("click", function PoBreadcrumbComponent_ul_3_Template_li_click_5_listener() { i0.ɵɵrestoreView(_r8); const _r6 = i0.ɵɵreference(16); return i0.ɵɵresetView(_r6.toggle()); })("keyup", function PoBreadcrumbComponent_ul_3_Template_li_keyup_5_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.openPopup($event)); });
    i0.ɵɵelement(7, "po-icon", 12);
    i0.ɵɵelementEnd();
    i0.ɵɵelement(8, "po-icon", 9);
    i0.ɵɵelementStart(9, "li")(10, "po-link", 8);
    i0.ɵɵlistener("p-action", function PoBreadcrumbComponent_ul_3_Template_po_link_p_action_10_listener() { i0.ɵɵrestoreView(_r8); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.emitAction(ctx_r11.itemsView[ctx_r11.itemsView.length - 2])); });
    i0.ɵɵelementEnd()();
    i0.ɵɵelement(11, "po-icon", 9);
    i0.ɵɵelementStart(12, "li")(13, "span", 13);
    i0.ɵɵtext(14);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(15, "po-popup", 14, 15);
    i0.ɵɵlistener("p-close", function PoBreadcrumbComponent_ul_3_Template_po_popup_p_close_15_listener() { i0.ɵɵrestoreView(_r8); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.closePopUp()); });
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const _r5 = i0.ɵɵreference(6);
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("p-label", ctx_r1.itemsView[0].label)("p-url", ctx_r1.itemsView[0].link);
    i0.ɵɵadvance(2);
    i0.ɵɵattribute("aria-label", ctx_r1.literals.literalButtonPopup);
    i0.ɵɵadvance(5);
    i0.ɵɵproperty("p-label", ctx_r1.itemsView[ctx_r1.itemsView.length - 2].label)("p-url", ctx_r1.itemsView[ctx_r1.itemsView.length - 2].link);
    i0.ɵɵadvance(3);
    i0.ɵɵattribute("aria-current", ctx_r1.itemsView[ctx_r1.itemsView.length - 1].label);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(ctx_r1.itemsView[ctx_r1.itemsView.length - 1].label);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-hide-arrow", true)("p-actions", ctx_r1.itemsViewPopup)("p-target", _r5);
} }
function PoBreadcrumbComponent_ul_4_li_1_po_link_1_Template(rf, ctx) { if (rf & 1) {
    const _r21 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-link", 8);
    i0.ɵɵlistener("p-action", function PoBreadcrumbComponent_ul_4_li_1_po_link_1_Template_po_link_p_action_0_listener() { i0.ɵɵrestoreView(_r21); const item_r14 = i0.ɵɵnextContext().$implicit; const ctx_r19 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r19.emitAction(item_r14)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r14 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("p-label", item_r14.label)("p-url", item_r14.link);
} }
function PoBreadcrumbComponent_ul_4_li_1_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 13);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r14 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵattribute("aria-current", item_r14.label);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(item_r14.label);
} }
function PoBreadcrumbComponent_ul_4_li_1_po_icon_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-icon", 9);
} }
function PoBreadcrumbComponent_ul_4_li_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "li", 18);
    i0.ɵɵtemplate(1, PoBreadcrumbComponent_ul_4_li_1_po_link_1_Template, 1, 2, "po-link", 19)(2, PoBreadcrumbComponent_ul_4_li_1_span_2_Template, 2, 2, "span", 20)(3, PoBreadcrumbComponent_ul_4_li_1_po_icon_3_Template, 1, 0, "po-icon", 21);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const itemIndex_r15 = ctx.index;
    const ctx_r13 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !(itemIndex_r15 === ctx_r13.itemsView.length - 1));
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", itemIndex_r15 === ctx_r13.itemsView.length - 1);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !(itemIndex_r15 === ctx_r13.itemsView.length - 1));
} }
function PoBreadcrumbComponent_ul_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "ul", 16);
    i0.ɵɵtemplate(1, PoBreadcrumbComponent_ul_4_li_1_Template, 4, 3, "li", 17);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.itemsView);
} }
function PoBreadcrumbComponent_po_breadcrumb_favorite_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-breadcrumb-favorite", 22);
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-favorite-service", ctx_r3.favoriteService)("p-item-active", ctx_r3.items[ctx_r3.items.length - 1])("p-params-service", ctx_r3.paramsService)("p-hidden-literal", ctx_r3.hiddenLiteralFavorite);
} }
export const poBreadcrumbLiterals = {
    en: {
        literalButtonPopup: 'Menu pop up collapsed'
    },
    es: {
        literalButtonPopup: 'Menú pop up colapsado'
    },
    pt: {
        literalButtonPopup: 'Menu pop up colapsado'
    },
    ru: {
        literalButtonPopup: 'меню свернуто'
    }
};
/**
 * @docsExtends PoBreadcrumbBaseComponent
 *
 * @example
 *
 * <example name="po-breadcrumb-basic" title="PO Breadcrumb Basic">
 *  <file name="sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.html"> </file>
 *  <file name="sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-breadcrumb-labs" title="PO Breadcrumb Labs">
 *  <file name="sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.html"> </file>
 *  <file name="sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.ts"> </file>
 * </example>
 */
export class PoBreadcrumbComponent extends PoBreadcrumbBaseComponent {
    element;
    renderer;
    languageService;
    breadcrumbElement;
    dropdownIcon;
    svgTarget;
    popupContainer;
    showDropdown = false;
    showDropdownToggle = false;
    dropdownItems;
    literals;
    hiddenLiteralFavorite = false;
    _breadcrumbItemsLenght = 0;
    calculatedElement = false;
    differ;
    hiddenWithoutResize = false;
    initialized = false;
    timeoutResize;
    constructor(differs, element, renderer, languageService) {
        super();
        this.element = element;
        this.renderer = renderer;
        this.languageService = languageService;
        this.differ = differs.find([]).create(null);
        const language = languageService.getShortLanguage();
        this.literals = {
            ...poBreadcrumbLiterals[language]
        };
    }
    ngAfterViewInit() {
        this.initialized = true;
        this.initializeResizeListener();
    }
    ngDoCheck() {
        const breadcrumbWidth = this.breadcrumbElement.nativeElement.offsetWidth;
        // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if (breadcrumbWidth && !this.calculatedElement && this.initialized) {
            this.initBreadcrumbSize();
        }
        if (this.hiddenWithoutResize) {
            this.debounceResize();
            this.hiddenWithoutResize = false;
        }
        this.checkChangeOnItems();
    }
    ngOnDestroy() {
        this.removeResizeListener();
    }
    emitAction(item) {
        if (item.action) {
            item.action();
        }
    }
    openPopup(event) {
        if (event.code === 'Enter' || event.code === 'Space') {
            this.popupContainer.open();
        }
    }
    closePopUp() {
        this.svgTarget.nativeElement.focus();
    }
    checkChangeOnItems() {
        if (this.differ) {
            const changes = this.differ.diff(this.items);
            if (changes) {
                this.calcBreadcrumbItemsWidth();
                this.calculatedElement = false;
            }
        }
    }
    calcBreadcrumb() {
        const breadcrumbFavorite = this.getBreadcrumbFavoriteWidth();
        const existLabel = this.existsFavoritelabel();
        const breadcrumb = this.getBreadcrumbWidth(breadcrumbFavorite, existLabel);
        const breadcrumbTooltip = this.getBreadcrumbTooltipWidth();
        if (breadcrumb <= this._breadcrumbItemsLenght) {
            this.enableBreadcrumbResponsive();
        }
        else {
            this.disableBreadcrumbResponsive();
        }
        if (breadcrumbTooltip && breadcrumb <= breadcrumbTooltip) {
            this.hiddenLiteralFavorite = true;
        }
        else {
            this.hiddenLiteralFavorite = false;
        }
    }
    getBreadcrumbFavoriteWidth() {
        return this.favoriteService
            ? this.element.nativeElement.querySelector('.po-breadcrumb-favorite').offsetWidth + 20
            : 0;
    }
    getBreadcrumbTooltipWidth() {
        return this.favoriteService ? this.element.nativeElement.querySelector('.po-breadcrumb-tooltip')?.offsetWidth : 0;
    }
    existsFavoritelabel() {
        return !!this.element.nativeElement.querySelector('.po-breadcrumb-favorite-label');
    }
    getBreadcrumbWidth(breadcrumbFavorite, existLabel) {
        const widthSpan = !existLabel ? 95 : 0;
        return this.element.nativeElement.querySelector('.po-breadcrumb').offsetWidth - (breadcrumbFavorite + widthSpan);
    }
    calcBreadcrumbItemsWidth() {
        const breadcrumbItem = this.element.nativeElement.querySelectorAll('.po-breadcrumb-item');
        this._breadcrumbItemsLenght = Array.from(breadcrumbItem)
            .map(breadcrumb => breadcrumb['offsetWidth'])
            .reduce((a, b) => a + b, 16);
    }
    enableBreadcrumbResponsive() {
        this.showDropdownToggle = true;
    }
    disableBreadcrumbResponsive() {
        this.showDropdownToggle = false;
        this.itemsView = [].concat(this.items);
        this.showDropdown = false;
    }
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(() => {
            if (this.calculatedElement &&
                !this.hiddenWithoutResize &&
                this.breadcrumbElement.nativeElement.offsetWidth === 0) {
                this.hiddenWithoutResize = true;
            }
            else {
                this.calcBreadcrumb();
            }
        }, 50);
    }
    initBreadcrumbSize() {
        this.calcBreadcrumbItemsWidth();
        this.calcBreadcrumb();
        this.calculatedElement = true;
    }
    initializeResizeListener() {
        this.resizeListener = this.renderer.listen('window', 'resize', (event) => {
            this.debounceResize();
        });
    }
    removeResizeListener() {
        this.resizeListener();
    }
    static ɵfac = function PoBreadcrumbComponent_Factory(t) { return new (t || PoBreadcrumbComponent)(i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoBreadcrumbComponent, selectors: [["po-breadcrumb"]], viewQuery: function PoBreadcrumbComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7, ElementRef);
            i0.ɵɵviewQuery(_c1, 5, ElementRef);
            i0.ɵɵviewQuery(_c2, 5, ElementRef);
            i0.ɵɵviewQuery(_c3, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.breadcrumbElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownIcon = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgTarget = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupContainer = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 3, consts: [[1, "po-breadcrumb"], ["breadcrumb", ""], [1, "po-breadcrumb-items"], ["class", "po-breadcrumb-item po-clickable po-breadcrumb-tooltip", 4, "ngIf"], ["class", "po-breadcrumb-item-container", 4, "ngIf"], [3, "p-favorite-service", "p-item-active", "p-params-service", "p-hidden-literal", 4, "ngIf"], [1, "po-breadcrumb-item", "po-clickable", "po-breadcrumb-tooltip"], ["dropdownIcon", ""], [3, "p-label", "p-url", "p-action"], ["p-icon", "ICON_ARROW_RIGHT po-breadcrumb-icon-arrow"], ["role", "button", "tabindex", "0", 1, "po-breadcrumb-icon-more", 3, "click", "keyup"], ["target", ""], ["p-icon", "ICON_MORE_VERT"], ["role", "link", "tabindex", "0", 1, "po-breadcrumb-item-activate"], ["p-position", "bottom-right", 3, "p-hide-arrow", "p-actions", "p-target", "p-close"], ["popup", ""], [1, "po-breadcrumb-item-container"], ["class", "po-breadcrumb-item", 4, "ngFor", "ngForOf"], [1, "po-breadcrumb-item"], [3, "p-label", "p-url", "p-action", 4, "ngIf"], ["class", "po-breadcrumb-item-activate", "role", "link", "tabindex", "0", 4, "ngIf"], ["p-icon", "ICON_ARROW_RIGHT po-breadcrumb-icon-arrow", 4, "ngIf"], [3, "p-favorite-service", "p-item-active", "p-params-service", "p-hidden-literal"]], template: function PoBreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "nav", 0, 1)(2, "div", 2);
            i0.ɵɵtemplate(3, PoBreadcrumbComponent_ul_3_Template, 17, 10, "ul", 3)(4, PoBreadcrumbComponent_ul_4_Template, 2, 1, "ul", 4);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(5, PoBreadcrumbComponent_po_breadcrumb_favorite_5_Template, 1, 4, "po-breadcrumb-favorite", 5);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("ngIf", ctx.showDropdownToggle && ctx.itemsView.length >= 4);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", !ctx.showDropdownToggle || ctx.itemsView.length < 4);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.favoriteService);
        } }, dependencies: [i2.NgForOf, i2.NgIf, i3.PoLinkComponent, i4.PoPopupComponent, i5.PoIconComponent, i6.PoBreadcrumbFavoriteComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoBreadcrumbComponent, [{
        type: Component,
        args: [{ selector: 'po-breadcrumb', template: "<nav class=\"po-breadcrumb\" #breadcrumb>\n  <div class=\"po-breadcrumb-items\">\n    <ul\n      #dropdownIcon\n      *ngIf=\"showDropdownToggle && itemsView.length >= 4\"\n      class=\"po-breadcrumb-item po-clickable po-breadcrumb-tooltip\"\n    >\n      <li>\n        <po-link\n          [p-label]=\"itemsView[0].label\"\n          [p-url]=\"itemsView[0].link\"\n          (p-action)=\"emitAction(itemsView[0])\"\n        ></po-link>\n      </li>\n\n      <po-icon p-icon=\"ICON_ARROW_RIGHT po-breadcrumb-icon-arrow\"></po-icon>\n\n      <li\n        #target\n        class=\"po-breadcrumb-icon-more\"\n        [attr.aria-label]=\"literals.literalButtonPopup\"\n        role=\"button\"\n        tabindex=\"0\"\n        (click)=\"popup.toggle()\"\n        (keyup)=\"openPopup($event)\"\n      >\n        <po-icon p-icon=\"ICON_MORE_VERT\"></po-icon>\n      </li>\n      <po-icon p-icon=\"ICON_ARROW_RIGHT po-breadcrumb-icon-arrow\"></po-icon>\n\n      <li>\n        <po-link\n          [p-label]=\"itemsView[itemsView.length - 2].label\"\n          [p-url]=\"itemsView[itemsView.length - 2].link\"\n          (p-action)=\"emitAction(itemsView[itemsView.length - 2])\"\n        ></po-link>\n      </li>\n      <po-icon p-icon=\"ICON_ARROW_RIGHT po-breadcrumb-icon-arrow\"></po-icon>\n\n      <li>\n        <span\n          class=\"po-breadcrumb-item-activate\"\n          role=\"link\"\n          tabindex=\"0\"\n          [attr.aria-current]=\"itemsView[itemsView.length - 1].label\"\n          >{{ itemsView[itemsView.length - 1].label }}</span\n        >\n      </li>\n      <po-popup\n        #popup\n        p-position=\"bottom-right\"\n        (p-close)=\"closePopUp()\"\n        [p-hide-arrow]=\"true\"\n        [p-actions]=\"itemsViewPopup\"\n        [p-target]=\"target\"\n      >\n      </po-popup>\n    </ul>\n\n    <ul *ngIf=\"!showDropdownToggle || itemsView.length < 4\" class=\"po-breadcrumb-item-container\">\n      <li *ngFor=\"let item of itemsView; let itemIndex = index\" class=\"po-breadcrumb-item\">\n        <po-link\n          *ngIf=\"!(itemIndex === itemsView.length - 1)\"\n          [p-label]=\"item.label\"\n          [p-url]=\"item.link\"\n          (p-action)=\"emitAction(item)\"\n        ></po-link>\n        <span\n          class=\"po-breadcrumb-item-activate\"\n          role=\"link\"\n          tabindex=\"0\"\n          *ngIf=\"itemIndex === itemsView.length - 1\"\n          [attr.aria-current]=\"item.label\"\n          >{{ item.label }}</span\n        >\n        <po-icon\n          *ngIf=\"!(itemIndex === itemsView.length - 1)\"\n          p-icon=\"ICON_ARROW_RIGHT po-breadcrumb-icon-arrow\"\n        ></po-icon>\n      </li>\n    </ul>\n  </div>\n\n  <po-breadcrumb-favorite\n    *ngIf=\"favoriteService\"\n    [p-favorite-service]=\"favoriteService\"\n    [p-item-active]=\"items[items.length - 1]\"\n    [p-params-service]=\"paramsService\"\n    [p-hidden-literal]=\"hiddenLiteralFavorite\"\n  >\n  </po-breadcrumb-favorite>\n</nav>\n" }]
    }], () => [{ type: i0.IterableDiffers }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.PoLanguageService }], { breadcrumbElement: [{
            type: ViewChild,
            args: ['breadcrumb', { read: ElementRef, static: true }]
        }], dropdownIcon: [{
            type: ViewChild,
            args: ['dropdownIcon', { read: ElementRef }]
        }], svgTarget: [{
            type: ViewChild,
            args: ['target', { read: ElementRef }]
        }], popupContainer: [{
            type: ViewChild,
            args: ['popup']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoBreadcrumbComponent, { className: "PoBreadcrumbComponent", filePath: "lib/components/po-breadcrumb/po-breadcrumb.component.ts", lineNumber: 51 }); })();
//# sourceMappingURL=data:application/json;base64,