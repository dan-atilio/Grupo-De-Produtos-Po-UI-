import { Directive } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @usedBy PoSlideComponent
 *
 * @description
 *
 * Esta diretiva permite a customização de um slide.
 *
 * Deve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.
 *  - Item: `item` determina o item do slide corrente.
 *  - Índice: `index` determina o índice do slide corrente.
 *
 * Esta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-slide
 *   [p-slides]="[{ id: 1, name: 'Register', email: 'register@po-ui.com' }]">
 *
 *   <ng-template p-slide-content-template let-item let-code="index">
 *     <div class="po-row">
 *       <po-info class="po-md-6" p-label="Code" [p-value]="item.id"></po-info>
 *       <po-info class="po-md-6" p-label="Email" [p-value]="item.email"></po-info>
 *     </div>
 *   </ng-template>
 *
 * </po-slide>
 *
 * ...
 * ```
 *
 * ```
 * ...
 * <po-slide
 *    [p-slides]="[{ id: 1, name: 'Register', email: 'register@po-ui.com' }]">
 *
 *    <div *p-slide-content-template="let item, let i=index" class="po-row">
 *      <po-info class="po-md-12" p-label="Email" [p-value]="item.email"></po-info>
 *    </div>
 * </po-slide>
 * ...
 *
 * ```
 */
export class PoSlideContentTemplateDirective {
    templateRef;
    // Necessário manter templateRef para o funcionamento do row template.
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ɵfac = function PoSlideContentTemplateDirective_Factory(t) { return new (t || PoSlideContentTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef)); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoSlideContentTemplateDirective, selectors: [["", "p-slide-content-template", ""]] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSlideContentTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[p-slide-content-template]'
            }]
    }], () => [{ type: i0.TemplateRef }], null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tc2xpZGUvZGlyZWN0aXZlcy9wby1zbGlkZS1jb250ZW50LXRlbXBsYXRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFlLE1BQU0sZUFBZSxDQUFDOztBQUV2RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMENHO0FBSUgsTUFBTSxPQUFPLCtCQUErQjtJQUV2QjtJQURuQixzRUFBc0U7SUFDdEUsWUFBbUIsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO0lBQUcsQ0FBQzt5RkFGekMsK0JBQStCOzZEQUEvQiwrQkFBK0I7O2lGQUEvQiwrQkFBK0I7Y0FIM0MsU0FBUztlQUFDO2dCQUNULFFBQVEsRUFBRSw0QkFBNEI7YUFDdkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQHVzZWRCeSBQb1NsaWRlQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0YSBkaXJldGl2YSBwZXJtaXRlIGEgY3VzdG9taXphw6fDo28gZGUgdW0gc2xpZGUuXG4gKlxuICogRGV2ZS1zZSB1dGlsaXphciBjb21vIHBhcsOibWV0cm8gYSByZWZlcsOqbmNpYSBkbyBpdGVtIGUvb3Ugw61uZGljZSwgc2VuZG8gcG9yIHBhZHLDo28gbyBpdGVtLlxuICogIC0gSXRlbTogYGl0ZW1gIGRldGVybWluYSBvIGl0ZW0gZG8gc2xpZGUgY29ycmVudGUuXG4gKiAgLSDDjW5kaWNlOiBgaW5kZXhgIGRldGVybWluYSBvIMOtbmRpY2UgZG8gc2xpZGUgY29ycmVudGUuXG4gKlxuICogRXN0YSBkaXJldGl2YSBwb2RlIHNlciB1c2FkYSBkZSBkdWFzIGZvcm1hczogZXhwbMOtY2l0YSBvdSAqc3ludGF4IHN1Z2FyKi4gVmVqYSBhIHNlZ3VpciBhbWJvcywgcmVzcGVjdGl2YW1lbnRlOlxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tc2xpZGVcbiAqICAgW3Atc2xpZGVzXT1cIlt7IGlkOiAxLCBuYW1lOiAnUmVnaXN0ZXInLCBlbWFpbDogJ3JlZ2lzdGVyQHBvLXVpLmNvbScgfV1cIj5cbiAqXG4gKiAgIDxuZy10ZW1wbGF0ZSBwLXNsaWRlLWNvbnRlbnQtdGVtcGxhdGUgbGV0LWl0ZW0gbGV0LWNvZGU9XCJpbmRleFwiPlxuICogICAgIDxkaXYgY2xhc3M9XCJwby1yb3dcIj5cbiAqICAgICAgIDxwby1pbmZvIGNsYXNzPVwicG8tbWQtNlwiIHAtbGFiZWw9XCJDb2RlXCIgW3AtdmFsdWVdPVwiaXRlbS5pZFwiPjwvcG8taW5mbz5cbiAqICAgICAgIDxwby1pbmZvIGNsYXNzPVwicG8tbWQtNlwiIHAtbGFiZWw9XCJFbWFpbFwiIFtwLXZhbHVlXT1cIml0ZW0uZW1haWxcIj48L3BvLWluZm8+XG4gKiAgICAgPC9kaXY+XG4gKiAgIDwvbmctdGVtcGxhdGU+XG4gKlxuICogPC9wby1zbGlkZT5cbiAqXG4gKiAuLi5cbiAqIGBgYFxuICpcbiAqIGBgYFxuICogLi4uXG4gKiA8cG8tc2xpZGVcbiAqICAgIFtwLXNsaWRlc109XCJbeyBpZDogMSwgbmFtZTogJ1JlZ2lzdGVyJywgZW1haWw6ICdyZWdpc3RlckBwby11aS5jb20nIH1dXCI+XG4gKlxuICogICAgPGRpdiAqcC1zbGlkZS1jb250ZW50LXRlbXBsYXRlPVwibGV0IGl0ZW0sIGxldCBpPWluZGV4XCIgY2xhc3M9XCJwby1yb3dcIj5cbiAqICAgICAgPHBvLWluZm8gY2xhc3M9XCJwby1tZC0xMlwiIHAtbGFiZWw9XCJFbWFpbFwiIFtwLXZhbHVlXT1cIml0ZW0uZW1haWxcIj48L3BvLWluZm8+XG4gKiAgICA8L2Rpdj5cbiAqIDwvcG8tc2xpZGU+XG4gKiAuLi5cbiAqXG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Atc2xpZGUtY29udGVudC10ZW1wbGF0ZV0nXG59KVxuZXhwb3J0IGNsYXNzIFBvU2xpZGVDb250ZW50VGVtcGxhdGVEaXJlY3RpdmUge1xuICAvLyBOZWNlc3PDoXJpbyBtYW50ZXIgdGVtcGxhdGVSZWYgcGFyYSBvIGZ1bmNpb25hbWVudG8gZG8gcm93IHRlbXBsYXRlLlxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pIHt9XG59XG4iXX0=