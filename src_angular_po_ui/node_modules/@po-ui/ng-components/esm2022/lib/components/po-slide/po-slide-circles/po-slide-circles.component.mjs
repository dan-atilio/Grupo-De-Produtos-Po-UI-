import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
function PoSlideCirclesComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 2);
    i0.ɵɵlistener("click", function PoSlideCirclesComponent_ng_container_1_Template_div_click_1_listener() { const restoredCtx = i0.ɵɵrestoreView(_r4); const index_r2 = restoredCtx.index; const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.click.emit(index_r2)); });
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const index_r2 = ctx.index;
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵclassProp("po-slide-active-circle", index_r2 === ctx_r0.currentSlideIndex);
} }
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para o conjunto de círculos que faz a passagem de itens do `po-slide`.
 */
export class PoSlideCirclesComponent {
    /** Index do slide atual. */
    currentSlideIndex;
    /** Itens do slide. */
    items;
    /** Evento emitido ao clicar em um controle. */
    click = new EventEmitter();
    static ɵfac = function PoSlideCirclesComponent_Factory(t) { return new (t || PoSlideCirclesComponent)(); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoSlideCirclesComponent, selectors: [["po-slide-circles"]], inputs: { currentSlideIndex: [i0.ɵɵInputFlags.None, "p-current-slide-index", "currentSlideIndex"], items: [i0.ɵɵInputFlags.None, "p-items", "items"] }, outputs: { click: "p-click" }, decls: 2, vars: 1, consts: [[1, "po-slide-circles"], [4, "ngFor", "ngForOf"], [1, "po-slide-circle", 3, "click"]], template: function PoSlideCirclesComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, PoSlideCirclesComponent_ng_container_1_Template, 2, 2, "ng-container", 1);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngForOf", ctx.items);
        } }, dependencies: [i1.NgForOf], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSlideCirclesComponent, [{
        type: Component,
        args: [{ selector: 'po-slide-circles', template: "<div class=\"po-slide-circles\">\n  <ng-container *ngFor=\"let item of items; let index = index\">\n    <div\n      class=\"po-slide-circle\"\n      [class.po-slide-active-circle]=\"index === currentSlideIndex\"\n      (click)=\"click.emit(index)\"\n    ></div>\n  </ng-container>\n</div>\n" }]
    }], null, { currentSlideIndex: [{
            type: Input,
            args: ['p-current-slide-index']
        }], items: [{
            type: Input,
            args: ['p-items']
        }], click: [{
            type: Output,
            args: ['p-click']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoSlideCirclesComponent, { className: "PoSlideCirclesComponent", filePath: "lib/components/po-slide/po-slide-circles/po-slide-circles.component.ts", lineNumber: 14 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtY2lyY2xlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tc2xpZGUvcG8tc2xpZGUtY2lyY2xlcy9wby1zbGlkZS1jaXJjbGVzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1zbGlkZS9wby1zbGlkZS1jaXJjbGVzL3BvLXNsaWRlLWNpcmNsZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7SUNDckUsNkJBQTREO0lBQzFELDhCQUlDO0lBREMsa09BQVMsZUFBQSwyQkFBaUIsQ0FBQSxJQUFDO0lBQzVCLGlCQUFNO0lBQ1QsMEJBQWU7Ozs7SUFIWCxjQUE0RDtJQUE1RCwrRUFBNEQ7O0FERmxFOzs7Ozs7R0FNRztBQUtILE1BQU0sT0FBTyx1QkFBdUI7SUFDbEMsNEJBQTRCO0lBQ0ksaUJBQWlCLENBQVM7SUFFMUQsc0JBQXNCO0lBQ0osS0FBSyxDQUFhO0lBRXBDLCtDQUErQztJQUM1QixLQUFLLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztpRkFSeEMsdUJBQXVCOzZEQUF2Qix1QkFBdUI7WUNicEMsOEJBQThCO1lBQzVCLDBGQU1lO1lBQ2pCLGlCQUFNOztZQVAyQixjQUFVO1lBQVYsbUNBQVU7OztpRkRZOUIsdUJBQXVCO2NBSm5DLFNBQVM7MkJBQ0Usa0JBQWtCO2dCQUtJLGlCQUFpQjtrQkFBaEQsS0FBSzttQkFBQyx1QkFBdUI7WUFHWixLQUFLO2tCQUF0QixLQUFLO21CQUFDLFNBQVM7WUFHRyxLQUFLO2tCQUF2QixNQUFNO21CQUFDLFNBQVM7O2tGQVJOLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBwYXJhIG8gY29uanVudG8gZGUgY8OtcmN1bG9zIHF1ZSBmYXogYSBwYXNzYWdlbSBkZSBpdGVucyBkbyBgcG8tc2xpZGVgLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1zbGlkZS1jaXJjbGVzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXNsaWRlLWNpcmNsZXMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvU2xpZGVDaXJjbGVzQ29tcG9uZW50IHtcbiAgLyoqIEluZGV4IGRvIHNsaWRlIGF0dWFsLiAqL1xuICBASW5wdXQoJ3AtY3VycmVudC1zbGlkZS1pbmRleCcpIGN1cnJlbnRTbGlkZUluZGV4OiBudW1iZXI7XG5cbiAgLyoqIEl0ZW5zIGRvIHNsaWRlLiAqL1xuICBASW5wdXQoJ3AtaXRlbXMnKSBpdGVtczogQXJyYXk8YW55PjtcblxuICAvKiogRXZlbnRvIGVtaXRpZG8gYW8gY2xpY2FyIGVtIHVtIGNvbnRyb2xlLiAqL1xuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbn1cbiIsIjxkaXYgY2xhc3M9XCJwby1zbGlkZS1jaXJjbGVzXCI+XG4gIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGl0ZW0gb2YgaXRlbXM7IGxldCBpbmRleCA9IGluZGV4XCI+XG4gICAgPGRpdlxuICAgICAgY2xhc3M9XCJwby1zbGlkZS1jaXJjbGVcIlxuICAgICAgW2NsYXNzLnBvLXNsaWRlLWFjdGl2ZS1jaXJjbGVdPVwiaW5kZXggPT09IGN1cnJlbnRTbGlkZUluZGV4XCJcbiAgICAgIChjbGljayk9XCJjbGljay5lbWl0KGluZGV4KVwiXG4gICAgPjwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbjwvZGl2PlxuIl19