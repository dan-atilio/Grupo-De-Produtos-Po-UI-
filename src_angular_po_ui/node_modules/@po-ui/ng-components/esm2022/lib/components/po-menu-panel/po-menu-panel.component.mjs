import { Component } from '@angular/core';
import { NavigationEnd } from '@angular/router';
import { getFormattedLink, openExternalLink } from '../../utils/util';
import { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./services/po-menu-panel-items.service";
import * as i3 from "@angular/router";
import * as i4 from "../po-logo/po-logo.component";
import * as i5 from "./po-menu-panel-item/po-menu-panel-item.component";
function PoMenuPanelComponent_po_logo_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-logo", 6);
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-logo", ctx_r0.logo)("p-logo-alt", ctx_r0.logoAlt);
} }
function PoMenuPanelComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 7);
    i0.ɵɵelement(1, "po-menu-panel-item", 8);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const menu_r2 = ctx.$implicit;
    const menuIndex_r3 = ctx.index;
    i0.ɵɵadvance();
    i0.ɵɵclassProp("po-menu-panel-item-first", menuIndex_r3 === 0);
    i0.ɵɵproperty("p-menu-item-internal", menu_r2);
} }
/**
 * @docsExtends PoMenuPanelBaseComponent
 *
 * @description
 *
 * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de
 *  sua aplicação:
 *
 * ```
 * import { RouterModule, Routes } from '@angular/router';
 *
 * ...
 *
 * @NgModule({
 *   imports: [
 *     RouterModule,
 *     Routes,
 *     ...
 *     PoModule,
 *     ...
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 *
 * Além disso é necessário criar um módulo configurando as rotas da aplicação.
 *
 * ```
 * import { NgModule } from '@angular/core';
 *
 * import { RouterModule, Routes } from '@angular/router';
 *
 * import { HelloWorldComponent } from './hello-world/hello-world.component';
 *
 * const routes: Routes = [
 *   {path: 'hello-world', component: HelloWorldComponent}
 * ];
 *
 * @NgModule({
 *   imports: [RouterModule.forRoot(routes, {useHash: true})],
 *   exports: [RouterModule]
 * })
 * export class AppRoutingModule {}
 * ```
 *
 * @example
 *
 * <example name="po-menu-panel-basic" title="PO Menu Panel Basic">
 *   <file name="sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html"> </file>
 *   <file name="sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-menu-panel-labs" title="PO Menu Panel Labs">
 *   <file name="sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html"> </file>
 *   <file name="sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-menu-panel-customer" title="PO Menu Panel - Customers">
 *   <file name="sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html"> </file>
 *   <file name="sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts"> </file>
 * </example>
 */
export class PoMenuPanelComponent extends PoMenuPanelBaseComponent {
    location;
    menuItemsService;
    router;
    activeMenuItem;
    linkActive;
    routeSubscription;
    itemSubscription;
    constructor(viewRef, location, menuItemsService, router) {
        super();
        this.location = location;
        this.menuItemsService = menuItemsService;
        this.router = router;
    }
    ngOnDestroy() {
        this.itemSubscription.unsubscribe();
        this.routeSubscription.unsubscribe();
    }
    ngOnInit() {
        this.subscribeToMenuItem();
        this.subscribeToRoute();
    }
    activateMenuByUrl(urlPath, menus) {
        if (menus) {
            return menus.some(menu => {
                if (getFormattedLink(menu.link) === urlPath) {
                    this.activateMenuItem(menu);
                    return true;
                }
            });
        }
    }
    activateMenuItem(menu) {
        this.activeMenuItem = menu;
        this.linkActive = getFormattedLink(menu.link);
        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });
    }
    checkActiveMenuByUrl(urlPath) {
        if (!this.linkActive || this.linkActive !== urlPath) {
            this.activateMenuByUrl(urlPath, this.menus);
        }
    }
    clickMenuItem(menu) {
        if (menu.action) {
            menu.action(menu);
        }
        if (menu.type === 'externalLink') {
            openExternalLink(menu.link);
        }
        else if (menu.type === 'internalLink') {
            this.activateMenuItem(menu);
        }
    }
    subscribeToRoute() {
        this.routeSubscription = this.router.events.subscribe(rounterEvent => {
            if (rounterEvent instanceof NavigationEnd) {
                this.checkActiveMenuByUrl(this.location.path());
            }
        });
    }
    subscribeToMenuItem() {
        this.itemSubscription = this.menuItemsService
            .receiveFromChildMenuClicked()
            .subscribe((menu) => this.clickMenuItem(menu));
    }
    static ɵfac = function PoMenuPanelComponent_Factory(t) { return new (t || PoMenuPanelComponent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.PoMenuPanelItemsService), i0.ɵɵdirectiveInject(i3.Router)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoMenuPanelComponent, selectors: [["po-menu-panel"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 2, consts: [[1, "po-menu-panel"], [1, "po-menu-panel-logo-container"], ["p-class", "po-menu-panel-logo", 3, "p-logo", "p-logo-alt", 4, "ngIf"], [1, "po-menu-panel-container"], [1, "po-menu-panel-inner"], ["class", "po-menu-panel-item-wrapper", 4, "ngFor", "ngForOf"], ["p-class", "po-menu-panel-logo", 3, "p-logo", "p-logo-alt"], [1, "po-menu-panel-item-wrapper"], [3, "p-menu-item-internal"]], template: function PoMenuPanelComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0)(1, "div", 1);
            i0.ɵɵtemplate(2, PoMenuPanelComponent_po_logo_2_Template, 1, 2, "po-logo", 2);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(3, "nav", 3)(4, "div", 4);
            i0.ɵɵtemplate(5, PoMenuPanelComponent_div_5_Template, 2, 3, "div", 5);
            i0.ɵɵelementEnd()()();
        } if (rf & 2) {
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.logo);
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("ngForOf", ctx.menus);
        } }, dependencies: [i1.NgForOf, i1.NgIf, i4.PoLogoComponent, i5.PoMenuPanelItemComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoMenuPanelComponent, [{
        type: Component,
        args: [{ selector: 'po-menu-panel', template: "<div class=\"po-menu-panel\">\n  <div class=\"po-menu-panel-logo-container\">\n    <po-logo *ngIf=\"logo\" p-class=\"po-menu-panel-logo\" [p-logo]=\"logo\" [p-logo-alt]=\"logoAlt\"></po-logo>\n  </div>\n\n  <nav class=\"po-menu-panel-container\">\n    <div class=\"po-menu-panel-inner\">\n      <div *ngFor=\"let menu of menus; let menuIndex = index\" class=\"po-menu-panel-item-wrapper\">\n        <po-menu-panel-item\n          [class.po-menu-panel-item-first]=\"menuIndex === 0\"\n          [p-menu-item-internal]=\"menu\"\n        ></po-menu-panel-item>\n      </div>\n    </div>\n  </nav>\n</div>\n" }]
    }], () => [{ type: i0.ViewContainerRef }, { type: i1.Location }, { type: i2.PoMenuPanelItemsService }, { type: i3.Router }], null); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoMenuPanelComponent, { className: "PoMenuPanelComponent", filePath: "lib/components/po-menu-panel/po-menu-panel.component.ts", lineNumber: 86 }); })();
//# sourceMappingURL=data:application/json;base64,