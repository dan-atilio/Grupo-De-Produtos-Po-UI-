import { Directive, Input } from '@angular/core';
import { isExternalLink, uuid } from '../../utils/util';
import * as i0 from "@angular/core";
const poDefaultLogo = 'https://po-ui.io/assets/po-logos/po_black.svg';
/**
 * @description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
export class PoMenuPanelBaseComponent {
    _menus;
    _logo = poDefaultLogo;
    /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
    set menus(menus) {
        this._menus = Array.isArray(menus) ? menus : [];
        this.setMenuExtraProperties(this._menus);
        this.validateMenus(this._menus);
    }
    get menus() {
        return this._menus;
    }
    /**
     * @optional
     *
     * @description
     *
     * Caminho para a logomarca localizada na parte superior do menu.
     *
     * > **Importante**
     * > Caso seja indefinida será aplicada a imagem default do PO UI.
     */
    set logo(src) {
        this._logo = src ?? poDefaultLogo;
    }
    get logo() {
        return this._logo;
    }
    /**
     * Define o texto alternativo para a logomarca.
     *
     * > **Importante**
     * > Caso esta propriedade não seja definida o texto padrão será "Logomarca início".
     *
     * @default `Logomarca início`
     */
    logoAlt;
    setMenuExtraProperties(menus) {
        menus.forEach(menuItem => this.setMenuItemProperties(menuItem));
    }
    setMenuItemProperties(menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    }
    setMenuType(menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
    validateMenu(menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');
        }
    }
    validateMenus(menus) {
        menus.forEach(menu => this.validateMenu(menu));
    }
    static ɵfac = function PoMenuPanelBaseComponent_Factory(t) { return new (t || PoMenuPanelBaseComponent)(); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoMenuPanelBaseComponent, inputs: { menus: [i0.ɵɵInputFlags.None, "p-menus", "menus"], logo: [i0.ɵɵInputFlags.None, "p-logo", "logo"], logoAlt: [i0.ɵɵInputFlags.None, "p-logo-alt", "logoAlt"] } });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoMenuPanelBaseComponent, [{
        type: Directive
    }], null, { menus: [{
            type: Input,
            args: ['p-menus']
        }], logo: [{
            type: Input,
            args: ['p-logo']
        }], logoAlt: [{
            type: Input,
            args: ['p-logo-alt']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1tZW51LXBhbmVsL3BvLW1lbnUtcGFuZWwtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFLeEQsTUFBTSxhQUFhLEdBQUcsK0NBQStDLENBQUM7QUFFdEU7Ozs7Ozs7O0dBUUc7QUFFSCxNQUFNLE9BQU8sd0JBQXdCO0lBQzNCLE1BQU0sQ0FBQztJQUNQLEtBQUssR0FBVyxhQUFhLENBQUM7SUFFdEMsNEhBQTRIO0lBQzVILElBQXNCLEtBQUssQ0FBQyxLQUE2QjtRQUN2RCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBRWhELElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRUQ7Ozs7Ozs7OztPQVNHO0lBQ0gsSUFBcUIsSUFBSSxDQUFDLEdBQVc7UUFDbkMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLElBQUksYUFBYSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDa0IsT0FBTyxDQUFVO0lBRTlCLHNCQUFzQixDQUFDLEtBQTZCO1FBQzFELEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQTBCLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDM0YsQ0FBQztJQUVPLHFCQUFxQixDQUFDLFFBQWlDO1FBQzdELFFBQVEsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNwQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVPLFdBQVcsQ0FBQyxRQUF5QjtRQUMzQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNqQyxPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7SUFFTyxZQUFZLENBQUMsUUFBeUI7UUFDNUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxzREFBc0QsQ0FBQyxDQUFDO1NBQ3pFO1FBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUU7WUFDbEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO1NBQ3hFO0lBQ0gsQ0FBQztJQUVPLGFBQWEsQ0FBQyxLQUFLO1FBQ3pCLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBQztrRkE3RVUsd0JBQXdCOzZEQUF4Qix3QkFBd0I7O2lGQUF4Qix3QkFBd0I7Y0FEcEMsU0FBUztnQkFNYyxLQUFLO2tCQUExQixLQUFLO21CQUFDLFNBQVM7WUFxQkssSUFBSTtrQkFBeEIsS0FBSzttQkFBQyxRQUFRO1lBZ0JNLE9BQU87a0JBQTNCLEtBQUs7bUJBQUMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgaXNFeHRlcm5hbExpbmssIHV1aWQgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwgfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0taW50ZXJuYWwuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTWVudVBhbmVsSXRlbSB9IGZyb20gJy4vcG8tbWVudS1wYW5lbC1pdGVtL3BvLW1lbnUtcGFuZWwtaXRlbS5pbnRlcmZhY2UnO1xuXG5jb25zdCBwb0RlZmF1bHRMb2dvID0gJ2h0dHBzOi8vcG8tdWkuaW8vYXNzZXRzL3BvLWxvZ29zL3BvX2JsYWNrLnN2Zyc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0ZSDDqSB1bSBjb21wb25lbnRlIGRlIG1lbnUgbGF0ZXJhbCBjb21wb3N0byBhcGVuYXMgcG9yIMOtY29uZXMgZSBjb20gdW0gbsOtdmVsLCB1dGlsaXphZG8gcGFyYSBuYXZlZ2HDp8Ojb1xuICogZW0gcMOhZ2luYXMgaW50ZXJuYXMsIGV4dGVybmFzIGRhIGFwbGljYcOnw6NvIG91IGFjaW9uYSB1bWEgYcOnw6NvLlxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tbWVudS1wYW5lbGAgcmVjZWJlIHVtYSBsaXN0YSBkZSBvYmpldG9zIGRvIHRpcG8gYE1lbnVQYW5lbEl0ZW1gIGNvbSBhcyBpbmZvcm1hw6fDtWVzIGRvc1xuICogaXRlbnMgZGUgbWVudSBjb21vIHRleHRvcywgbGlua3MgcGFyYSByZWRpcmVjaW9uYW1lbnRvLCBhw6fDtWVzIGUgw61jb25lcy5cbiAqL1xuQERpcmVjdGl2ZSgpXG5leHBvcnQgY2xhc3MgUG9NZW51UGFuZWxCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfbWVudXM7XG4gIHByaXZhdGUgX2xvZ286IHN0cmluZyA9IHBvRGVmYXVsdExvZ287XG5cbiAgLyoqIExpc3RhIGRvcyBpdGVucyBkbyBgcG8tbWVudS1wYW5lbGAuIFNlIG8gdmFsb3IgZXN0aXZlciBpbmRlZmluaWRvIG91IGludsOhbGlkbywgc2Vyw6EgaW5pY2lhbGl6YWRvIGNvbW8gdW0gYXJyYXkgdmF6aW8uICovXG4gIEBJbnB1dCgncC1tZW51cycpIHNldCBtZW51cyhtZW51czogQXJyYXk8UG9NZW51UGFuZWxJdGVtPikge1xuICAgIHRoaXMuX21lbnVzID0gQXJyYXkuaXNBcnJheShtZW51cykgPyBtZW51cyA6IFtdO1xuXG4gICAgdGhpcy5zZXRNZW51RXh0cmFQcm9wZXJ0aWVzKHRoaXMuX21lbnVzKTtcbiAgICB0aGlzLnZhbGlkYXRlTWVudXModGhpcy5fbWVudXMpO1xuICB9XG5cbiAgZ2V0IG1lbnVzKCkge1xuICAgIHJldHVybiB0aGlzLl9tZW51cztcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIENhbWluaG8gcGFyYSBhIGxvZ29tYXJjYSBsb2NhbGl6YWRhIG5hIHBhcnRlIHN1cGVyaW9yIGRvIG1lbnUuXG4gICAqXG4gICAqID4gKipJbXBvcnRhbnRlKipcbiAgICogPiBDYXNvIHNlamEgaW5kZWZpbmlkYSBzZXLDoSBhcGxpY2FkYSBhIGltYWdlbSBkZWZhdWx0IGRvIFBPIFVJLlxuICAgKi9cbiAgQElucHV0KCdwLWxvZ28nKSBzZXQgbG9nbyhzcmM6IHN0cmluZykge1xuICAgIHRoaXMuX2xvZ28gPSBzcmMgPz8gcG9EZWZhdWx0TG9nbztcbiAgfVxuXG4gIGdldCBsb2dvKCkge1xuICAgIHJldHVybiB0aGlzLl9sb2dvO1xuICB9XG5cbiAgLyoqXG4gICAqIERlZmluZSBvIHRleHRvIGFsdGVybmF0aXZvIHBhcmEgYSBsb2dvbWFyY2EuXG4gICAqXG4gICAqID4gKipJbXBvcnRhbnRlKipcbiAgICogPiBDYXNvIGVzdGEgcHJvcHJpZWRhZGUgbsOjbyBzZWphIGRlZmluaWRhIG8gdGV4dG8gcGFkcsOjbyBzZXLDoSBcIkxvZ29tYXJjYSBpbsOtY2lvXCIuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBMb2dvbWFyY2EgaW7DrWNpb2BcbiAgICovXG4gIEBJbnB1dCgncC1sb2dvLWFsdCcpIGxvZ29BbHQ/OiBzdHJpbmc7XG5cbiAgcHJpdmF0ZSBzZXRNZW51RXh0cmFQcm9wZXJ0aWVzKG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XG4gICAgbWVudXMuZm9yRWFjaChtZW51SXRlbSA9PiB0aGlzLnNldE1lbnVJdGVtUHJvcGVydGllcyg8UG9NZW51UGFuZWxJdGVtSW50ZXJuYWw+bWVudUl0ZW0pKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudUl0ZW1Qcm9wZXJ0aWVzKG1lbnVJdGVtOiBQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbCkge1xuICAgIG1lbnVJdGVtLmlkID0gbWVudUl0ZW0uaWQgfHwgdXVpZCgpO1xuICAgIG1lbnVJdGVtLnR5cGUgPSB0aGlzLnNldE1lbnVUeXBlKG1lbnVJdGVtKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0TWVudVR5cGUobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbSk6IHN0cmluZyB7XG4gICAgaWYgKCFtZW51SXRlbS5saW5rKSB7XG4gICAgICByZXR1cm4gJ25vTGluayc7XG4gICAgfVxuXG4gICAgaWYgKGlzRXh0ZXJuYWxMaW5rKG1lbnVJdGVtLmxpbmspKSB7XG4gICAgICByZXR1cm4gJ2V4dGVybmFsTGluayc7XG4gICAgfVxuXG4gICAgcmV0dXJuICdpbnRlcm5hbExpbmsnO1xuICB9XG5cbiAgcHJpdmF0ZSB2YWxpZGF0ZU1lbnUobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbSkge1xuICAgIGlmICghbWVudUl0ZW0ubGFiZWwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTyBhdHJpYnV0byBQb01lbnVQYW5lbEl0ZW0ubGFiZWwgbsOjbyBwb2RlIHNlciB2YXppby4nKTtcbiAgICB9XG5cbiAgICBpZiAoIW1lbnVJdGVtLmljb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTyBhdHJpYnV0byBQb01lbnVQYW5lbEl0ZW0uaWNvbiBuw6NvIHBvZGUgc2VyIHZhemlvLicpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgdmFsaWRhdGVNZW51cyhtZW51cyk6IHZvaWQge1xuICAgIG1lbnVzLmZvckVhY2gobWVudSA9PiB0aGlzLnZhbGlkYXRlTWVudShtZW51KSk7XG4gIH1cbn1cbiJdfQ==