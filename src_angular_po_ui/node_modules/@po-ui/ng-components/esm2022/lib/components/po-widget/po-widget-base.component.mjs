import { Input, Output, EventEmitter, Directive } from '@angular/core';
import { convertToBoolean, isTypeof, uuid } from '../../utils/util';
import * as i0 from "@angular/core";
/**
 *
 * @description
 *
 * O componente `po-widget` é recomendado para exibição de *dashboards*, podendo ser utilizado
 * para incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.
 *
 * Além da exibição de conteúdos, este componente possibilita adicionar ações e um link
 * para ajuda, como também possibilita ser utilizado com ou sem sombra.
 *
 * Para controlar sua largura, é possível utilizar o [Grid System](/guides/grid-system) para um maior
 * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluções.
 *
 * #### Acessibilidade tratada no componente
 *
 * Algumas diretrizes de acessibilidade já são tratadas no componente, internamente, e não podem ser alteradas. São elas:
 * - Utiliza medidas relativas, para se adequar às preferências e necessidades de quem for utilizar o sistema.
 * - Desenvolvido com uso de controles padrões HTML, o que permite a identificação na interface por tecnologias assistivas. (WCAG [4.1.2: Name, Role, Value](https://www.w3.org/WAI/WCAG21/Understanding/name-role-value))
 * - O foco é visível e possui uma espessura superior a 2 pixels CSS, não ficando escondido por outros elementos da tela. (WCAG [2.4.12: Focus Appearance](https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance-enhanced))
 * - Quando selecionável, prevê interação por teclado, podendo ser selecionado através da tecla space (WCAG [2.4.1 - Keyboard](https://www.w3.org/WAI/WCAG21/Understanding/keyboard))
 *
 * #### Tokens customizáveis
 *
 * É possível alterar o estilo do componente usando os seguintes tokens (CSS):
 *
 * > Para maiores informações, acesse o guia [Personalizando o Tema Padrão com Tokens CSS](https://po-ui.io/guides/theme-customization).
 *
 * | Propriedade                                  | Descrição                                                        | Valor Padrão                                     |
 * |----------------------------------------------|------------------------------------------------------------------|--------------------------------------------------|
 * | **Default Values**                           |                                                                  |                                                  |
 * | `--padding`                                  | Preenchimento                                                    | `1rem`                                           |
 * | `--border-radius`                            | Contém o valor do raio dos cantos do elemento&nbsp;              | `var(--border-radius-md)`                        |
 * | `--border-width`                             | Contém o valor da largura dos cantos do elemento&nbsp;           | `var(--border-width-sm)`                         |
 * | `--border-color`                             | Cor da borda                                                     | `var(--color-neutral-light-20)`                  |
 * | `--background`                               | Cor de background                                                | `var(--color-neutral-light-00)`                  |
 * | `--shadow`                                   | Contém o valor da sombra do elemento                             | `var(--shadow-md)`                               |
 * | **Selected**                                 |                                                                  |                                                  |
 * | `--background-selected` &nbsp;               | Cor de background no estado selecionado &nbsp;                   | `var(--color-brand-01-lightest)`                 |
 * | `--border-color-selected` &nbsp;             | Cor da borda no estado selecionado                               | `var(--color-action-default)`                    |
 * | **Hover**                                    |                                                                  |                                                  |
 * | `--border-color-hover`                       | Cor da borda no estado hover                                     | `var(--color-brand-01-dark)`                     |
 * | `--shadow-hover`                             | Contém o valor da sombra do elemento no estado hover  &nbsp;     | `var(--shadow-lg)`                               |
 * | **Focused**                                  |                                                                  |                                                  |
 * | `--color-focused`                            | Cor principal no estado de focus                                 | `var(--color-action-default)`                    |
 * | `--outline-color-focused` &nbsp;             | Cor do outline do estado de focus                                | `var(--color-action-focus)`                      |
 *
 */
export class PoWidgetBaseComponent {
    /** Descrição da segunda ação. */
    secondaryLabel;
    /**
     * @optional
     *
     * @description
     *
     * Ação que será executada quando o usuário clicar sobre a área total do `po-widget`.
     */
    click = new EventEmitter();
    /**
     * @optional
     *
     * @description
     *
     * Função que será disparada com o valor do `p-disabled` quando esta propriedade for alterada.
     */
    onDisabled = new EventEmitter();
    /**
     * @optional
     *
     * @description
     *
     * Função que será chamada na primeira ação.
     */
    primaryAction = new EventEmitter();
    /**
     * @optional
     *
     * @description
     *
     * Função que será chamada na segunda ação.
     */
    secondaryAction = new EventEmitter();
    /**
     * @optional
     *
     * @description
     * Função chamada ao clicar no ícone de configuração
     */
    setting = new EventEmitter();
    /**
     * @optional
     *
     * @description
     * Função que será chamada ao clicar no título.
     */
    titleAction = new EventEmitter();
    containerHeight = 'auto';
    id = uuid();
    _background;
    _disabled = false;
    _height;
    _help;
    _noShadow = false;
    _primary = false;
    _primaryLabel;
    _title;
    /**
     * @optional
     *
     * @description
     *
     * Aplicação de imagem de fundo.
     * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,
     * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.
     *
     */
    set background(value) {
        this._background = value && typeof value === 'string' ? value : undefined;
    }
    get background() {
        return this._background;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita todas as ações do componente.
     *
     * @default `false`
     */
    set disabled(value) {
        this._disabled = convertToBoolean(value);
        this.onDisabled.emit(this.disabled);
    }
    get disabled() {
        return this._disabled;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-widget`.
     * A altura mínima para o `po-widget` depende do que será exibido através das propriedades `p-primary-label`,
     * `p-setting`, `p-help` e `p-title`.
     * > Caso não seja informado valor, a propriedade irá assumir o tamanho do conteúdo.
     */
    set height(value) {
        this._height = parseInt(value, 10);
        this.setHeight(this.height);
    }
    get height() {
        return this._height;
    }
    /**
     * @optional
     *
     * @description
     *
     * Link de ajuda
     */
    set help(value) {
        this._help = isTypeof(value, 'string') ? value : '';
        this.setHeight(this.height);
    }
    get help() {
        return this._help;
    }
    /**
     *
     * @optional
     *
     * @description
     *
     * Desabilita a sombra do `po-widget` quando o mesmo for clicável.
     *
     * @default `true`
     */
    set noShadow(value) {
        this._noShadow = value === '' ? true : convertToBoolean(value);
        this.setHeight(this.height);
    }
    get noShadow() {
        return this._noShadow;
    }
    /**
     * @optional
     *
     * @description
     *
     * Opção para que o `po-widget` fique em destaque.
     *
     * @default `false`
     */
    set primary(value) {
        this._primary = value === '' ? true : convertToBoolean(value);
    }
    get primary() {
        return this._primary;
    }
    /**
     * @optional
     *
     * @description
     *
     * Descrição da primeira ação.
     *
     * @default `false`
     */
    set primaryLabel(value) {
        this._primaryLabel = isTypeof(value, 'string') ? value : '';
        this.setHeight(this.height);
    }
    get primaryLabel() {
        return this._primaryLabel;
    }
    /**
     * @optional
     *
     * @description
     *
     * Título do `po-widget`.
     *
     * @default `false`
     */
    set title(value) {
        this._title = isTypeof(value, 'string') ? value : '';
        this.setHeight(this.height);
    }
    get title() {
        return this._title;
    }
    static ɵfac = function PoWidgetBaseComponent_Factory(t) { return new (t || PoWidgetBaseComponent)(); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoWidgetBaseComponent, inputs: { secondaryLabel: [i0.ɵɵInputFlags.None, "p-secondary-label", "secondaryLabel"], background: [i0.ɵɵInputFlags.None, "p-background", "background"], disabled: [i0.ɵɵInputFlags.None, "p-disabled", "disabled"], height: [i0.ɵɵInputFlags.None, "p-height", "height"], help: [i0.ɵɵInputFlags.None, "p-help", "help"], noShadow: [i0.ɵɵInputFlags.None, "p-no-shadow", "noShadow"], primary: [i0.ɵɵInputFlags.None, "p-primary", "primary"], primaryLabel: [i0.ɵɵInputFlags.None, "p-primary-label", "primaryLabel"], title: [i0.ɵɵInputFlags.None, "p-title", "title"] }, outputs: { click: "p-click", onDisabled: "p-on-disabled", primaryAction: "p-primary-action", secondaryAction: "p-secondary-action", setting: "p-setting", titleAction: "p-title-action" } });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoWidgetBaseComponent, [{
        type: Directive
    }], null, { secondaryLabel: [{
            type: Input,
            args: ['p-secondary-label']
        }], click: [{
            type: Output,
            args: ['p-click']
        }], onDisabled: [{
            type: Output,
            args: ['p-on-disabled']
        }], primaryAction: [{
            type: Output,
            args: ['p-primary-action']
        }], secondaryAction: [{
            type: Output,
            args: ['p-secondary-action']
        }], setting: [{
            type: Output,
            args: ['p-setting']
        }], titleAction: [{
            type: Output,
            args: ['p-title-action']
        }], background: [{
            type: Input,
            args: ['p-background']
        }], disabled: [{
            type: Input,
            args: ['p-disabled']
        }], height: [{
            type: Input,
            args: ['p-height']
        }], help: [{
            type: Input,
            args: ['p-help']
        }], noShadow: [{
            type: Input,
            args: ['p-no-shadow']
        }], primary: [{
            type: Input,
            args: ['p-primary']
        }], primaryLabel: [{
            type: Input,
            args: ['p-primary-label']
        }], title: [{
            type: Input,
            args: ['p-title']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,