import { EventEmitter, Input, Directive, Output } from '@angular/core';
import { convertToBoolean } from '../../utils/util';
import { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';
import * as i0 from "@angular/core";
const PO_POPOVER_DEFAULT_POSITION = 'right';
const PO_POPOVER_DEFAULT_TRIGGER = 'click';
const PO_POPOVER_TRIGGERS = ['click', 'hover'];
/**
 * @description
 *
 * O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:
 * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.
 *
 * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva
 * [**po-tooltip**](https://po-ui.io/documentation/po-tooltip?view=doc).
 *
 * Para conteúdos maiores recomenda-se o uso do [**po-modal**](https://po-ui.io/documentation/po-modal?view=doc).
 *
 * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,
 * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,
 * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.
 *
 * Também é possível escolher entre os dois eventos que podem abrir o *popover*.
 * Os eventos permitidos são: `click` e `hover`.
 *
 */
export class PoPopoverBaseComponent {
    /**
     * @description
     *
     * ElementRef do componente de origem responsável por abrir o popover.
     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento
     * de abertura, exemplo:
     *
     * ```
     * <po-button
     *   p-label="Open Popover">
     * </po-button>
     *
     * <po-popover
     *   [p-target]="poButton"
     *   [p-title]="PO Popover">
     * </po-popover>
     * ```
     *
     * Também deve-se criar um ViewChild para cada popover, passando como referência o elemento do
     * HTML que irá disparar o evento. Exemplo:
     *
     * ```
     * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;
     * ```
     *
     * Pode-se tambem informar diretamente o HTMLElement, para não ter que utilizar o ViewChild.
     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento
     * de abertura, exemplo:
     *
     * ```
     * <button #target>
     *   Abrir popover
     * </button>
     *
     * <po-popover
     *     [p-target]="target"
     *     p-trigger="click" >
     * </po-popover>
     * ```
     *
     *
     *
     */
    target;
    /** Título do popover. */
    title;
    /** Evento disparado ao fechar o popover. */
    closePopover = new EventEmitter();
    // Controla se o popover fica oculto ou visível, por padrão é oculto.
    isHidden = true;
    clickoutListener;
    mouseEnterListener;
    mouseLeaveListener;
    resizeListener;
    _hideArrow = false;
    _position = PO_POPOVER_DEFAULT_POSITION;
    _trigger = PO_POPOVER_DEFAULT_TRIGGER;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a seta do componente *popover*.
     *
     * @default `false`
     */
    set hideArrow(value) {
        this._hideArrow = convertToBoolean(value);
    }
    get hideArrow() {
        return this._hideArrow;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define a posição que o po-popover abrirá em relação ao componente alvo. Sugere-se que seja
     * usada a orientação "right" (direita), porém o mesmo é flexível e será rotacionado
     * automaticamente para se adequar a tela, caso necessário.
     *
     * Posições válidas:
     * - `right`: Posiciona o po-popover no lado direito do componente alvo.
     * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.
     * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.
     * - `bottom`: Posiciona o po-popover abaixo do componente alvo.
     * - `bottom-left`: Posiciona o po-popover abaixo e à esquerda do componente alvo.
     * - `bottom-right`: Posiciona o po-popover abaixo e à direita do componente alvo.
     * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.
     * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.
     * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.
     * - `top`: Posiciona o po-popover acima do componente alvo.
     * - `top-right`: Posiciona o po-popover acima e à direita do componente alvo.
     * - `top-left`: Posiciona o po-popover acima e à esquerda do componente alvo.
     *
     *
     * @default right
     */
    set position(value) {
        this._position = PO_CONTROL_POSITIONS.includes(value) ? value : PO_POPOVER_DEFAULT_POSITION;
    }
    get position() {
        return this._position;
    }
    /**
     * @description
     *
     * Define o evento que abrirá o po-popover.
     *
     * Valores válidos:
     *  - `click`: Abre ao clicar no componente alvo.
     *  - `hover`: Abre ao passar o mouse sobre o componente alvo.
     *
     * @default click
     * @optional
     */
    set trigger(value) {
        this._trigger = PO_POPOVER_TRIGGERS.includes(value) ? value : PO_POPOVER_DEFAULT_TRIGGER;
    }
    get trigger() {
        return this._trigger;
    }
    static ɵfac = function PoPopoverBaseComponent_Factory(t) { return new (t || PoPopoverBaseComponent)(); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoPopoverBaseComponent, inputs: { target: [i0.ɵɵInputFlags.None, "p-target", "target"], title: [i0.ɵɵInputFlags.None, "p-title", "title"], hideArrow: [i0.ɵɵInputFlags.None, "p-hide-arrow", "hideArrow"], position: [i0.ɵɵInputFlags.None, "p-position", "position"], trigger: [i0.ɵɵInputFlags.None, "p-trigger", "trigger"] }, outputs: { closePopover: "p-close" } });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoPopoverBaseComponent, [{
        type: Directive
    }], null, { target: [{
            type: Input,
            args: ['p-target']
        }], title: [{
            type: Input,
            args: ['p-title']
        }], closePopover: [{
            type: Output,
            args: ['p-close']
        }], hideArrow: [{
            type: Input,
            args: ['p-hide-arrow']
        }], position: [{
            type: Input,
            args: ['p-position']
        }], trigger: [{
            type: Input,
            args: ['p-trigger']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,