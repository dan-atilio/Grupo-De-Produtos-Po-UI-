import { Component, ViewChild } from '@angular/core';
import { PoListBoxBaseComponent } from './po-listbox-base.component';
import { isExternalLink, isTypeof, openExternalLink } from '../../utils/util';
import { debounceTime, fromEvent } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../../services/po-language/po-language.service";
import * as i2 from "@angular/router";
import * as i3 from "@angular/common";
import * as i4 from "../po-loading/po-loading-overlay/po-loading-overlay.component";
import * as i5 from "@angular/cdk/listbox";
import * as i6 from "./po-item-list/po-item-list.component";
import * as i7 from "./po-search-list/po-search-list.component";
const _c0 = ["listbox"];
const _c1 = ["listboxItemList"];
const _c2 = ["searchElement"];
function PoListBoxComponent_po_search_list_3_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-search-list", 6, 7);
    i0.ɵɵlistener("p-change", function PoListBoxComponent_po_search_list_3_Template_po_search_list_p_change_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.callChangeSearch($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-literals", ctx_r1.literalSearch)("p-field-value", ctx_r1.fieldValueSearch)("p-placeholder", ctx_r1.placeholderSearch);
} }
function PoListBoxComponent_ng_container_4_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 12);
    i0.ɵɵlistener("click", function PoListBoxComponent_ng_container_4_li_3_Template_li_click_0_listener() { i0.ɵɵrestoreView(_r13); const ctx_r12 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r12.changeAll.emit()); })("keydown", function PoListBoxComponent_ng_container_4_li_3_Template_li_keydown_0_listener($event) { i0.ɵɵrestoreView(_r13); const ctx_r14 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r14.changeAllEmit($event)); })("keydown", function PoListBoxComponent_ng_container_4_li_3_Template_li_keydown_0_listener($event) { i0.ɵɵrestoreView(_r13); const ctx_r15 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r15.onSelectAllCheckboxKeyDown($event)); });
    i0.ɵɵelement(1, "po-item-list", 13);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵattribute("aria-checked", ctx_r10.checkboxAllValue === null ? "mixed" : ctx_r10.checkboxAllValue);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-selected", ctx_r10.checkboxAllValue)("p-label", ctx_r10.literals.selectAll)("p-checkbox-value", ctx_r10.checkboxAllValue);
} }
function PoListBoxComponent_ng_container_4_li_4_label_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "label", 17);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r16 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", item_r16.label, " ");
} }
function PoListBoxComponent_ng_container_4_li_4_po_item_list_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-item-list", 18);
    i0.ɵɵlistener("p-selectcheckbox-item", function PoListBoxComponent_ng_container_4_li_4_po_item_list_2_Template_po_item_list_p_selectcheckbox_item_0_listener($event) { i0.ɵɵrestoreView(_r21); const ctx_r20 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r20.checkboxClicked($event)); })("p-selectcombo-item", function PoListBoxComponent_ng_container_4_li_4_po_item_list_2_Template_po_item_list_p_selectcombo_item_0_listener() { i0.ɵɵrestoreView(_r21); const item_r16 = i0.ɵɵnextContext().$implicit; const ctx_r22 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r22.optionClicked(item_r16)); })("p-emit-item-tabs", function PoListBoxComponent_ng_container_4_li_4_po_item_list_2_Template_po_item_list_p_emit_item_tabs_0_listener($event) { i0.ɵɵrestoreView(_r21); const ctx_r24 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r24.onSelectTabs($event)); })("p-activated-tabs", function PoListBoxComponent_ng_container_4_li_4_po_item_list_2_Template_po_item_list_p_activated_tabs_0_listener($event) { i0.ɵɵrestoreView(_r21); const ctx_r25 = i0.ɵɵnextContext(3); return i0.ɵɵresetView(ctx_r25.onActivatedTabs($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r16 = i0.ɵɵnextContext().$implicit;
    const ctx_r18 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("p-disabled", ctx_r18.returnBooleanValue(item_r16, "disabled"))("p-visible", ctx_r18.returnBooleanValue(item_r16, "visible"))("p-checkbox-value", ctx_r18.isSelectedItem(item_r16))("p-label", item_r16[ctx_r18.fieldLabel])("p-value", item_r16[ctx_r18.fieldValue])("p-selected", ctx_r18.isSelectedItem(item_r16) || item_r16.selected)("p-active-tabs", item_r16.active)("p-separator", item_r16.separator)("p-danger", item_r16.danger || item_r16.type === "danger")("p-icon", item_r16.icon)("p-type", ctx_r18.type)("p-item", item_r16)("p-tab-hide", item_r16.hide)("p-is-tabs", ctx_r18.isTabs)("p-field-value", ctx_r18.fieldValue)("p-field-label", ctx_r18.fieldLabel)("p-template", ctx_r18.template)("p-template-context", item_r16)("p-search-value", ctx_r18.searchValue)("p-filter-mode", ctx_r18.filterMode)("p-filtering", ctx_r18.isFiltering)("p-should-mark-letter", ctx_r18.shouldMarkLetters)("p-compare-cache", ctx_r18.compareCache)("p-combo-service", ctx_r18.comboService);
    i0.ɵɵattribute("data-item-list", ctx_r18.formatItemList(item_r16));
} }
function PoListBoxComponent_ng_container_4_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r28 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 14);
    i0.ɵɵlistener("click", function PoListBoxComponent_ng_container_4_li_4_Template_li_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r28); const item_r16 = restoredCtx.$implicit; const ctx_r27 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r27.onSelectItem(item_r16)); })("keydown", function PoListBoxComponent_ng_container_4_li_4_Template_li_keydown_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r28); const item_r16 = restoredCtx.$implicit; const ctx_r29 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r29.onKeyDown(item_r16, $event)); });
    i0.ɵɵtemplate(1, PoListBoxComponent_ng_container_4_li_4_label_1_Template, 2, 1, "label", 15)(2, PoListBoxComponent_ng_container_4_li_4_po_item_list_2_Template, 1, 25, "po-item-list", 16);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r16 = ctx.$implicit;
    const ctx_r11 = i0.ɵɵnextContext(2);
    i0.ɵɵclassProp("po-listbox-item", ctx_r11.visible);
    i0.ɵɵproperty("cdkOption", item_r16[ctx_r11.fieldLabel])("cdkOptionDisabled", ctx_r11.returnBooleanValue(item_r16, "disabled") || ctx_r11.returnBooleanValue(item_r16, "visible") === false || item_r16.options);
    i0.ɵɵattribute("aria-selected", ctx_r11.isSelectedItem(item_r16) || item_r16.selected);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", item_r16.options);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r11.returnBooleanValue(item_r16, "visible") !== false && !item_r16.options);
} }
function PoListBoxComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "ul", 8, 9);
    i0.ɵɵtemplate(3, PoListBoxComponent_ng_container_4_li_3_Template, 2, 4, "li", 10)(4, PoListBoxComponent_ng_container_4_li_4_Template, 3, 7, "li", 11);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("cdkListboxMultiple", ctx_r2.type === "check");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r2.type === "check" && ctx_r2.items.length && !(ctx_r2.searchElement == null ? null : ctx_r2.searchElement.inputValue) && !ctx_r2.hideSelectAll);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r2.items);
} }
function PoListBoxComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵelement(1, "po-loading-overlay", 19);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-listbox-container-loading-default", !ctx_r3.infiniteLoading);
} }
function PoListBoxComponent_ng_template_6_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 21)(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r30 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate1(" ", ctx_r30.literals.noItems, "");
} }
function PoListBoxComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, PoListBoxComponent_ng_template_6_div_0_Template, 3, 1, "div", 20);
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngIf", !ctx_r4.items.length && !ctx_r4.isServerSearching && ctx_r4.type !== "action");
} }
const _c3 = [[["", "p-popup-header-template", ""]]];
const _c4 = ["[p-popup-header-template]"];
export class PoListBoxComponent extends PoListBoxBaseComponent {
    element;
    renderer;
    router;
    changeDetector;
    listbox;
    listboxItemList;
    searchElement;
    scrollEvent$;
    subscriptionScrollEvent;
    constructor(element, renderer, languageService, router, changeDetector) {
        super(languageService);
        this.element = element;
        this.renderer = renderer;
        this.router = router;
        this.changeDetector = changeDetector;
    }
    ngAfterViewInit() {
        this.setListBoxMaxHeight();
        this.listboxItemList?.nativeElement.focus();
    }
    ngOnChanges(changes) {
        if (changes?.items) {
            this.setListBoxMaxHeight();
        }
        if (this.visible && this.infiniteScroll) {
            this.checkInfiniteScroll();
        }
    }
    ngOnDestroy() {
        if (this.subscriptionScrollEvent && this.subscriptionScrollEvent.unsubscribe) {
            this.subscriptionScrollEvent.unsubscribe();
        }
    }
    onSelectItem(itemListAction) {
        const isDisabled = itemListAction.hasOwnProperty('disabled') &&
            itemListAction.disabled !== null &&
            itemListAction.disabled !== undefined
            ? this.returnBooleanValue(itemListAction, 'disabled')
            : false;
        const isVisible = itemListAction.hasOwnProperty('visible') &&
            itemListAction.visible !== null &&
            itemListAction.visible !== undefined
            ? this.returnBooleanValue(itemListAction, 'visible')
            : true;
        if (this.isTabs && !itemListAction.disabled && !itemListAction.hide) {
            this.onClickTabs(itemListAction);
        }
        if (itemListAction && itemListAction.action && !isDisabled && isVisible) {
            itemListAction.action(this.param || itemListAction);
        }
        if (itemListAction && itemListAction.url && !isDisabled && isVisible) {
            return this.openUrl(itemListAction.url);
        }
    }
    onSelectAllCheckboxKeyDown(event) {
        if (event.code === 'Tab') {
            this.closeEvent.emit();
        }
    }
    onKeyDown(itemListAction, event) {
        event.preventDefault();
        if ((event && event.code === 'Enter') || event.code === 'Space') {
            switch (this.type) {
                case 'check':
                    this.onSelectCheckBoxItem(itemListAction);
                    break;
                case 'option':
                    this.optionClicked(itemListAction);
                    break;
                case 'action':
                    this.onSelectItem(itemListAction);
                    break;
            }
        }
        if ((event && event.code === 'Escape') || event.code === 'Tab') {
            this.closeEvent.emit();
        }
    }
    checkboxClicked({ option, selected }) {
        if (this.type === 'check') {
            this.change.emit({ selected, option });
        }
    }
    optionClicked(option) {
        if (this.type === 'option') {
            this.items.filter(item => item[this.fieldValue] === option[this.fieldValue] ? (item['selected'] = true) : (item['selected'] = false));
            this.selectCombo.emit({ ...option });
        }
    }
    onSelectCheckBoxItem(option) {
        const selected = !this.isSelectedItem(option);
        this.checkboxClicked({ option, selected });
    }
    isSelectedItem(option) {
        return this.selectedOptions.some(selectedItem => selectedItem[this.fieldValue] === option[this.fieldValue]);
    }
    changeAllEmit(event) {
        if ((event && event.code === 'Enter') || event.code === 'Space') {
            this.changeAll.emit();
        }
    }
    onSelectTabs(tab) {
        if (this.isTabs && tab) {
            this.changeStateTabs.emit(tab);
        }
    }
    onActivatedTabs(tab) {
        this.activatedTab.emit(tab);
    }
    callChangeSearch(event) {
        this.changeSearch.emit(event);
    }
    showMoreInfiniteScroll({ target }) {
        const scrollPosition = target.offsetHeight + target.scrollTop;
        if (scrollPosition >= target.scrollHeight * (this.infiniteScrollDistance / 110)) {
            this.UpdateInfiniteScroll.emit();
        }
    }
    scrollListener(componentListner) {
        return fromEvent(componentListner, 'scroll').pipe(debounceTime(100));
    }
    setFocus() {
        this.listboxItemList.nativeElement.focus();
    }
    checkInfiniteScroll() {
        if (this.hasInfiniteScroll()) {
            this.includeInfiniteScroll();
        }
    }
    hasInfiniteScroll() {
        this.changeDetector.detectChanges();
        return this.infiniteScroll && this.listboxItemList?.nativeElement.scrollHeight;
    }
    checkTemplate() {
        if (this.cache || this.infiniteScroll) {
            return this.items.length;
        }
        else {
            return !this.isServerSearching && this.items.length;
        }
    }
    includeInfiniteScroll() {
        this.scrollEvent$ = this.scrollListener(this.listboxItemList?.nativeElement);
        this.subscriptionScrollEvent = this.scrollEvent$.subscribe(event => {
            this.showMoreInfiniteScroll(event);
        });
    }
    returnBooleanValue(itemListAction, property) {
        return isTypeof(itemListAction[property], 'function')
            ? itemListAction[property](this.param || itemListAction)
            : itemListAction[property];
    }
    setListBoxMaxHeight() {
        const itemsLength = this.items.length;
        if (itemsLength > 6) {
            if (this.type === 'check' && !this.hideSearch) {
                this.renderer.setStyle(this.listbox.nativeElement, 'maxHeight', `${44 * 6 - 44 / 3 + 60}px`);
            }
            else {
                this.renderer.setStyle(this.listbox.nativeElement, 'maxHeight', `${44 * 6 - 44 / 3}px`);
            }
        }
    }
    openUrl(url) {
        if (isExternalLink(url)) {
            return openExternalLink(url);
        }
        if (url) {
            return this.router.navigate([url]);
        }
    }
    onClickTabs(tab) {
        if (!tab.disabled) {
            this.clickTab.emit(tab);
        }
    }
    formatItemList(item) {
        if (this.isTabs) {
            return item.id;
        }
        else {
            try {
                return JSON.stringify(item);
            }
            catch (error) {
                return item;
            }
        }
    }
    static ɵfac = function PoListBoxComponent_Factory(t) { return new (t || PoListBoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PoLanguageService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoListBoxComponent, selectors: [["po-listbox"]], viewQuery: function PoListBoxComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
            i0.ɵɵviewQuery(_c1, 5);
            i0.ɵɵviewQuery(_c2, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listbox = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listboxItemList = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchElement = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 8, vars: 8, consts: [[1, "po-listbox", 3, "hidden"], ["listbox", ""], [3, "p-literals", "p-field-value", "p-placeholder", "p-change", 4, "ngIf"], [4, "ngIf", "ngIfElse"], [3, "po-listbox-container-loading-default", 4, "ngIf"], ["noDataTemplate", ""], [3, "p-literals", "p-field-value", "p-placeholder", "p-change"], ["searchElement", ""], ["cdkListbox", "", 1, "po-listbox-list", 3, "cdkListboxMultiple"], ["listboxItemList", ""], ["cdkOption", "selectAll", 3, "click", "keydown", 4, "ngIf"], [3, "po-listbox-item", "cdkOption", "cdkOptionDisabled", "click", "keydown", 4, "ngFor", "ngForOf"], ["cdkOption", "selectAll", 3, "click", "keydown"], ["p-type", "check", "p-value", "selectAll", 3, "p-selected", "p-label", "p-checkbox-value"], [3, "cdkOption", "cdkOptionDisabled", "click", "keydown"], ["class", "po-combo-item-title", 4, "ngIf"], [3, "p-disabled", "p-visible", "p-checkbox-value", "p-label", "p-value", "p-selected", "p-active-tabs", "p-separator", "p-danger", "p-icon", "p-type", "p-item", "p-tab-hide", "p-is-tabs", "p-field-value", "p-field-label", "p-template", "p-template-context", "p-search-value", "p-filter-mode", "p-filtering", "p-should-mark-letter", "p-compare-cache", "p-combo-service", "p-selectcheckbox-item", "p-selectcombo-item", "p-emit-item-tabs", "p-activated-tabs", 4, "ngIf"], [1, "po-combo-item-title"], [3, "p-disabled", "p-visible", "p-checkbox-value", "p-label", "p-value", "p-selected", "p-active-tabs", "p-separator", "p-danger", "p-icon", "p-type", "p-item", "p-tab-hide", "p-is-tabs", "p-field-value", "p-field-label", "p-template", "p-template-context", "p-search-value", "p-filter-mode", "p-filtering", "p-should-mark-letter", "p-compare-cache", "p-combo-service", "p-selectcheckbox-item", "p-selectcombo-item", "p-emit-item-tabs", "p-activated-tabs"], ["p-size", "md"], ["class", "po-listbox-container-no-data po-text-center", 4, "ngIf"], [1, "po-listbox-container-no-data", "po-text-center"]], template: function PoListBoxComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef(_c3);
            i0.ɵɵelementStart(0, "div", 0, 1);
            i0.ɵɵprojection(2);
            i0.ɵɵtemplate(3, PoListBoxComponent_po_search_list_3_Template, 2, 3, "po-search-list", 2)(4, PoListBoxComponent_ng_container_4_Template, 5, 3, "ng-container", 3)(5, PoListBoxComponent_div_5_Template, 2, 2, "div", 4)(6, PoListBoxComponent_ng_template_6_Template, 1, 1, "ng-template", null, 5, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            const _r5 = i0.ɵɵreference(7);
            i0.ɵɵclassProp("po-listbox-check", ctx.type === "check" || ctx.type === "option");
            i0.ɵɵproperty("hidden", ctx.visible);
            i0.ɵɵattribute("data-type", ctx.type);
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("ngIf", !ctx.hideSearch && ctx.type === "check");
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.checkTemplate())("ngIfElse", _r5);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.isServerSearching && ctx.type !== "action");
        } }, dependencies: [i3.NgForOf, i3.NgIf, i4.PoLoadingOverlayComponent, i5.CdkListbox, i5.CdkOption, i6.PoItemListComponent, i7.PoSearchListComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoListBoxComponent, [{
        type: Component,
        args: [{ selector: 'po-listbox', template: "<div\n  #listbox\n  class=\"po-listbox\"\n  [class.po-listbox-check]=\"type === 'check' || type === 'option'\"\n  [attr.data-type]=\"type\"\n  [hidden]=\"visible\"\n>\n  <ng-content select=\"[p-popup-header-template]\"></ng-content>\n\n  <po-search-list\n    #searchElement\n    *ngIf=\"!hideSearch && type === 'check'\"\n    (p-change)=\"callChangeSearch($event)\"\n    [p-literals]=\"literalSearch\"\n    [p-field-value]=\"fieldValueSearch\"\n    [p-placeholder]=\"placeholderSearch\"\n  ></po-search-list>\n\n  <ng-container *ngIf=\"checkTemplate(); else noDataTemplate\">\n    <ul #listboxItemList cdkListbox [cdkListboxMultiple]=\"type === 'check'\" class=\"po-listbox-list\">\n      <li\n        cdkOption=\"selectAll\"\n        *ngIf=\"type === 'check' && items.length && !searchElement?.inputValue && !hideSelectAll\"\n        [attr.aria-checked]=\"checkboxAllValue === null ? 'mixed' : checkboxAllValue\"\n        (click)=\"changeAll.emit()\"\n        (keydown)=\"changeAllEmit($event)\"\n        (keydown)=\"onSelectAllCheckboxKeyDown($event)\"\n      >\n        <po-item-list\n          [p-selected]=\"checkboxAllValue\"\n          p-type=\"check\"\n          [p-label]=\"literals.selectAll\"\n          p-value=\"selectAll\"\n          [p-checkbox-value]=\"checkboxAllValue\"\n        >\n        </po-item-list>\n      </li>\n      <li\n        [class.po-listbox-item]=\"visible\"\n        *ngFor=\"let item of items\"\n        [cdkOption]=\"item[fieldLabel]\"\n        [cdkOptionDisabled]=\"\n          returnBooleanValue(item, 'disabled') || returnBooleanValue(item, 'visible') === false || item.options\n        \"\n        [attr.aria-selected]=\"isSelectedItem(item) || item.selected\"\n        (click)=\"onSelectItem(item)\"\n        (keydown)=\"onKeyDown(item, $event)\"\n      >\n        <label *ngIf=\"item.options\" class=\"po-combo-item-title\">\n          {{ item.label }}\n        </label>\n        <po-item-list\n          *ngIf=\"returnBooleanValue(item, 'visible') !== false && !item.options\"\n          [p-disabled]=\"returnBooleanValue(item, 'disabled')\"\n          [p-visible]=\"returnBooleanValue(item, 'visible')\"\n          [p-checkbox-value]=\"isSelectedItem(item)\"\n          [attr.data-item-list]=\"formatItemList(item)\"\n          [p-label]=\"item[fieldLabel]\"\n          [p-value]=\"item[fieldValue]\"\n          [p-selected]=\"isSelectedItem(item) || item.selected\"\n          [p-active-tabs]=\"item.active\"\n          [p-separator]=\"item.separator\"\n          [p-danger]=\"item.danger || item.type === 'danger'\"\n          [p-icon]=\"item.icon\"\n          [p-type]=\"type\"\n          [p-item]=\"item\"\n          [p-tab-hide]=\"item.hide\"\n          [p-is-tabs]=\"isTabs\"\n          [p-field-value]=\"fieldValue\"\n          [p-field-label]=\"fieldLabel\"\n          [p-template]=\"template\"\n          [p-template-context]=\"item\"\n          (p-selectcheckbox-item)=\"checkboxClicked($event)\"\n          (p-selectcombo-item)=\"optionClicked(item)\"\n          (p-emit-item-tabs)=\"onSelectTabs($event)\"\n          (p-activated-tabs)=\"onActivatedTabs($event)\"\n          [p-search-value]=\"searchValue\"\n          [p-filter-mode]=\"filterMode\"\n          [p-filtering]=\"isFiltering\"\n          [p-should-mark-letter]=\"shouldMarkLetters\"\n          [p-compare-cache]=\"compareCache\"\n          [p-combo-service]=\"comboService\"\n        ></po-item-list>\n      </li>\n    </ul>\n  </ng-container>\n\n  <div *ngIf=\"isServerSearching && type !== 'action'\" [class.po-listbox-container-loading-default]=\"!infiniteLoading\">\n    <po-loading-overlay p-size=\"md\"></po-loading-overlay>\n  </div>\n\n  <ng-template #noDataTemplate>\n    <div\n      *ngIf=\"!items.length && !isServerSearching && type !== 'action'\"\n      class=\"po-listbox-container-no-data po-text-center\"\n    >\n      <span> {{ literals.noItems }}</span>\n    </div>\n  </ng-template>\n</div>\n" }]
    }], () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.PoLanguageService }, { type: i2.Router }, { type: i0.ChangeDetectorRef }], { listbox: [{
            type: ViewChild,
            args: ['listbox', { static: true }]
        }], listboxItemList: [{
            type: ViewChild,
            args: ['listboxItemList', { static: false }]
        }], searchElement: [{
            type: ViewChild,
            args: ['searchElement']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoListBoxComponent, { className: "PoListBoxComponent", filePath: "lib/components/po-listbox/po-listbox.component.ts", lineNumber: 29 }); })();
//# sourceMappingURL=data:application/json;base64,