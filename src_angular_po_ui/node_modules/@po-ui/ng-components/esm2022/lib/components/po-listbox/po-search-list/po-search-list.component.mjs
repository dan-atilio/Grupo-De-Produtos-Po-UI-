import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../po-icon/po-icon.component";
const _c0 = ["inputElement"];
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente de pesquisa que será criado dentro do search do `po-listbox`.
 */
export class PoSearchListComponent {
    cd;
    inputElement;
    /** Propriedade que recebe as literais definidas no `po-listbox`. */
    literals;
    fieldValue;
    /** Evento que será disparado a cada tecla digitada no campo de busca. */
    change = new EventEmitter();
    _placeholder;
    constructor(cd) {
        this.cd = cd;
    }
    /**
     * @optional
     *
     * @description
     *
     * Placeholder do campo de pesquisa.
     *
     * > Caso o mesmo não seja informado, o valor padrão será traduzido com base no idioma do navegador (pt, es e en).
     *
     * @default `Buscar`
     */
    set placeholder(placeholder) {
        this._placeholder =
            placeholder && this.isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;
    }
    get placeholder() {
        return this._placeholder || this.literals.placeholderSearch;
    }
    get inputValue() {
        return this.inputElement.nativeElement.value;
    }
    onChange(event) {
        this.change.emit({ event: event, [this.fieldValue]: this.inputElement.nativeElement.value });
    }
    setFocus() {
        this.inputElement.nativeElement.focus();
    }
    clean() {
        this.inputElement.nativeElement.value = '';
        this.cd.markForCheck();
    }
    isTypeof(object, type) {
        return typeof object === type;
    }
    static ɵfac = function PoSearchListComponent_Factory(t) { return new (t || PoSearchListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoSearchListComponent, selectors: [["po-search-list"]], viewQuery: function PoSearchListComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7, ElementRef);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
        } }, inputs: { literals: [i0.ɵɵInputFlags.None, "p-literals", "literals"], fieldValue: [i0.ɵɵInputFlags.None, "p-field-value", "fieldValue"], placeholder: [i0.ɵɵInputFlags.None, "p-placeholder", "placeholder"] }, outputs: { change: "p-change" }, decls: 5, vars: 1, consts: [[1, "po-field-container-content", "po-listbox-container-search"], [1, "po-field-icon-container-left"], ["p-icon", "ICON_SEARCH", 1, "po-field-icon", "po-icon-input"], ["type", "text", 1, "po-input", "po-input-icon-left", "po-listbox-search-input", 3, "placeholder", "keyup"], ["inputElement", ""]], template: function PoSearchListComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0)(1, "div", 1);
            i0.ɵɵelement(2, "po-icon", 2);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(3, "input", 3, 4);
            i0.ɵɵlistener("keyup", function PoSearchListComponent_Template_input_keyup_3_listener($event) { return ctx.onChange($event); });
            i0.ɵɵelementEnd()();
        } if (rf & 2) {
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("placeholder", ctx.placeholder);
        } }, dependencies: [i1.PoIconComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSearchListComponent, [{
        type: Component,
        args: [{ selector: 'po-search-list', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"po-field-container-content po-listbox-container-search\">\n  <div class=\"po-field-icon-container-left\">\n    <po-icon p-icon=\"ICON_SEARCH\" class=\"po-field-icon po-icon-input\"></po-icon>\n  </div>\n\n  <input\n    #inputElement\n    class=\"po-input po-input-icon-left po-listbox-search-input\"\n    type=\"text\"\n    [placeholder]=\"placeholder\"\n    (keyup)=\"onChange($event)\"\n  />\n</div>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }], { inputElement: [{
            type: ViewChild,
            args: ['inputElement', { read: ElementRef, static: true }]
        }], literals: [{
            type: Input,
            args: ['p-literals']
        }], fieldValue: [{
            type: Input,
            args: ['p-field-value']
        }], change: [{
            type: Output,
            args: ['p-change']
        }], placeholder: [{
            type: Input,
            args: ['p-placeholder']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoSearchListComponent, { className: "PoSearchListComponent", filePath: "lib/components/po-listbox/po-search-list/po-search-list.component.ts", lineNumber: 25 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2VhcmNoLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWxpc3Rib3gvcG8tc2VhcmNoLWxpc3QvcG8tc2VhcmNoLWxpc3QuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWxpc3Rib3gvcG8tc2VhcmNoLWxpc3QvcG8tc2VhcmNoLWxpc3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUV2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQzs7OztBQUd2Qjs7Ozs7O0dBTUc7QUFNSCxNQUFNLE9BQU8scUJBQXFCO0lBYVo7SUFaMkMsWUFBWSxDQUFhO0lBRXhGLG9FQUFvRTtJQUMvQyxRQUFRLENBQXFCO0lBRTFCLFVBQVUsQ0FBUztJQUUzQyx5RUFBeUU7SUFDckQsTUFBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFeEMsWUFBWSxDQUFVO0lBRTlCLFlBQW9CLEVBQXFCO1FBQXJCLE9BQUUsR0FBRixFQUFFLENBQW1CO0lBQUcsQ0FBQztJQUU3Qzs7Ozs7Ozs7OztPQVVHO0lBQ0gsSUFBNEIsV0FBVyxDQUFDLFdBQW1CO1FBQ3pELElBQUksQ0FBQyxZQUFZO1lBQ2YsV0FBVyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUM7SUFDeEcsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDO0lBQzlELENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztJQUMvQyxDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQUs7UUFDWixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzFDLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUMzQyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxRQUFRLENBQUMsTUFBVyxFQUFFLElBQVM7UUFDN0IsT0FBTyxPQUFPLE1BQU0sS0FBSyxJQUFJLENBQUM7SUFDaEMsQ0FBQzsrRUF0RFUscUJBQXFCOzZEQUFyQixxQkFBcUI7bUNBQ0csVUFBVTs7Ozs7WUN6Qi9DLDhCQUFvRSxhQUFBO1lBRWhFLDZCQUE0RTtZQUM5RSxpQkFBTTtZQUVOLG1DQU1FO1lBREEsdUdBQVMsb0JBQWdCLElBQUM7WUFMNUIsaUJBTUUsRUFBQTs7WUFGQSxlQUEyQjtZQUEzQiw2Q0FBMkI7OztpRkRlbEIscUJBQXFCO2NBTGpDLFNBQVM7MkJBQ0UsZ0JBQWdCLG1CQUVULHVCQUF1QixDQUFDLE1BQU07a0RBR2dCLFlBQVk7a0JBQTFFLFNBQVM7bUJBQUMsY0FBYyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO1lBR3hDLFFBQVE7a0JBQTVCLEtBQUs7bUJBQUMsWUFBWTtZQUVLLFVBQVU7a0JBQWpDLEtBQUs7bUJBQUMsZUFBZTtZQUdGLE1BQU07a0JBQXpCLE1BQU07bUJBQUMsVUFBVTtZQWlCVSxXQUFXO2tCQUF0QyxLQUFLO21CQUFDLGVBQWU7O2tGQTFCWCxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0xpc3RCb3hMaXRlcmFscyB9IGZyb20gJy4uL2ludGVyZmFjZXMvcG8tbGlzdGJveC1saXRlcmFscy5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgZGUgcGVzcXVpc2EgcXVlIHNlcsOhIGNyaWFkbyBkZW50cm8gZG8gc2VhcmNoIGRvIGBwby1saXN0Ym94YC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tc2VhcmNoLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tc2VhcmNoLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1NlYXJjaExpc3RDb21wb25lbnQge1xuICBAVmlld0NoaWxkKCdpbnB1dEVsZW1lbnQnLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBpbnB1dEVsZW1lbnQ6IEVsZW1lbnRSZWY7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYXMgbGl0ZXJhaXMgZGVmaW5pZGFzIG5vIGBwby1saXN0Ym94YC4gKi9cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHM/OiBQb0xpc3RCb3hMaXRlcmFscztcblxuICBASW5wdXQoJ3AtZmllbGQtdmFsdWUnKSBmaWVsZFZhbHVlOiBzdHJpbmc7XG5cbiAgLyoqIEV2ZW50byBxdWUgc2Vyw6EgZGlzcGFyYWRvIGEgY2FkYSB0ZWNsYSBkaWdpdGFkYSBubyBjYW1wbyBkZSBidXNjYS4gKi9cbiAgQE91dHB1dCgncC1jaGFuZ2UnKSBjaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJpdmF0ZSBfcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogUGxhY2Vob2xkZXIgZG8gY2FtcG8gZGUgcGVzcXVpc2EuXG4gICAqXG4gICAqID4gQ2FzbyBvIG1lc21vIG7Do28gc2VqYSBpbmZvcm1hZG8sIG8gdmFsb3IgcGFkcsOjbyBzZXLDoSB0cmFkdXppZG8gY29tIGJhc2Ugbm8gaWRpb21hIGRvIG5hdmVnYWRvciAocHQsIGVzIGUgZW4pLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgQnVzY2FyYFxuICAgKi9cbiAgQElucHV0KCdwLXBsYWNlaG9sZGVyJykgc2V0IHBsYWNlaG9sZGVyKHBsYWNlaG9sZGVyOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9wbGFjZWhvbGRlciA9XG4gICAgICBwbGFjZWhvbGRlciAmJiB0aGlzLmlzVHlwZW9mKHBsYWNlaG9sZGVyLCAnc3RyaW5nJykgPyBwbGFjZWhvbGRlciA6IHRoaXMubGl0ZXJhbHMucGxhY2Vob2xkZXJTZWFyY2g7XG4gIH1cblxuICBnZXQgcGxhY2Vob2xkZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BsYWNlaG9sZGVyIHx8IHRoaXMubGl0ZXJhbHMucGxhY2Vob2xkZXJTZWFyY2g7XG4gIH1cblxuICBnZXQgaW5wdXRWYWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC52YWx1ZTtcbiAgfVxuXG4gIG9uQ2hhbmdlKGV2ZW50KSB7XG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh7IGV2ZW50OiBldmVudCwgW3RoaXMuZmllbGRWYWx1ZV06IHRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQudmFsdWUgfSk7XG4gIH1cblxuICBzZXRGb2N1cygpIHtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gIH1cblxuICBjbGVhbigpIHtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gICAgdGhpcy5jZC5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIGlzVHlwZW9mKG9iamVjdDogYW55LCB0eXBlOiBhbnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gdHlwZTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInBvLWZpZWxkLWNvbnRhaW5lci1jb250ZW50IHBvLWxpc3Rib3gtY29udGFpbmVyLXNlYXJjaFwiPlxuICA8ZGl2IGNsYXNzPVwicG8tZmllbGQtaWNvbi1jb250YWluZXItbGVmdFwiPlxuICAgIDxwby1pY29uIHAtaWNvbj1cIklDT05fU0VBUkNIXCIgY2xhc3M9XCJwby1maWVsZC1pY29uIHBvLWljb24taW5wdXRcIj48L3BvLWljb24+XG4gIDwvZGl2PlxuXG4gIDxpbnB1dFxuICAgICNpbnB1dEVsZW1lbnRcbiAgICBjbGFzcz1cInBvLWlucHV0IHBvLWlucHV0LWljb24tbGVmdCBwby1saXN0Ym94LXNlYXJjaC1pbnB1dFwiXG4gICAgdHlwZT1cInRleHRcIlxuICAgIFtwbGFjZWhvbGRlcl09XCJwbGFjZWhvbGRlclwiXG4gICAgKGtleXVwKT1cIm9uQ2hhbmdlKCRldmVudClcIlxuICAvPlxuPC9kaXY+XG4iXX0=