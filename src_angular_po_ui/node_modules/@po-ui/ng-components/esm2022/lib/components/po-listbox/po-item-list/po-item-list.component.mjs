import { Component, ViewChild } from '@angular/core';
import { PoItemListBaseComponent } from './po-item-list-base.component';
import { PoItemListFilterMode } from '../enums/po-item-list-filter-mode.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "@angular/common";
import * as i3 from "../../po-field/po-checkbox/po-checkbox.component";
import * as i4 from "../../po-icon/po-icon.component";
const _c0 = ["itemList"];
function PoItemListComponent_div_1_po_icon_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-icon", 8);
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("p-icon", ctx_r4.icon);
} }
function PoItemListComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 4, 5);
    i0.ɵɵtemplate(2, PoItemListComponent_div_1_po_icon_2_Template, 1, 1, "po-icon", 6);
    i0.ɵɵelementStart(3, "span", 7);
    i0.ɵɵtext(4);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-item-list__separator", ctx_r0.separator)("po-item-list__disabled", ctx_r0.disabled || !ctx_r0.visible)("po-item-list__selected", (ctx_r0.selected || ctx_r0.activeTabs) && !ctx_r0.disabled)("po-item-list__hidden", ctx_r0.tabHide)("po-item-list__danger", ctx_r0.danger);
    i0.ɵɵattribute("aria-disabled", ctx_r0.disabled || !ctx_r0.visible)("aria-label", ctx_r0.label);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.icon);
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r0.label);
} }
function PoItemListComponent_div_2_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 12);
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("innerHTML", ctx_r6.getLabelFormatted(ctx_r6.label), i0.ɵɵsanitizeHtml);
} }
function PoItemListComponent_div_2_ng_template_3_Template(rf, ctx) { }
const _c1 = a0 => ({ $implicit: a0 });
function PoItemListComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 9, 5);
    i0.ɵɵlistener("click", function PoItemListComponent_div_2_Template_div_click_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.onComboItem(ctx_r8.item, $event)); });
    i0.ɵɵtemplate(2, PoItemListComponent_div_2_span_2_Template, 1, 1, "span", 10)(3, PoItemListComponent_div_2_ng_template_3_Template, 0, 0, "ng-template", 11);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-item-list__separator", ctx_r1.separator)("po-item-list__selected", ctx_r1.selected && !ctx_r1.disabled);
    i0.ɵɵattribute("aria-disabled", ctx_r1.disabled)("aria-label", ctx_r1.label);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r1.template);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r1.template == null ? null : ctx_r1.template.templateRef)("ngTemplateOutletContext", i0.ɵɵpureFunction1(9, _c1, ctx_r1.templateContext));
} }
function PoItemListComponent_div_3_span_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 16);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(ctx_r10.label);
} }
function PoItemListComponent_div_3_ng_template_3_Template(rf, ctx) { }
function PoItemListComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r13 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 13);
    i0.ɵɵlistener("click", function PoItemListComponent_div_3_Template_div_click_0_listener() { i0.ɵɵrestoreView(_r13); const ctx_r12 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r12.onCheckboxItem()); })("keydown", function PoItemListComponent_div_3_Template_div_keydown_0_listener($event) { i0.ɵɵrestoreView(_r13); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.onCheckboxItemEmit($event)); })("keyup", function PoItemListComponent_div_3_Template_div_keyup_0_listener($event) { i0.ɵɵrestoreView(_r13); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.onCheckboxItemEmit($event)); });
    i0.ɵɵelement(1, "po-checkbox", 14);
    i0.ɵɵtemplate(2, PoItemListComponent_div_3_span_2_Template, 2, 1, "span", 15)(3, PoItemListComponent_div_3_ng_template_3_Template, 0, 0, "ng-template", 11);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵclassProp("po-item-list__separator", ctx_r2.separator)("po-item-list__selected", ctx_r2.selected && !ctx_r2.disabled)("po-item-list__disabled", ctx_r2.disabled);
    i0.ɵɵattribute("aria-disabled", ctx_r2.disabled)("aria-label", ctx_r2.label);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-disabled-tabindex", true)("p-checkboxValue", ctx_r2.checkboxValue === null ? "mixed" : ctx_r2.checkboxValue)("p-disabled", ctx_r2.disabled);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", !ctx_r2.template);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r2.template == null ? null : ctx_r2.template.templateRef)("ngTemplateOutletContext", i0.ɵɵpureFunction1(14, _c1, ctx_r2.templateContext));
} }
export class PoItemListComponent extends PoItemListBaseComponent {
    sanitized;
    itemList;
    selectedView;
    param;
    clickListener;
    constructor(sanitized) {
        super();
        this.sanitized = sanitized;
    }
    ngOnChanges(changes) {
        if (this.isTabs) {
            if (changes.tabHide?.currentValue || changes.disabled?.currentValue) {
                this.tabsItem.emit(this.item);
            }
            else if (changes.activeTabs?.currentValue) {
                this.emitActiveTabs(this.item);
            }
        }
    }
    onCheckboxItem() {
        const option = { [this.fieldValue]: this.value, [this.fieldLabel]: this.label };
        const selected = !this.checkboxValue;
        this.checkboxItem.emit({ option, selected });
    }
    onComboItem(options, event) {
        const option = { [this.fieldValue]: this.value, [this.fieldLabel]: this.label };
        this.selectedView = options;
        this.comboItem.emit({ ...option, event });
    }
    compareObjects(obj1, obj2) {
        return JSON.stringify(obj1) === JSON.stringify(obj2);
    }
    onCheckboxItemEmit(event) {
        if ((event && event.code === 'Enter') || event.code === 'Space') {
            this.onCheckboxItem();
        }
    }
    getLabelFormatted(label) {
        const sanitizedLabel = this.sanitizeTagHTML(label);
        let format = sanitizedLabel;
        if (this.isFiltering || this.validateForOptionsLabel()) {
            const labelInput = this.sanitizeTagHTML(this.searchValue.toString().toLowerCase());
            const labelLowerCase = sanitizedLabel.toLowerCase();
            const openTagBold = '<span class="po-font-text-large-bold">';
            const closeTagBold = '</span>';
            let startString;
            let middleString;
            let endString;
            switch (this.filterMode) {
                case PoItemListFilterMode.startsWith:
                case PoItemListFilterMode.contains:
                    const indexOfLabelInput = labelLowerCase.indexOf(labelInput);
                    if (indexOfLabelInput > -1) {
                        startString = sanitizedLabel.substring(0, indexOfLabelInput);
                        middleString = sanitizedLabel.substring(indexOfLabelInput, indexOfLabelInput + labelInput.length);
                        endString = sanitizedLabel.substring(indexOfLabelInput + labelInput.length);
                        format = startString + openTagBold + middleString + closeTagBold + endString;
                    }
                    break;
                case PoItemListFilterMode.endsWith:
                    const lastIndexOfLabelInput = labelLowerCase.lastIndexOf(labelInput);
                    if (lastIndexOfLabelInput > -1) {
                        startString = sanitizedLabel.substring(0, lastIndexOfLabelInput);
                        middleString = sanitizedLabel.substring(lastIndexOfLabelInput);
                        format = startString + openTagBold + middleString + closeTagBold;
                    }
                    break;
            }
        }
        return this.safeHtml(format);
    }
    validateForOptionsLabel() {
        return this.comboService && this.searchValue && !this.compareCache && this.shouldMarkLetters;
    }
    safeHtml(value) {
        return this.sanitized.bypassSecurityTrustHtml(value);
    }
    sanitizeTagHTML(value = '') {
        return value.replace(/\</gm, '&lt;').replace(/\>/g, '&gt;');
    }
    static ɵfac = function PoItemListComponent_Factory(t) { return new (t || PoItemListComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoItemListComponent, selectors: [["po-item-list"]], viewQuery: function PoItemListComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemList = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 4, vars: 3, consts: [[3, "ngSwitch", "keydown"], ["class", "po-item-list po-item-list__action", 3, "po-item-list__separator", "po-item-list__disabled", "po-item-list__selected", "po-item-list__hidden", "po-item-list__danger", 4, "ngSwitchDefault"], ["class", "po-item-list po-item-list__option", 3, "po-item-list__separator", "po-item-list__selected", "click", 4, "ngSwitchCase"], ["class", "po-item-list po-item-list__check", 3, "po-item-list__separator", "po-item-list__selected", "po-item-list__disabled", "click", "keydown", "keyup", 4, "ngSwitchCase"], [1, "po-item-list", "po-item-list__action"], ["itemList", ""], ["class", "po-popup-icon-item", 3, "p-icon", 4, "ngIf"], [1, "po-item-list-label"], [1, "po-popup-icon-item", 3, "p-icon"], [1, "po-item-list", "po-item-list__option", 3, "click"], ["class", "po-item-list-label", 3, "innerHTML", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "po-item-list-label", 3, "innerHTML"], [1, "po-item-list", "po-item-list__check", 3, "click", "keydown", "keyup"], [3, "p-disabled-tabindex", "p-checkboxValue", "p-disabled"], ["class", "po-item-list__label", 4, "ngIf"], [1, "po-item-list__label"]], template: function PoItemListComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementContainerStart(0, 0);
            i0.ɵɵlistener("keydown", function PoItemListComponent_Template_ng_container_keydown_0_listener($event) { return ctx.onCheckboxItemEmit($event); });
            i0.ɵɵtemplate(1, PoItemListComponent_div_1_Template, 5, 14, "div", 1)(2, PoItemListComponent_div_2_Template, 4, 11, "div", 2)(3, PoItemListComponent_div_3_Template, 4, 16, "div", 3);
            i0.ɵɵelementContainerEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("ngSwitch", ctx.type);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngSwitchCase", "option");
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngSwitchCase", "check");
        } }, dependencies: [i2.NgIf, i2.NgTemplateOutlet, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i3.PoCheckboxComponent, i4.PoIconComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoItemListComponent, [{
        type: Component,
        args: [{ selector: 'po-item-list', template: "<ng-container [ngSwitch]=\"type\" (keydown)=\"onCheckboxItemEmit($event)\">\n  <div\n    *ngSwitchDefault\n    #itemList\n    [class.po-item-list__separator]=\"separator\"\n    [class.po-item-list__disabled]=\"disabled || !visible\"\n    [class.po-item-list__selected]=\"(selected || activeTabs) && !disabled\"\n    [class.po-item-list__hidden]=\"tabHide\"\n    [attr.aria-disabled]=\"disabled || !visible\"\n    [attr.aria-label]=\"label\"\n    [class.po-item-list__danger]=\"danger\"\n    class=\"po-item-list po-item-list__action\"\n  >\n    <po-icon *ngIf=\"icon\" class=\"po-popup-icon-item\" [p-icon]=\"icon\"></po-icon>\n    <span class=\"po-item-list-label\">{{ label }}</span>\n  </div>\n\n  <div\n    *ngSwitchCase=\"'option'\"\n    #itemList\n    class=\"po-item-list po-item-list__option\"\n    [class.po-item-list__separator]=\"separator\"\n    [class.po-item-list__selected]=\"selected && !disabled\"\n    [attr.aria-disabled]=\"disabled\"\n    [attr.aria-label]=\"label\"\n    (click)=\"onComboItem(item, $event)\"\n  >\n    <span *ngIf=\"!template\" class=\"po-item-list-label\" [innerHTML]=\"getLabelFormatted(label)\"></span>\n\n    <ng-template [ngTemplateOutlet]=\"template?.templateRef\" [ngTemplateOutletContext]=\"{ $implicit: templateContext }\">\n    </ng-template>\n  </div>\n\n  <div\n    *ngSwitchCase=\"'check'\"\n    class=\"po-item-list po-item-list__check\"\n    [class.po-item-list__separator]=\"separator\"\n    [class.po-item-list__selected]=\"selected && !disabled\"\n    [class.po-item-list__disabled]=\"disabled\"\n    [attr.aria-disabled]=\"disabled\"\n    [attr.aria-label]=\"label\"\n    (click)=\"onCheckboxItem()\"\n    (keydown)=\"onCheckboxItemEmit($event)\"\n    (keyup)=\"onCheckboxItemEmit($event)\"\n  >\n    <po-checkbox\n      [p-disabled-tabindex]=\"true\"\n      [p-checkboxValue]=\"checkboxValue === null ? 'mixed' : checkboxValue\"\n      [p-disabled]=\"disabled\"\n    ></po-checkbox>\n\n    <span class=\"po-item-list__label\" *ngIf=\"!template\">{{ label }}</span>\n\n    <ng-template [ngTemplateOutlet]=\"template?.templateRef\" [ngTemplateOutletContext]=\"{ $implicit: templateContext }\">\n    </ng-template>\n  </div>\n</ng-container>\n" }]
    }], () => [{ type: i1.DomSanitizer }], { itemList: [{
            type: ViewChild,
            args: ['itemList', { static: true }]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoItemListComponent, { className: "PoItemListComponent", filePath: "lib/components/po-listbox/po-item-list/po-item-list.component.ts", lineNumber: 13 }); })();
//# sourceMappingURL=data:application/json;base64,