import { Component, EventEmitter, Output, ViewChild } from '@angular/core';
import { isExternalLink, isIE } from '../../../../utils/util';
import { poRichTextLiteralsDefault } from '../po-rich-text-literals';
import * as i0 from "@angular/core";
import * as i1 from "./../../../../services/po-language/po-language.service";
import * as i2 from "@angular/forms";
import * as i3 from "../../../po-modal/po-modal.component";
import * as i4 from "../../po-input/po-input.component";
import * as i5 from "../../po-url/po-url.component";
const _c0 = ["modal"];
const _c1 = ["modalLinkForm"];
export class PoRichTextLinkModalComponent {
    languageService;
    modal;
    modalLinkForm;
    command = new EventEmitter();
    linkEditing = new EventEmitter();
    savedCursorPosition;
    selection = document.getSelection();
    urlLink;
    urlLinkText;
    literals;
    modalCancelAction;
    modalConfirmAction;
    isLinkEditing;
    isSelectedLink;
    linkElement;
    savedSelection;
    constructor(languageService) {
        this.languageService = languageService;
        this.literals = {
            ...poRichTextLiteralsDefault[this.languageService?.getShortLanguage()]
        };
    }
    ngOnInit() {
        this.setModalCancelAction();
        this.setModalConfirmAction();
    }
    linkConfirmAction() {
        return this.isLinkEditing ? this.literals.editLink : this.literals.insertLink;
    }
    formModelValidate() {
        return (this.modalConfirmAction.disabled = this.modalLinkForm?.invalid);
    }
    openModal(selectedLinkElement) {
        this.saveCursorPosition();
        this.prepareModalForLink(selectedLinkElement);
        this.modalConfirmAction.label = this.linkConfirmAction();
        this.modal.open();
    }
    selectedLink(linkElement) {
        this.isSelectedLink = !!linkElement;
        this.linkElement = linkElement;
    }
    checkIfIsEmpty(urlLink, urlLinkText) {
        return urlLinkText === undefined || urlLinkText.trim() === '' ? urlLink : urlLinkText;
    }
    cleanUpFields() {
        this.urlLink = undefined;
        this.urlLinkText = undefined;
        this.isLinkEditing = false;
        this.isSelectedLink = false;
        this.linkElement = undefined;
    }
    formReset(control) {
        control.markAsPristine();
        control.markAsUntouched();
        control.updateValueAndValidity();
    }
    prepareModalForLink(selectedLinkElement) {
        this.saveSelectionText();
        if (this.modalLinkForm) {
            this.formReset(this.modalLinkForm.control);
        }
        setTimeout(() => {
            this.formModelValidate();
        });
        this.selectedLink(selectedLinkElement);
        if (this.isSelectedLink) {
            this.isLinkEditing = true;
            this.setLinkEditableForModal();
        }
        this.linkEditing.emit(this.isLinkEditing);
    }
    restoreSelection() {
        if (this.savedSelection) {
            if (this.selection) {
                this.selection.removeAllRanges();
                this.selection.addRange(this.savedSelection);
            }
            return true;
        }
        else {
            return false;
        }
    }
    retrieveCursorPosition() {
        this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);
    }
    saveCursorPosition() {
        this.savedCursorPosition = [this.selection.focusNode, this.selection.focusOffset];
    }
    saveSelectionText() {
        if (this.selection.anchorNode !== null) {
            this.savedSelection = this.selection.getRangeAt(0);
            this.urlLinkText = this.selection.toString();
        }
        else {
            return null;
        }
    }
    setLinkEditableForModal() {
        this.urlLinkText = this.linkElement.innerText;
        this.urlLink = this.linkElement.getAttribute('href');
    }
    setModalCancelAction() {
        this.modalCancelAction = {
            label: this.literals.cancel,
            action: () => {
                this.modal.close();
                this.command.emit();
                this.retrieveCursorPosition();
                this.cleanUpFields();
            }
        };
    }
    setModalConfirmAction() {
        this.modalConfirmAction = {
            label: this.linkConfirmAction(),
            disabled: true,
            action: () => (this.isLinkEditing ? this.toEditLink() : this.toInsertLink(this.urlLink, this.urlLinkText))
        };
    }
    toEditLink() {
        if (isIE()) {
            this.linkElement.parentNode.removeChild(this.linkElement);
        }
        else {
            this.linkElement.remove();
        }
        this.toInsertLink(this.urlLink, this.urlLinkText);
    }
    toInsertLink(urlLink, urlLinkText) {
        this.modal.close();
        this.restoreSelection();
        const urlLinkTextValue = this.checkIfIsEmpty(urlLink, urlLinkText);
        const urlAsExternalLink = isExternalLink(urlLink) ? urlLink : `http://${urlLink}`;
        const command = 'InsertHTML';
        const value = { urlLink: urlAsExternalLink, urlLinkText: urlLinkTextValue };
        this.command.emit({ command, value });
        this.cleanUpFields();
    }
    static ɵfac = function PoRichTextLinkModalComponent_Factory(t) { return new (t || PoRichTextLinkModalComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoRichTextLinkModalComponent, selectors: [["po-rich-text-link-modal"]], viewQuery: function PoRichTextLinkModalComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
            i0.ɵɵviewQuery(_c1, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalLinkForm = _t.first);
        } }, outputs: { command: "p-command", linkEditing: "p-link-editing" }, decls: 7, vars: 9, consts: [["p-hide-close", "", 3, "p-primary-action", "p-secondary-action", "p-title"], ["modal", ""], ["modalLinkForm", "ngForm"], [1, "po-row"], ["name", "urlLinkText", "p-optional", "", 1, "po-md-12", "po-mb-2", 3, "ngModel", "p-label", "p-placeholder", "ngModelChange"], ["name", "urlLink", "p-label", "Link", "p-required", "", 1, "po-md-12", 3, "ngModel", "p-help", "p-placeholder", "ngModelChange", "p-change-model"]], template: function PoRichTextLinkModalComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "po-modal", 0, 1)(2, "form", null, 2)(4, "div", 3)(5, "po-input", 4);
            i0.ɵɵtwoWayListener("ngModelChange", function PoRichTextLinkModalComponent_Template_po_input_ngModelChange_5_listener($event) { i0.ɵɵtwoWayBindingSet(ctx.urlLinkText, $event) || (ctx.urlLinkText = $event); return $event; });
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "po-url", 5);
            i0.ɵɵtwoWayListener("ngModelChange", function PoRichTextLinkModalComponent_Template_po_url_ngModelChange_6_listener($event) { i0.ɵɵtwoWayBindingSet(ctx.urlLink, $event) || (ctx.urlLink = $event); return $event; });
            i0.ɵɵlistener("p-change-model", function PoRichTextLinkModalComponent_Template_po_url_p_change_model_6_listener() { return ctx.formModelValidate(); });
            i0.ɵɵelementEnd()()()();
        } if (rf & 2) {
            i0.ɵɵproperty("p-primary-action", ctx.modalConfirmAction)("p-secondary-action", ctx.modalCancelAction)("p-title", ctx.linkConfirmAction());
            i0.ɵɵadvance(5);
            i0.ɵɵtwoWayProperty("ngModel", ctx.urlLinkText);
            i0.ɵɵproperty("p-label", ctx.literals.linkTextLabel)("p-placeholder", ctx.literals.linkTextLabel);
            i0.ɵɵadvance();
            i0.ɵɵtwoWayProperty("ngModel", ctx.urlLink);
            i0.ɵɵproperty("p-help", ctx.literals.linkUrlTextHelper)("p-placeholder", ctx.literals.linkUrlTextPlaceholder);
        } }, dependencies: [i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i3.PoModalComponent, i4.PoInputComponent, i5.PoUrlComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoRichTextLinkModalComponent, [{
        type: Component,
        args: [{ selector: 'po-rich-text-link-modal', template: "<po-modal\n  #modal\n  p-hide-close\n  [p-primary-action]=\"modalConfirmAction\"\n  [p-secondary-action]=\"modalCancelAction\"\n  [p-title]=\"linkConfirmAction()\"\n>\n  <form #modalLinkForm=\"ngForm\">\n    <div class=\"po-row\">\n      <po-input\n        class=\"po-md-12 po-mb-2\"\n        name=\"urlLinkText\"\n        [(ngModel)]=\"urlLinkText\"\n        p-optional\n        [p-label]=\"literals.linkTextLabel\"\n        [p-placeholder]=\"literals.linkTextLabel\"\n      >\n      </po-input>\n\n      <po-url\n        class=\"po-md-12\"\n        name=\"urlLink\"\n        [(ngModel)]=\"urlLink\"\n        p-label=\"Link\"\n        p-required\n        [p-help]=\"literals.linkUrlTextHelper\"\n        [p-placeholder]=\"literals.linkUrlTextPlaceholder\"\n        (p-change-model)=\"formModelValidate()\"\n      >\n      </po-url>\n    </div>\n  </form>\n</po-modal>\n" }]
    }], () => [{ type: i1.PoLanguageService }], { modal: [{
            type: ViewChild,
            args: ['modal', { static: true }]
        }], modalLinkForm: [{
            type: ViewChild,
            args: ['modalLinkForm']
        }], command: [{
            type: Output,
            args: ['p-command']
        }], linkEditing: [{
            type: Output,
            args: ['p-link-editing']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoRichTextLinkModalComponent, { className: "PoRichTextLinkModalComponent", filePath: "lib/components/po-field/po-rich-text/po-rich-text-link-modal/po-rich-text-link-modal.component.ts", lineNumber: 14 }); })();
//# sourceMappingURL=data:application/json;base64,