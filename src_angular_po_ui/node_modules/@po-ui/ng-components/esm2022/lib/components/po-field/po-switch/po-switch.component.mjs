import { ChangeDetectionStrategy, Component, forwardRef, Input, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { convertToBoolean, uuid } from '../../../utils/util';
import { PoFieldModel } from '../po-field.model';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { PoSwitchLabelPosition } from './po-switch-label-position.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../po-field-container/po-field-container-bottom/po-field-container-bottom.component";
import * as i3 from "../po-field-container/po-field-container.component";
import * as i4 from "../../po-label/po-label.component";
import * as i5 from "../../po-icon/po-icon.component";
const _c0 = ["switchContainer"];
function PoSwitchComponent_po_icon_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-icon", 10);
} }
function PoSwitchComponent_po_label_8_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-label", 11);
    i0.ɵɵlistener("click", function PoSwitchComponent_po_label_8_Template_po_label_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.eventClick()); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-disabled", ctx_r2.disabled)("p-label", ctx_r2.value === true ? ctx_r2.labelOn : ctx_r2.labelOff);
} }
/**
 * @docsExtends PoFieldModel
 *
 * @description
 *
 * O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.
 * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.
 *
 * Pode-se ligar ou desligar o switch utilizando a tecla de espaço ou o clique do mouse.
 *
 * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,
 * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.
 *
 * > O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.
 *
 * #### Boas práticas
 *
 * - Evite `labels` extensos que quebram o layout do `po-switch`, use `labels` diretos, curtos e intuitivos.
 *
 * #### Acessibilidade tratada no componente
 *
 * Algumas diretrizes de acessibilidade já são tratadas no componente, internamente, e não podem ser alteradas pelo proprietário do conteúdo. São elas:
 *
 * - Quando em foco, o switch é ativado usando a tecla de Espaço. [W3C WAI-ARIA 3.5 Switch - Keyboard Interaction](https://www.w3.org/WAI/ARIA/apg/patterns/switch/#keyboard-interaction-19)
 * - A área do foco precisar ter uma espessura de pelo menos 2 pixels CSS e o foco não pode ficar escondido por outros elementos da tela. [WCAG 2.4.12: Focus Appearance](https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance-enhanced)
 *
 * #### Tokens customizáveis
 *
 * É possível alterar o estilo do componente usando os seguintes tokens (CSS):
 *
 * > Para maiores informações, acesse o guia [Personalizando o Tema Padrão com Tokens CSS](https://po-ui.io/guides/theme-customization).
 *
 * | Propriedade                            | Descrição                                             | Valor Padrão                                    |
 * |----------------------------------------|-------------------------------------------------------|-------------------------------------------------|
 * | **Unchecked**                          |                                                       |                                                 |
 * | `--color-unchecked`                    | Cor principal no estado desmarcado                    | `var(--color-neutral-light-00)`                 |
 * | `--border-color`                       | Cor da borda                                          | `var(--color-neutral-dark-70)`                  |
 * | `--track-unchecked`                    | Cor principal da faixa no estado desmarcado           | `var(--color-neutral-light-20)`                 |
 * | **Checked**                            |                                                       |                                                 |
 * | `--color-checked`                      | Cor principal no estado selecionado                   | `var(--color-action-default)`                   |
 * | `--track-checked`                      | Cor da faixa no estado selecionado                    | `var(--color-brand-01-light)`                   |
 * | **Hover**                              |                                                       |                                                 |
 * | `--color-unchecked-hover`              | Cor principal no estado hover desmarcado              | `var(--color-action-pressed)`                   |
 * | `--color-checked-hover`                | Cor principal no estado hover marcado                 | `var(--color-action-pressed)`                   |
 * | **Focused**                            |                                                       |                                                 |
 * | `--outline-color-focused`              | Cor do outline do estado de focus                     | `var(--color-action-focus)`                     |
 * | **Disabled**                           |                                                       |                                                 |
 * | `--color-unchecked-disabled`           | Cor principal do disabled no estado desmarcado        | `var(--color-neutral-light-20)`                 |
 * | `--color-checked-disabled`             | Cor principal do disabled no estado marcado           | `var(--color-action-disabled)`                  |
 *
 *
 * @example
 *
 * <example name="po-switch-basic" title="PO Switch Basic">
 *   <file name="sample-po-switch-basic/sample-po-switch-basic.component.html"> </file>
 *   <file name="sample-po-switch-basic/sample-po-switch-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-switch-labs" title="PO Switch Labs">
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.html"> </file>
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.ts"> </file>
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts"> </file>
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-switch-order" title="PO Switch - Order Summary">
 *   <file name="sample-po-switch-order/sample-po-switch-order.component.html"> </file>
 *   <file name="sample-po-switch-order/sample-po-switch-order.component.ts"> </file>
 * </example>
 *
 * <example name="po-switch-order-reactive-form" title="PO Switch - Order Summary Reactive Form">
 *   <file name="sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html"> </file>
 *   <file name="sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts"> </file>
 * </example>
 */
export class PoSwitchComponent extends PoFieldModel {
    changeDetector;
    switchContainer;
    id = `po-switch[${uuid()}]`;
    // Parâmetro interno, não documentar
    value = false;
    _labelOff = 'false';
    _labelOn = 'true';
    _labelPosition = PoSwitchLabelPosition.Right;
    _formatModel = false;
    /**
     * @optional
     *
     * @description
     *
     * Indica se o `model` receberá o valor formatado pelas propriedades `p-label-on` e `p-label-off` ou
     * apenas o valor puro (sem formatação).
     *
     * > Por padrão será atribuído `false`.
     * @default `false`
     */
    set formatModel(format) {
        this._formatModel = format || false;
    }
    get formatModel() {
        return this._formatModel;
    }
    /**
     * @optional
     *
     * @description
     *
     * Posição de exibição do rótulo que fica ao lado do switch.
     *
     * > Por padrão exibe à direita.
     */
    set labelPosition(position) {
        this._labelPosition = position in PoSwitchLabelPosition ? parseInt(position, 10) : PoSwitchLabelPosition.Right;
    }
    get labelPosition() {
        return this._labelPosition;
    }
    /**
     * Texto exibido quando o valor do componente for `false`.
     *
     * @default `false`
     */
    set labelOff(label) {
        this._labelOff = label || 'false';
    }
    get labelOff() {
        return this._labelOff;
    }
    /**
     * Texto exibido quando o valor do componente for `true`.
     *
     * @default `true`
     */
    set labelOn(label) {
        this._labelOn = label || 'true';
    }
    get labelOn() {
        return this._labelOn;
    }
    constructor(changeDetector) {
        super();
        this.changeDetector = changeDetector;
    }
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoSwitchComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;
     *
     * focusSwitch() {
     *   this.switch.focus();
     * }
     * ```
     */
    focus() {
        if (!this.disabled) {
            this.switchContainer.nativeElement.focus();
        }
    }
    onBlur() {
        this.onTouched?.();
    }
    getLabelPosition() {
        switch (this.labelPosition) {
            case PoSwitchLabelPosition.Left:
                return 'left';
            case PoSwitchLabelPosition.Right:
                return 'right';
            default:
                return 'right';
        }
    }
    onKeyDown(event) {
        if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {
            event.preventDefault();
            this.eventClick();
        }
    }
    changeValue(value) {
        if (this.value !== value) {
            this.value = value;
            if (this.formatModel) {
                if (this.value) {
                    this.updateModel(this.labelOn);
                }
                else {
                    this.updateModel(this.labelOff);
                }
            }
            else {
                this.updateModel(value);
            }
            this.emitChange(this.value);
        }
    }
    eventClick() {
        if (!this.disabled) {
            this.changeValue(!this.value);
        }
    }
    onWriteValue(value) {
        if (value !== this.value) {
            if (this.formatModel && !!value) {
                this.value = value.toLowerCase() === this.labelOn.toLowerCase();
            }
            else {
                this.value = !!value;
            }
            this.changeDetector.markForCheck();
        }
    }
    static ɵfac = function PoSwitchComponent_Factory(t) { return new (t || PoSwitchComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoSwitchComponent, selectors: [["po-switch"]], viewQuery: function PoSwitchComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switchContainer = _t.first);
        } }, inputs: { value: [i0.ɵɵInputFlags.HasDecoratorInputTransform, "p-value", "value", convertToBoolean], formatModel: [i0.ɵɵInputFlags.HasDecoratorInputTransform, "p-format-model", "formatModel", convertToBoolean], labelPosition: [i0.ɵɵInputFlags.None, "p-label-position", "labelPosition"], labelOff: [i0.ɵɵInputFlags.None, "p-label-off", "labelOff"], labelOn: [i0.ɵɵInputFlags.None, "p-label-on", "labelOn"] }, features: [i0.ɵɵProvidersFeature([
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(() => PoSwitchComponent),
                    multi: true
                }
            ]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature], decls: 10, vars: 14, consts: [[3, "p-disabled", "p-id", "p-label"], [1, "po-field-container-content"], [1, "po-switch"], ["role", "switch", 1, "po-switch-container", 3, "id", "tabindex", "blur", "click", "keydown"], ["switchContainer", ""], [1, "po-switch-track"], [1, "po-switch-toggle"], ["class", "po-switch-icon", "p-icon", "ICON_OK", 4, "ngIf"], ["class", "po-switch-label", 3, "p-disabled", "p-label", "click", 4, "ngIf"], [3, "p-help", "p-disabled"], ["p-icon", "ICON_OK", 1, "po-switch-icon"], [1, "po-switch-label", 3, "p-disabled", "p-label", "click"]], template: function PoSwitchComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "po-field-container", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3, 4);
            i0.ɵɵlistener("blur", function PoSwitchComponent_Template_div_blur_3_listener() { return ctx.onBlur(); })("click", function PoSwitchComponent_Template_div_click_3_listener() { return ctx.eventClick(); })("keydown", function PoSwitchComponent_Template_div_keydown_3_listener($event) { return ctx.onKeyDown($event); });
            i0.ɵɵelementStart(5, "div", 5)(6, "div", 6);
            i0.ɵɵtemplate(7, PoSwitchComponent_po_icon_7_Template, 1, 0, "po-icon", 7);
            i0.ɵɵelementEnd()()();
            i0.ɵɵtemplate(8, PoSwitchComponent_po_label_8_Template, 1, 2, "po-label", 8);
            i0.ɵɵelementEnd()();
            i0.ɵɵelement(9, "po-field-container-bottom", 9);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("p-disabled", ctx.disabled)("p-id", ctx.id)("p-label", ctx.label);
            i0.ɵɵadvance();
            i0.ɵɵattribute("name", ctx.name);
            i0.ɵɵadvance();
            i0.ɵɵattribute("data-label-position", ctx.getLabelPosition());
            i0.ɵɵadvance();
            i0.ɵɵproperty("id", ctx.id)("tabindex", ctx.disabled ? -1 : 0);
            i0.ɵɵattribute("aria-checked", ctx.value)("aria-disabled", ctx.disabled);
            i0.ɵɵadvance(3);
            i0.ɵɵattribute("aria-label", ctx.value === true ? ctx.labelOn : ctx.labelOff);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.value === true);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.label);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-help", ctx.help)("p-disabled", ctx.disabled);
        } }, dependencies: [i1.NgIf, i2.PoFieldContainerBottomComponent, i3.PoFieldContainerComponent, i4.PoLabelComponent, i5.PoIconComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSwitchComponent, [{
        type: Component,
        args: [{ selector: 'po-switch', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoSwitchComponent),
                        multi: true
                    }
                ], template: "<po-field-container [p-disabled]=\"disabled\" [p-id]=\"id\" [p-label]=\"label\">\n  <div class=\"po-field-container-content\" [attr.name]=\"name\">\n    <div class=\"po-switch\" [attr.data-label-position]=\"getLabelPosition()\">\n      <div\n        #switchContainer\n        class=\"po-switch-container\"\n        role=\"switch\"\n        [attr.aria-checked]=\"value\"\n        [attr.aria-disabled]=\"disabled\"\n        [id]=\"id\"\n        [tabindex]=\"disabled ? -1 : 0\"\n        (blur)=\"onBlur()\"\n        (click)=\"eventClick()\"\n        (keydown)=\"onKeyDown($event)\"\n      >\n        <div class=\"po-switch-track\">\n          <div class=\"po-switch-toggle\" [attr.aria-label]=\"value === true ? labelOn : labelOff\">\n            <po-icon *ngIf=\"value === true\" class=\"po-switch-icon\" p-icon=\"ICON_OK\"></po-icon>\n          </div>\n        </div>\n      </div>\n\n      <po-label\n        *ngIf=\"label\"\n        class=\"po-switch-label\"\n        [p-disabled]=\"disabled\"\n        [p-label]=\"value === true ? labelOn : labelOff\"\n        (click)=\"eventClick()\"\n      >\n      </po-label>\n    </div>\n  </div>\n\n  <po-field-container-bottom [p-help]=\"help\" [p-disabled]=\"disabled\"></po-field-container-bottom>\n</po-field-container>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }], { switchContainer: [{
            type: ViewChild,
            args: ['switchContainer', { static: true }]
        }], value: [{
            type: Input,
            args: [{ alias: 'p-value', transform: convertToBoolean }]
        }], formatModel: [{
            type: Input,
            args: [{ alias: 'p-format-model', transform: convertToBoolean }]
        }], labelPosition: [{
            type: Input,
            args: ['p-label-position']
        }], labelOff: [{
            type: Input,
            args: ['p-label-off']
        }], labelOn: [{
            type: Input,
            args: ['p-label-on']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoSwitchComponent, { className: "PoSwitchComponent", filePath: "lib/components/po-field/po-switch/po-switch.component.ts", lineNumber: 105 }); })();
//# sourceMappingURL=data:application/json;base64,