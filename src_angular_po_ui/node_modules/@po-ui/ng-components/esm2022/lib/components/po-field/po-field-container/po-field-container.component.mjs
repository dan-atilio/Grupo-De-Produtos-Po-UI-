import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { convertToBoolean } from '../../../utils/util';
import { poFieldContainerLiterals } from './po-field-container-literals';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/po-language/po-language.service";
import * as i2 from "@angular/common";
import * as i3 from "../../po-label/po-label.component";
function PoFieldContainerComponent_po_label_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-label", 4);
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-disabled", ctx_r0.disabled)("p-for", ctx_r0.id)("p-label", ctx_r0.label)("p-requirement", ctx_r0.requirement);
} }
function PoFieldContainerComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 5);
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate(ctx_r1.help);
} }
const _c0 = ["*"];
/**
 * @docsPrivate
 *
 * Componente de uso interno, responsável por atribuir uma label para o campo
 */
export class PoFieldContainerComponent {
    /** Indica se o campo será desabilitado. */
    disabled;
    /** Identificador do campo */
    id;
    /** Label do campo. */
    label;
    /** Texto de apoio do campo. */
    help;
    literals;
    requirement;
    _optional = false;
    _required = false;
    /** Indica se o campo será opcional. */
    set optional(value) {
        this._optional = convertToBoolean(value);
    }
    get optional() {
        return this._optional;
    }
    /** Indica se o campo será obrigatório. */
    set required(value) {
        this._required = convertToBoolean(value);
    }
    get required() {
        return this._required;
    }
    /** Define se a indicação de campo obrigatório será exibida. */
    showRequired = false;
    constructor(languageService) {
        const language = languageService.getShortLanguage();
        this.literals = {
            ...poFieldContainerLiterals[language]
        };
    }
    ngOnInit() {
        this.setRequirement();
    }
    ngOnChanges(changes) {
        if (changes.help || changes.label || changes.optional || changes.required || changes.showRequired) {
            this.setRequirement();
        }
    }
    setRequirement() {
        if (this.label || this.help) {
            if (!this.required && this.optional) {
                this.requirement = this.literals['optional'];
            }
            else if (this.required && this.showRequired) {
                this.requirement = this.literals['required'];
            }
            else {
                this.requirement = undefined;
            }
        }
    }
    static ɵfac = function PoFieldContainerComponent_Factory(t) { return new (t || PoFieldContainerComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoFieldContainerComponent, selectors: [["po-field-container"]], inputs: { disabled: [i0.ɵɵInputFlags.None, "p-disabled", "disabled"], id: [i0.ɵɵInputFlags.None, "p-id", "id"], label: [i0.ɵɵInputFlags.None, "p-label", "label"], help: [i0.ɵɵInputFlags.None, "p-help", "help"], optional: [i0.ɵɵInputFlags.None, "p-optional", "optional"], required: [i0.ɵɵInputFlags.None, "p-required", "required"], showRequired: [i0.ɵɵInputFlags.None, "p-show-required", "showRequired"] }, features: [i0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 5, vars: 2, consts: [[1, "po-field-container"], [1, "po-field-container-title"], ["p-field", "true", 3, "p-disabled", "p-for", "p-label", "p-requirement", 4, "ngIf"], ["class", "po-field-help", 4, "ngIf"], ["p-field", "true", 3, "p-disabled", "p-for", "p-label", "p-requirement"], [1, "po-field-help"]], template: function PoFieldContainerComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵelementStart(0, "div", 0)(1, "div", 1);
            i0.ɵɵtemplate(2, PoFieldContainerComponent_po_label_2_Template, 1, 4, "po-label", 2);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(3, PoFieldContainerComponent_div_3_Template, 2, 1, "div", 3);
            i0.ɵɵprojection(4);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.label || ctx.help);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.help);
        } }, dependencies: [i2.NgIf, i3.PoLabelComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoFieldContainerComponent, [{
        type: Component,
        args: [{ selector: 'po-field-container', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"po-field-container\">\n  <div class=\"po-field-container-title\">\n    <po-label\n      *ngIf=\"label || help\"\n      [p-disabled]=\"disabled\"\n      p-field=\"true\"\n      [p-for]=\"id\"\n      [p-label]=\"label\"\n      [p-requirement]=\"requirement\"\n    ></po-label>\n  </div>\n\n  <div class=\"po-field-help\" *ngIf=\"help\">{{ help }}</div>\n\n  <ng-content></ng-content>\n</div>\n" }]
    }], () => [{ type: i1.PoLanguageService }], { disabled: [{
            type: Input,
            args: ['p-disabled']
        }], id: [{
            type: Input,
            args: ['p-id']
        }], label: [{
            type: Input,
            args: ['p-label']
        }], help: [{
            type: Input,
            args: ['p-help']
        }], optional: [{
            type: Input,
            args: ['p-optional']
        }], required: [{
            type: Input,
            args: ['p-required']
        }], showRequired: [{
            type: Input,
            args: ['p-show-required']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoFieldContainerComponent, { className: "PoFieldContainerComponent", filePath: "lib/components/po-field/po-field-container/po-field-container.component.ts", lineNumber: 17 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZmllbGQtY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1maWVsZC9wby1maWVsZC1jb250YWluZXIvcG8tZmllbGQtY29udGFpbmVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1maWVsZC9wby1maWVsZC1jb250YWluZXIvcG8tZmllbGQtY29udGFpbmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFvQyxNQUFNLGVBQWUsQ0FBQztBQUU1RyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV2RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7O0lDRnJFLDhCQU9ZOzs7SUFMViw0Q0FBdUIsb0JBQUEseUJBQUEscUNBQUE7OztJQVEzQiw4QkFBd0M7SUFBQSxZQUFVO0lBQUEsaUJBQU07OztJQUFoQixjQUFVO0lBQVYsaUNBQVU7OztBRE5wRDs7OztHQUlHO0FBTUgsTUFBTSxPQUFPLHlCQUF5QjtJQUNwQywyQ0FBMkM7SUFDdEIsUUFBUSxDQUFVO0lBRXZDLDZCQUE2QjtJQUNkLEVBQUUsQ0FBUztJQUUxQixzQkFBc0I7SUFDSixLQUFLLENBQVU7SUFFakMsK0JBQStCO0lBQ2QsSUFBSSxDQUFTO0lBRTlCLFFBQVEsQ0FBUztJQUNqQixXQUFXLENBQVM7SUFFWixTQUFTLEdBQVksS0FBSyxDQUFDO0lBQzNCLFNBQVMsR0FBWSxLQUFLLENBQUM7SUFFbkMsdUNBQXVDO0lBQ3ZDLElBQXlCLFFBQVEsQ0FBQyxLQUFjO1FBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQsMENBQTBDO0lBQzFDLElBQXlCLFFBQVEsQ0FBQyxLQUFjO1FBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQsK0RBQStEO0lBQ3JDLFlBQVksR0FBWSxLQUFLLENBQUM7SUFFeEQsWUFBWSxlQUFrQztRQUM1QyxNQUFNLFFBQVEsR0FBRyxlQUFlLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUVwRCxJQUFJLENBQUMsUUFBUSxHQUFHO1lBQ2QsR0FBRyx3QkFBd0IsQ0FBQyxRQUFRLENBQUM7U0FDdEMsQ0FBQztJQUNKLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxLQUFLLElBQUksT0FBTyxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDakcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3ZCO0lBQ0gsQ0FBQztJQUVPLGNBQWM7UUFDcEIsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQzlDO2lCQUFNLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO2dCQUM3QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDOUM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7YUFDOUI7U0FDRjtJQUNILENBQUM7bUZBcEVVLHlCQUF5Qjs2REFBekIseUJBQXlCOztZQ2hCdEMsOEJBQWdDLGFBQUE7WUFFNUIsb0ZBT1k7WUFDZCxpQkFBTTtZQUVOLDBFQUF3RDtZQUV4RCxrQkFBeUI7WUFDM0IsaUJBQU07O1lBWkMsZUFBbUI7WUFBbkIsNENBQW1CO1lBU0ksY0FBVTtZQUFWLCtCQUFVOzs7aUZESTNCLHlCQUF5QjtjQUxyQyxTQUFTOzJCQUNFLG9CQUFvQixtQkFFYix1QkFBdUIsQ0FBQyxNQUFNO2tEQUkxQixRQUFRO2tCQUE1QixLQUFLO21CQUFDLFlBQVk7WUFHSixFQUFFO2tCQUFoQixLQUFLO21CQUFDLE1BQU07WUFHSyxLQUFLO2tCQUF0QixLQUFLO21CQUFDLFNBQVM7WUFHQyxJQUFJO2tCQUFwQixLQUFLO21CQUFDLFFBQVE7WUFTVSxRQUFRO2tCQUFoQyxLQUFLO21CQUFDLFlBQVk7WUFTTSxRQUFRO2tCQUFoQyxLQUFLO21CQUFDLFlBQVk7WUFTTyxZQUFZO2tCQUFyQyxLQUFLO21CQUFDLGlCQUFpQjs7a0ZBdENiLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9Cb29sZWFuIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgeyBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgcG9GaWVsZENvbnRhaW5lckxpdGVyYWxzIH0gZnJvbSAnLi9wby1maWVsZC1jb250YWluZXItbGl0ZXJhbHMnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIENvbXBvbmVudGUgZGUgdXNvIGludGVybm8sIHJlc3BvbnPDoXZlbCBwb3IgYXRyaWJ1aXIgdW1hIGxhYmVsIHBhcmEgbyBjYW1wb1xuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1maWVsZC1jb250YWluZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tZmllbGQtY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9GaWVsZENvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgLyoqIEluZGljYSBzZSBvIGNhbXBvIHNlcsOhIGRlc2FiaWxpdGFkby4gKi9cbiAgQElucHV0KCdwLWRpc2FibGVkJykgZGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgLyoqIElkZW50aWZpY2Fkb3IgZG8gY2FtcG8gKi9cbiAgQElucHV0KCdwLWlkJykgaWQ6IHN0cmluZztcblxuICAvKiogTGFiZWwgZG8gY2FtcG8uICovXG4gIEBJbnB1dCgncC1sYWJlbCcpIGxhYmVsPzogc3RyaW5nO1xuXG4gIC8qKiBUZXh0byBkZSBhcG9pbyBkbyBjYW1wby4gKi9cbiAgQElucHV0KCdwLWhlbHAnKSBoZWxwOiBzdHJpbmc7XG5cbiAgbGl0ZXJhbHM6IG9iamVjdDtcbiAgcmVxdWlyZW1lbnQ6IHN0cmluZztcblxuICBwcml2YXRlIF9vcHRpb25hbDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9yZXF1aXJlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBJbmRpY2Egc2UgbyBjYW1wbyBzZXLDoSBvcGNpb25hbC4gKi9cbiAgQElucHV0KCdwLW9wdGlvbmFsJykgc2V0IG9wdGlvbmFsKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fb3B0aW9uYWwgPSBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBvcHRpb25hbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9uYWw7XG4gIH1cblxuICAvKiogSW5kaWNhIHNlIG8gY2FtcG8gc2Vyw6Egb2JyaWdhdMOzcmlvLiAqL1xuICBASW5wdXQoJ3AtcmVxdWlyZWQnKSBzZXQgcmVxdWlyZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9yZXF1aXJlZCA9IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IHJlcXVpcmVkKCkge1xuICAgIHJldHVybiB0aGlzLl9yZXF1aXJlZDtcbiAgfVxuXG4gIC8qKiBEZWZpbmUgc2UgYSBpbmRpY2HDp8OjbyBkZSBjYW1wbyBvYnJpZ2F0w7NyaW8gc2Vyw6EgZXhpYmlkYS4gKi9cbiAgQElucHV0KCdwLXNob3ctcmVxdWlyZWQnKSBzaG93UmVxdWlyZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihsYW5ndWFnZVNlcnZpY2U6IFBvTGFuZ3VhZ2VTZXJ2aWNlKSB7XG4gICAgY29uc3QgbGFuZ3VhZ2UgPSBsYW5ndWFnZVNlcnZpY2UuZ2V0U2hvcnRMYW5ndWFnZSgpO1xuXG4gICAgdGhpcy5saXRlcmFscyA9IHtcbiAgICAgIC4uLnBvRmllbGRDb250YWluZXJMaXRlcmFsc1tsYW5ndWFnZV1cbiAgICB9O1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5zZXRSZXF1aXJlbWVudCgpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLmhlbHAgfHwgY2hhbmdlcy5sYWJlbCB8fCBjaGFuZ2VzLm9wdGlvbmFsIHx8IGNoYW5nZXMucmVxdWlyZWQgfHwgY2hhbmdlcy5zaG93UmVxdWlyZWQpIHtcbiAgICAgIHRoaXMuc2V0UmVxdWlyZW1lbnQoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldFJlcXVpcmVtZW50KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxhYmVsIHx8IHRoaXMuaGVscCkge1xuICAgICAgaWYgKCF0aGlzLnJlcXVpcmVkICYmIHRoaXMub3B0aW9uYWwpIHtcbiAgICAgICAgdGhpcy5yZXF1aXJlbWVudCA9IHRoaXMubGl0ZXJhbHNbJ29wdGlvbmFsJ107XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucmVxdWlyZWQgJiYgdGhpcy5zaG93UmVxdWlyZWQpIHtcbiAgICAgICAgdGhpcy5yZXF1aXJlbWVudCA9IHRoaXMubGl0ZXJhbHNbJ3JlcXVpcmVkJ107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJlcXVpcmVtZW50ID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInBvLWZpZWxkLWNvbnRhaW5lclwiPlxuICA8ZGl2IGNsYXNzPVwicG8tZmllbGQtY29udGFpbmVyLXRpdGxlXCI+XG4gICAgPHBvLWxhYmVsXG4gICAgICAqbmdJZj1cImxhYmVsIHx8IGhlbHBcIlxuICAgICAgW3AtZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgICAgcC1maWVsZD1cInRydWVcIlxuICAgICAgW3AtZm9yXT1cImlkXCJcbiAgICAgIFtwLWxhYmVsXT1cImxhYmVsXCJcbiAgICAgIFtwLXJlcXVpcmVtZW50XT1cInJlcXVpcmVtZW50XCJcbiAgICA+PC9wby1sYWJlbD5cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cInBvLWZpZWxkLWhlbHBcIiAqbmdJZj1cImhlbHBcIj57eyBoZWxwIH19PC9kaXY+XG5cbiAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuPC9kaXY+XG4iXX0=