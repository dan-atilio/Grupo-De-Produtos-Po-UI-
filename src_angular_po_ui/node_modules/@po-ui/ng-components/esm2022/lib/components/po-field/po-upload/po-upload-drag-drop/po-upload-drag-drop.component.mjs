import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { convertToInt } from '../../../../utils/util';
import { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./po-upload-drag-drop.directive";
import * as i3 from "./po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component";
import * as i4 from "./po-upload-drag-drop-area/po-upload-drag-drop-area.component";
const _c0 = ["dragDropOverlay"];
function PoUploadDragDropComponent_po_upload_drag_drop_area_overlay_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-upload-drag-drop-area-overlay", 2, 3);
    i0.ɵɵlistener("p-area-element", function PoUploadDragDropComponent_po_upload_drag_drop_area_overlay_0_Template_po_upload_drag_drop_area_overlay_p_area_element_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onAreaElement($event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-directory-compatible", ctx_r0.directoryCompatible)("p-disabled", ctx_r0.disabled)("p-literals", ctx_r0.literals)("p-target", ctx_r0.dragDropAreaComponent.elementRef);
} }
const PoUploadDragDropHeightDefault = 320;
const PoUploadDragDropHeightMin = 160;
export class PoUploadDragDropComponent {
    changeDetector;
    dragDropOverlayElement;
    dragDropAreaComponent;
    directoryCompatible;
    disabled;
    literals;
    fileChange = new EventEmitter();
    selectFiles = new EventEmitter();
    areaElement;
    isDragOver = false;
    _dragDropHeight = PoUploadDragDropHeightDefault;
    set dragDropHeight(value) {
        const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);
        this._dragDropHeight = dragDropHeight < PoUploadDragDropHeightMin ? PoUploadDragDropHeightMin : dragDropHeight;
    }
    get dragDropHeight() {
        return this._dragDropHeight;
    }
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
    }
    focus() {
        this.dragDropAreaComponent.focus();
    }
    onAreaElement(element) {
        this.areaElement = element;
        // necessário para não ocorrer o erro HasBeenChecked
        this.changeDetector.detectChanges();
    }
    onDragLeave() {
        this.isDragOver = false;
    }
    onDragOver() {
        this.isDragOver = true;
    }
    onFileChange(files) {
        this.isDragOver = false;
        this.fileChange.emit(files);
    }
    static ɵfac = function PoUploadDragDropComponent_Factory(t) { return new (t || PoUploadDragDropComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoUploadDragDropComponent, selectors: [["po-upload-drag-drop"]], viewQuery: function PoUploadDragDropComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5, ElementRef);
            i0.ɵɵviewQuery(PoUploadDragDropAreaComponent, 7);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dragDropOverlayElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dragDropAreaComponent = _t.first);
        } }, inputs: { directoryCompatible: [i0.ɵɵInputFlags.None, "p-directory-compatible", "directoryCompatible"], disabled: [i0.ɵɵInputFlags.None, "p-disabled", "disabled"], literals: [i0.ɵɵInputFlags.None, "p-literals", "literals"], dragDropHeight: [i0.ɵɵInputFlags.None, "p-drag-drop-height", "dragDropHeight"] }, outputs: { fileChange: "p-file-change", selectFiles: "p-select-files" }, decls: 2, vars: 7, consts: [[3, "p-directory-compatible", "p-disabled", "p-literals", "p-target", "p-area-element", 4, "ngIf"], ["p-upload-drag-drop", "", 3, "p-area-element", "p-directory-compatible", "p-disabled", "p-height", "p-literals", "p-overlay", "p-drag-leave", "p-drag-over", "p-file-change", "p-select-files"], [3, "p-directory-compatible", "p-disabled", "p-literals", "p-target", "p-area-element"], ["dragDropOverlay", ""]], template: function PoUploadDragDropComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, PoUploadDragDropComponent_po_upload_drag_drop_area_overlay_0_Template, 2, 4, "po-upload-drag-drop-area-overlay", 0);
            i0.ɵɵelementStart(1, "po-upload-drag-drop-area", 1);
            i0.ɵɵlistener("p-drag-leave", function PoUploadDragDropComponent_Template_po_upload_drag_drop_area_p_drag_leave_1_listener() { return ctx.onDragLeave(); })("p-drag-over", function PoUploadDragDropComponent_Template_po_upload_drag_drop_area_p_drag_over_1_listener() { return ctx.onDragOver(); })("p-file-change", function PoUploadDragDropComponent_Template_po_upload_drag_drop_area_p_file_change_1_listener($event) { return ctx.onFileChange($event); })("p-select-files", function PoUploadDragDropComponent_Template_po_upload_drag_drop_area_p_select_files_1_listener() { return ctx.selectFiles.emit(); });
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("ngIf", ctx.isDragOver);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-area-element", ctx.areaElement)("p-directory-compatible", ctx.directoryCompatible)("p-disabled", ctx.disabled)("p-height", ctx.dragDropHeight)("p-literals", ctx.literals)("p-overlay", false);
        } }, dependencies: [i1.NgIf, i2.PoUploadDragDropDirective, i3.PoUploadDragDropAreaOverlayComponent, i4.PoUploadDragDropAreaComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoUploadDragDropComponent, [{
        type: Component,
        args: [{ selector: 'po-upload-drag-drop', changeDetection: ChangeDetectionStrategy.OnPush, template: "<po-upload-drag-drop-area-overlay\n  #dragDropOverlay\n  *ngIf=\"isDragOver\"\n  [p-directory-compatible]=\"directoryCompatible\"\n  [p-disabled]=\"disabled\"\n  [p-literals]=\"literals\"\n  [p-target]=\"dragDropAreaComponent.elementRef\"\n  (p-area-element)=\"onAreaElement($event)\"\n>\n</po-upload-drag-drop-area-overlay>\n\n<po-upload-drag-drop-area\n  p-upload-drag-drop\n  [p-area-element]=\"areaElement\"\n  [p-directory-compatible]=\"directoryCompatible\"\n  [p-disabled]=\"disabled\"\n  [p-height]=\"dragDropHeight\"\n  [p-literals]=\"literals\"\n  [p-overlay]=\"false\"\n  (p-drag-leave)=\"onDragLeave()\"\n  (p-drag-over)=\"onDragOver()\"\n  (p-file-change)=\"onFileChange($event)\"\n  (p-select-files)=\"selectFiles.emit()\"\n>\n</po-upload-drag-drop-area>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }], { dragDropOverlayElement: [{
            type: ViewChild,
            args: ['dragDropOverlay', { read: ElementRef }]
        }], dragDropAreaComponent: [{
            type: ViewChild,
            args: [PoUploadDragDropAreaComponent, { static: true }]
        }], directoryCompatible: [{
            type: Input,
            args: ['p-directory-compatible']
        }], disabled: [{
            type: Input,
            args: ['p-disabled']
        }], literals: [{
            type: Input,
            args: ['p-literals']
        }], fileChange: [{
            type: Output,
            args: ['p-file-change']
        }], selectFiles: [{
            type: Output,
            args: ['p-select-files']
        }], dragDropHeight: [{
            type: Input,
            args: ['p-drag-drop-height']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoUploadDragDropComponent, { className: "PoUploadDragDropComponent", filePath: "lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.component.ts", lineNumber: 25 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1kcmFnLWRyb3AvcG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1kcmFnLWRyb3AvcG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBRXZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSwrREFBK0QsQ0FBQzs7Ozs7Ozs7O0lDYjlHLDhEQVFDO0lBREMscVBBQWtCLGVBQUEsNEJBQXFCLENBQUEsSUFBQztJQUUxQyxpQkFBbUM7OztJQU5qQyxtRUFBOEMsK0JBQUEsK0JBQUEscURBQUE7O0FEYWhELE1BQU0sNkJBQTZCLEdBQUcsR0FBRyxDQUFDO0FBQzFDLE1BQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDO0FBT3RDLE1BQU0sT0FBTyx5QkFBeUI7SUE2QmhCO0lBNUJnQyxzQkFBc0IsQ0FBYTtJQUMzQixxQkFBcUIsQ0FBZ0M7SUFFaEYsbUJBQW1CLENBQVU7SUFFekMsUUFBUSxDQUFVO0lBRWxCLFFBQVEsQ0FBbUI7SUFFdkIsVUFBVSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRXZELFdBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUVuRixXQUFXLENBQWM7SUFDekIsVUFBVSxHQUFZLEtBQUssQ0FBQztJQUVwQixlQUFlLEdBQVksNkJBQTZCLENBQUM7SUFFakUsSUFBaUMsY0FBYyxDQUFDLEtBQWE7UUFDM0QsTUFBTSxjQUFjLEdBQUcsWUFBWSxDQUFDLEtBQUssRUFBRSw2QkFBNkIsQ0FBQyxDQUFDO1FBRTFFLElBQUksQ0FBQyxlQUFlLEdBQUcsY0FBYyxHQUFHLHlCQUF5QixDQUFDLENBQUMsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDO0lBQ2pILENBQUM7SUFFRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7SUFFRCxZQUFvQixjQUFpQztRQUFqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7SUFBRyxDQUFDO0lBRXpELEtBQUs7UUFDSCxJQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELGFBQWEsQ0FBQyxPQUFvQjtRQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQztRQUUzQixvREFBb0Q7UUFDcEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFLO1FBQ2hCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBRXhCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlCLENBQUM7bUZBdERVLHlCQUF5Qjs2REFBekIseUJBQXlCO21DQUNFLFVBQVU7MkJBQ3JDLDZCQUE2Qjs7Ozs7O1lDMUIxQyxvSUFTbUM7WUFFbkMsbURBWUM7WUFKQyxzSUFBZ0IsaUJBQWEsSUFBQyx1SEFDZixnQkFBWSxJQURHLGlJQUViLHdCQUFvQixJQUZQLDZIQUdaLHNCQUFrQixJQUhOO1lBS2hDLGlCQUEyQjs7WUF0QnhCLHFDQUFnQjtZQVdqQixjQUE4QjtZQUE5QixnREFBOEIsbURBQUEsNEJBQUEsZ0NBQUEsNEJBQUEsb0JBQUE7OztpRkRXbkIseUJBQXlCO2NBTHJDLFNBQVM7MkJBQ0UscUJBQXFCLG1CQUVkLHVCQUF1QixDQUFDLE1BQU07a0RBR0ssc0JBQXNCO2tCQUF6RSxTQUFTO21CQUFDLGlCQUFpQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUNVLHFCQUFxQjtrQkFBaEYsU0FBUzttQkFBQyw2QkFBNkIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7WUFFekIsbUJBQW1CO2tCQUFuRCxLQUFLO21CQUFDLHdCQUF3QjtZQUVWLFFBQVE7a0JBQTVCLEtBQUs7bUJBQUMsWUFBWTtZQUVFLFFBQVE7a0JBQTVCLEtBQUs7bUJBQUMsWUFBWTtZQUVNLFVBQVU7a0JBQWxDLE1BQU07bUJBQUMsZUFBZTtZQUVHLFdBQVc7a0JBQXBDLE1BQU07bUJBQUMsZ0JBQWdCO1lBT1MsY0FBYztrQkFBOUMsS0FBSzttQkFBQyxvQkFBb0I7O2tGQW5CaEIseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb252ZXJ0VG9JbnQgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy91dGlsJztcblxuaW1wb3J0IHsgUG9VcGxvYWREcmFnRHJvcEFyZWFDb21wb25lbnQgfSBmcm9tICcuL3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEuY29tcG9uZW50JztcbmltcG9ydCB7IFBvVXBsb2FkTGl0ZXJhbHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXVwbG9hZC1saXRlcmFscy5pbnRlcmZhY2UnO1xuXG5jb25zdCBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0RGVmYXVsdCA9IDMyMDtcbmNvbnN0IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHRNaW4gPSAxNjA7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXVwbG9hZC1kcmFnLWRyb3AnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvVXBsb2FkRHJhZ0Ryb3BDb21wb25lbnQge1xuICBAVmlld0NoaWxkKCdkcmFnRHJvcE92ZXJsYXknLCB7IHJlYWQ6IEVsZW1lbnRSZWYgfSkgZHJhZ0Ryb3BPdmVybGF5RWxlbWVudDogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZChQb1VwbG9hZERyYWdEcm9wQXJlYUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgZHJhZ0Ryb3BBcmVhQ29tcG9uZW50OiBQb1VwbG9hZERyYWdEcm9wQXJlYUNvbXBvbmVudDtcblxuICBASW5wdXQoJ3AtZGlyZWN0b3J5LWNvbXBhdGlibGUnKSBkaXJlY3RvcnlDb21wYXRpYmxlOiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1saXRlcmFscycpIGxpdGVyYWxzOiBQb1VwbG9hZExpdGVyYWxzO1xuXG4gIEBPdXRwdXQoJ3AtZmlsZS1jaGFuZ2UnKSBmaWxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIEBPdXRwdXQoJ3Atc2VsZWN0LWZpbGVzJykgc2VsZWN0RmlsZXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgYXJlYUVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICBpc0RyYWdPdmVyOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBfZHJhZ0Ryb3BIZWlnaHQ/OiBudW1iZXIgPSBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0RGVmYXVsdDtcblxuICBASW5wdXQoJ3AtZHJhZy1kcm9wLWhlaWdodCcpIHNldCBkcmFnRHJvcEhlaWdodCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgY29uc3QgZHJhZ0Ryb3BIZWlnaHQgPSBjb252ZXJ0VG9JbnQodmFsdWUsIFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHREZWZhdWx0KTtcblxuICAgIHRoaXMuX2RyYWdEcm9wSGVpZ2h0ID0gZHJhZ0Ryb3BIZWlnaHQgPCBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0TWluID8gUG9VcGxvYWREcmFnRHJvcEhlaWdodE1pbiA6IGRyYWdEcm9wSGVpZ2h0O1xuICB9XG5cbiAgZ2V0IGRyYWdEcm9wSGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLl9kcmFnRHJvcEhlaWdodDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIGZvY3VzKCkge1xuICAgIHRoaXMuZHJhZ0Ryb3BBcmVhQ29tcG9uZW50LmZvY3VzKCk7XG4gIH1cblxuICBvbkFyZWFFbGVtZW50KGVsZW1lbnQ6IEhUTUxFbGVtZW50KSB7XG4gICAgdGhpcy5hcmVhRWxlbWVudCA9IGVsZW1lbnQ7XG5cbiAgICAvLyBuZWNlc3PDoXJpbyBwYXJhIG7Do28gb2NvcnJlciBvIGVycm8gSGFzQmVlbkNoZWNrZWRcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIG9uRHJhZ0xlYXZlKCkge1xuICAgIHRoaXMuaXNEcmFnT3ZlciA9IGZhbHNlO1xuICB9XG5cbiAgb25EcmFnT3ZlcigpIHtcbiAgICB0aGlzLmlzRHJhZ092ZXIgPSB0cnVlO1xuICB9XG5cbiAgb25GaWxlQ2hhbmdlKGZpbGVzKSB7XG4gICAgdGhpcy5pc0RyYWdPdmVyID0gZmFsc2U7XG5cbiAgICB0aGlzLmZpbGVDaGFuZ2UuZW1pdChmaWxlcyk7XG4gIH1cbn1cbiIsIjxwby11cGxvYWQtZHJhZy1kcm9wLWFyZWEtb3ZlcmxheVxuICAjZHJhZ0Ryb3BPdmVybGF5XG4gICpuZ0lmPVwiaXNEcmFnT3ZlclwiXG4gIFtwLWRpcmVjdG9yeS1jb21wYXRpYmxlXT1cImRpcmVjdG9yeUNvbXBhdGlibGVcIlxuICBbcC1kaXNhYmxlZF09XCJkaXNhYmxlZFwiXG4gIFtwLWxpdGVyYWxzXT1cImxpdGVyYWxzXCJcbiAgW3AtdGFyZ2V0XT1cImRyYWdEcm9wQXJlYUNvbXBvbmVudC5lbGVtZW50UmVmXCJcbiAgKHAtYXJlYS1lbGVtZW50KT1cIm9uQXJlYUVsZW1lbnQoJGV2ZW50KVwiXG4+XG48L3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5PlxuXG48cG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhXG4gIHAtdXBsb2FkLWRyYWctZHJvcFxuICBbcC1hcmVhLWVsZW1lbnRdPVwiYXJlYUVsZW1lbnRcIlxuICBbcC1kaXJlY3RvcnktY29tcGF0aWJsZV09XCJkaXJlY3RvcnlDb21wYXRpYmxlXCJcbiAgW3AtZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICBbcC1oZWlnaHRdPVwiZHJhZ0Ryb3BIZWlnaHRcIlxuICBbcC1saXRlcmFsc109XCJsaXRlcmFsc1wiXG4gIFtwLW92ZXJsYXldPVwiZmFsc2VcIlxuICAocC1kcmFnLWxlYXZlKT1cIm9uRHJhZ0xlYXZlKClcIlxuICAocC1kcmFnLW92ZXIpPVwib25EcmFnT3ZlcigpXCJcbiAgKHAtZmlsZS1jaGFuZ2UpPVwib25GaWxlQ2hhbmdlKCRldmVudClcIlxuICAocC1zZWxlY3QtZmlsZXMpPVwic2VsZWN0RmlsZXMuZW1pdCgpXCJcbj5cbjwvcG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhPlxuIl19