import { ChangeDetectionStrategy, Component, EventEmitter, forwardRef, HostListener, Input, Output, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { PoFieldModel } from '../po-field.model';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { convertToBoolean } from '../../../utils/util';
import { PoRadioSize } from './po-radio-size.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../po-label/po-label.component";
const _c0 = ["radio"];
const _c1 = ["radioInput"];
function PoRadioComponent_po_label_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-label", 6);
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-disabled", ctx_r2.disabled)("p-label", ctx_r2.label);
} }
export class PoRadioComponent extends PoFieldModel {
    changeDetector;
    renderer;
    radio;
    radioInput;
    value = false;
    _size = PoRadioSize.Medium;
    /** Define o valor do *radio* */
    radioValue;
    /**
     * @optional
     *
     * @description
     *
     * Define o tamanho do *radio*
     * @default `medium`
     */
    set size(value) {
        this._size = Object.values(PoRadioSize).includes(value) ? value : PoRadioSize.Medium;
    }
    get size() {
        return this._size;
    }
    required;
    /** Define o status do *radio* */
    checked = false;
    /** Emite evento para a tabela ao selecionar ou desselecionar */
    changeSelected = new EventEmitter();
    constructor(changeDetector, renderer) {
        super();
        this.changeDetector = changeDetector;
        this.renderer = renderer;
    }
    /**
     * Função que atribui foco ao *radio*.
     *
     * Para utilizá-la é necessário capturar a referência do componente no DOM através do `ViewChild`, como por exemplo:
     *
     * ```
     * import { ViewChild } from '@angular/core';
     * import { PoRadioComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoRadioComponent, { static: true }) radio: PoRadioComponent;
     *
     * focusRadio() {
     * this.radio.focus();
     * }
     * ```
     *
     */
    focus() {
        if (!this.disabled) {
            this.radioInput.nativeElement.focus();
            this.onKeyup();
        }
    }
    onBlur() {
        this.onTouched?.();
    }
    onKeyDown(event) {
        if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {
            this.eventClick();
        }
    }
    changeValue(value) {
        if (value) {
            this.value = value;
            this.updateModel(value);
            this.emitChange(this.value);
        }
    }
    eventClick() {
        if (!this.disabled) {
            this.changeValue(!this.value);
            this.changeDetector.detectChanges();
            this.changeSelected.emit(null);
        }
    }
    onWriteValue(value) {
        if (value !== this.value) {
            this.value = !!value;
            this.changeDetector.markForCheck();
        }
    }
    focusOut() {
        this.renderer.removeClass(this.radio.nativeElement, 'po-radio-focus');
    }
    onKeyup() {
        this.renderer.addClass(this.radio.nativeElement, 'po-radio-focus');
    }
    onKeydown() {
        this.renderer.addClass(this.radio.nativeElement, 'po-radio-focus');
    }
    static ɵfac = function PoRadioComponent_Factory(t) { return new (t || PoRadioComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoRadioComponent, selectors: [["po-radio"]], viewQuery: function PoRadioComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
            i0.ɵɵviewQuery(_c1, 7);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radio = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radioInput = _t.first);
        } }, hostBindings: function PoRadioComponent_HostBindings(rf, ctx) { if (rf & 1) {
            i0.ɵɵlistener("focusout", function PoRadioComponent_focusout_HostBindingHandler($event) { return ctx.focusOut($event.target); })("keyup", function PoRadioComponent_keyup_HostBindingHandler($event) { return ctx.onKeyup($event.target); })("keydown", function PoRadioComponent_keydown_HostBindingHandler($event) { return ctx.onKeydown($event.target); });
        } }, inputs: { radioValue: [i0.ɵɵInputFlags.None, "p-value", "radioValue"], size: [i0.ɵɵInputFlags.None, "p-size", "size"], required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, "p-required", "required", convertToBoolean], checked: [i0.ɵɵInputFlags.None, "p-checked", "checked"] }, outputs: { changeSelected: "p-change-selected" }, features: [i0.ɵɵProvidersFeature([
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(() => PoRadioComponent),
                    multi: true
                }
            ]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[1, "po-radio"], ["radio", ""], [3, "click", "keydown"], ["type", "radio", 3, "checked", "disabled", "name", "required", "value"], ["radioInput", ""], [3, "p-disabled", "p-label", 4, "ngIf"], [3, "p-disabled", "p-label"]], template: function PoRadioComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0, 1)(2, "label", 2);
            i0.ɵɵlistener("click", function PoRadioComponent_Template_label_click_2_listener() { return ctx.eventClick(); })("keydown", function PoRadioComponent_Template_label_keydown_2_listener($event) { return ctx.onKeyDown($event); });
            i0.ɵɵelement(3, "input", 3, 4);
            i0.ɵɵtemplate(5, PoRadioComponent_po_label_5_Template, 1, 2, "po-label", 5);
            i0.ɵɵelementEnd()();
        } if (rf & 2) {
            let tmp_2_0;
            let tmp_4_0;
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("checked", ctx.checked)("disabled", ctx.disabled)("name", (tmp_2_0 = ctx.name) !== null && tmp_2_0 !== undefined ? tmp_2_0 : "po-input-radio")("required", ctx.required)("value", (tmp_4_0 = ctx.radioValue) !== null && tmp_4_0 !== undefined ? tmp_4_0 : "");
            i0.ɵɵattribute("p-size", ctx.size);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.label);
        } }, dependencies: [i1.NgIf, i2.PoLabelComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoRadioComponent, [{
        type: Component,
        args: [{ selector: 'po-radio', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoRadioComponent),
                        multi: true
                    }
                ], template: "<div #radio class=\"po-radio\">\n  <label (click)=\"eventClick()\" (keydown)=\"onKeyDown($event)\">\n    <input\n      #radioInput\n      type=\"radio\"\n      [attr.p-size]=\"size\"\n      [checked]=\"checked\"\n      [disabled]=\"disabled\"\n      [name]=\"name ?? 'po-input-radio'\"\n      [required]=\"required\"\n      [value]=\"radioValue ?? ''\"\n    />\n    <po-label *ngIf=\"label\" [p-disabled]=\"disabled\" [p-label]=\"label\"></po-label>\n  </label>\n</div>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }], { radio: [{
            type: ViewChild,
            args: ['radio', { static: true }]
        }], radioInput: [{
            type: ViewChild,
            args: ['radioInput', { static: true }]
        }], radioValue: [{
            type: Input,
            args: ['p-value']
        }], size: [{
            type: Input,
            args: ['p-size']
        }], required: [{
            type: Input,
            args: [{ alias: 'p-required', transform: convertToBoolean }]
        }], checked: [{
            type: Input,
            args: ['p-checked']
        }], changeSelected: [{
            type: Output,
            args: ['p-change-selected']
        }], focusOut: [{
            type: HostListener,
            args: ['focusout', ['$event.target']]
        }], onKeyup: [{
            type: HostListener,
            args: ['keyup', ['$event.target']]
        }], onKeydown: [{
            type: HostListener,
            args: ['keydown', ['$event.target']]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoRadioComponent, { className: "PoRadioComponent", filePath: "lib/components/po-field/po-radio/po-radio.component.ts", lineNumber: 34 }); })();
//# sourceMappingURL=data:application/json;base64,