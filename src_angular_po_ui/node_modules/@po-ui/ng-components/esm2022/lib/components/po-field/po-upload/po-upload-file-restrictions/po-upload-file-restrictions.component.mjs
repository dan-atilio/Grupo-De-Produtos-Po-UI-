import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { formatBytes } from '../../../../utils/util';
import { poLocaleDefault } from '../../../../services/po-language/po-language.constant';
import { poUploadLiteralsDefault } from '../po-upload-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../../services/po-language/po-language.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../../services/po-i18n/po-i18n.pipe";
function PoUploadFileRestrictionsComponent_p_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "p", 1);
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "poI18n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r0.literals == null ? null : ctx_r0.literals.numberOfFilesAllowed, ctx_r0.maxFiles), "\n");
} }
function PoUploadFileRestrictionsComponent_p_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "p", 1);
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "poI18n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r1.literals == null ? null : ctx_r1.literals.allowedFormats, ctx_r1.allowedExtensions), "\n");
} }
const _c0 = (a0, a1) => [a0, a1];
function PoUploadFileRestrictionsComponent_p_2_span_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "poI18n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r3.literals == null ? null : ctx_r3.literals.allowedFileSizeRange, i0.ɵɵpureFunction2(4, _c0, ctx_r3.minFileSize, ctx_r3.maxFileSize)), " ");
} }
function PoUploadFileRestrictionsComponent_p_2_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "poI18n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r4.literals == null ? null : ctx_r4.literals.minFileSizeAllowed, ctx_r4.minFileSize), " ");
} }
function PoUploadFileRestrictionsComponent_p_2_span_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span");
    i0.ɵɵtext(1);
    i0.ɵɵpipe(2, "poI18n");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind2(2, 1, ctx_r5.literals == null ? null : ctx_r5.literals.maxFileSizeAllowed, ctx_r5.maxFileSize), " ");
} }
function PoUploadFileRestrictionsComponent_p_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "p", 1)(1, "span");
    i0.ɵɵtext(2);
    i0.ɵɵelementEnd();
    i0.ɵɵtemplate(3, PoUploadFileRestrictionsComponent_p_2_span_3_Template, 3, 7, "span", 2)(4, PoUploadFileRestrictionsComponent_p_2_span_4_Template, 3, 4, "span", 2)(5, PoUploadFileRestrictionsComponent_p_2_span_5_Template, 3, 4, "span", 2);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate(ctx_r2.literals == null ? null : ctx_r2.literals.allowedSizes);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.minFileSize && ctx_r2.maxFileSize);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.minFileSize && !ctx_r2.maxFileSize);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngIf", ctx_r2.maxFileSize && !ctx_r2.minFileSize);
} }
export class PoUploadFileRestrictionsComponent {
    changeDetector;
    maxFiles;
    literals;
    _allowedExtensions;
    _maxFileSize;
    _minFileSize;
    language;
    set allowedExtensions(value) {
        this._allowedExtensions = this.formatAllowedExtensions(value);
    }
    get allowedExtensions() {
        return this._allowedExtensions;
    }
    set maxFileSize(value) {
        this._maxFileSize = formatBytes(value);
    }
    get maxFileSize() {
        return this._maxFileSize;
    }
    set minFileSize(value) {
        this._minFileSize = formatBytes(value);
    }
    get minFileSize() {
        return this._minFileSize;
    }
    constructor(changeDetector, languageService) {
        this.changeDetector = changeDetector;
        this.language = languageService.getShortLanguage();
    }
    ngOnInit() {
        this.setLiterals();
    }
    formatAllowedExtensions(allowedExtensions) {
        const conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y', 'ru': 'и' };
        return allowedExtensions
            ? allowedExtensions
                .join(', ')
                .toUpperCase()
                .replace(/,(?=[^,]*$)/, ` ${conjunction[this.language]}`)
            : undefined;
    }
    setLiterals() {
        this.literals = {
            ...poUploadLiteralsDefault[poLocaleDefault],
            ...poUploadLiteralsDefault[this.language]
        };
        this.changeDetector.detectChanges();
    }
    static ɵfac = function PoUploadFileRestrictionsComponent_Factory(t) { return new (t || PoUploadFileRestrictionsComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoUploadFileRestrictionsComponent, selectors: [["po-upload-file-restrictions"]], inputs: { maxFiles: [i0.ɵɵInputFlags.None, "p-max-files", "maxFiles"], allowedExtensions: [i0.ɵɵInputFlags.None, "p-allowed-extensions", "allowedExtensions"], maxFileSize: [i0.ɵɵInputFlags.None, "p-max-file-size", "maxFileSize"], minFileSize: [i0.ɵɵInputFlags.None, "p-min-file-size", "minFileSize"] }, decls: 3, vars: 3, consts: [["class", "po-font-text-small", 4, "ngIf"], [1, "po-font-text-small"], [4, "ngIf"]], template: function PoUploadFileRestrictionsComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, PoUploadFileRestrictionsComponent_p_0_Template, 3, 4, "p", 0)(1, PoUploadFileRestrictionsComponent_p_1_Template, 3, 4, "p", 0)(2, PoUploadFileRestrictionsComponent_p_2_Template, 6, 4, "p", 0);
        } if (rf & 2) {
            i0.ɵɵproperty("ngIf", ctx.maxFiles > 1);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.allowedExtensions);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.minFileSize || ctx.maxFileSize);
        } }, dependencies: [i2.NgIf, i3.PoI18nPipe], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoUploadFileRestrictionsComponent, [{
        type: Component,
        args: [{ selector: 'po-upload-file-restrictions', changeDetection: ChangeDetectionStrategy.OnPush, template: "<p class=\"po-font-text-small\" *ngIf=\"maxFiles > 1\">\n  {{ literals?.numberOfFilesAllowed | poI18n: maxFiles }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"allowedExtensions\">\n  {{ literals?.allowedFormats | poI18n: allowedExtensions }}\n</p>\n\n<p class=\"po-font-text-small\" *ngIf=\"minFileSize || maxFileSize\">\n  <span>{{ literals?.allowedSizes }}</span>\n\n  <span *ngIf=\"minFileSize && maxFileSize\">\n    {{ literals?.allowedFileSizeRange | poI18n: [minFileSize, maxFileSize] }}\n  </span>\n\n  <span *ngIf=\"minFileSize && !maxFileSize\">\n    {{ literals?.minFileSizeAllowed | poI18n: minFileSize }}\n  </span>\n\n  <span *ngIf=\"maxFileSize && !minFileSize\">\n    {{ literals?.maxFileSizeAllowed | poI18n: maxFileSize }}\n  </span>\n</p>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }, { type: i1.PoLanguageService }], { maxFiles: [{
            type: Input,
            args: ['p-max-files']
        }], allowedExtensions: [{
            type: Input,
            args: ['p-allowed-extensions']
        }], maxFileSize: [{
            type: Input,
            args: ['p-max-file-size']
        }], minFileSize: [{
            type: Input,
            args: ['p-min-file-size']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoUploadFileRestrictionsComponent, { className: "PoUploadFileRestrictionsComponent", filePath: "lib/components/po-field/po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component.ts", lineNumber: 14 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1maWVsZC9wby11cGxvYWQvcG8tdXBsb2FkLWZpbGUtcmVzdHJpY3Rpb25zL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucy9wby11cGxvYWQtZmlsZS1yZXN0cmljdGlvbnMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXJHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUVyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdURBQXVELENBQUM7QUFFeEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7OztJQ050RSw0QkFBbUQ7SUFDakQsWUFDRjs7SUFBQSxpQkFBSTs7O0lBREYsY0FDRjtJQURFLDhJQUNGOzs7SUFFQSw0QkFBd0Q7SUFDdEQsWUFDRjs7SUFBQSxpQkFBSTs7O0lBREYsY0FDRjtJQURFLGlKQUNGOzs7O0lBS0UsNEJBQXlDO0lBQ3ZDLFlBQ0Y7O0lBQUEsaUJBQU87OztJQURMLGNBQ0Y7SUFERSxnTUFDRjs7O0lBRUEsNEJBQTBDO0lBQ3hDLFlBQ0Y7O0lBQUEsaUJBQU87OztJQURMLGNBQ0Y7SUFERSw4SUFDRjs7O0lBRUEsNEJBQTBDO0lBQ3hDLFlBQ0Y7O0lBQUEsaUJBQU87OztJQURMLGNBQ0Y7SUFERSw4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IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGZvcm1hdEJ5dGVzIH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgeyBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgcG9Mb2NhbGVEZWZhdWx0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvcG8tbGFuZ3VhZ2UvcG8tbGFuZ3VhZ2UuY29uc3RhbnQnO1xuXG5pbXBvcnQgeyBwb1VwbG9hZExpdGVyYWxzRGVmYXVsdCB9IGZyb20gJy4uL3BvLXVwbG9hZC1iYXNlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXVwbG9hZC1maWxlLXJlc3RyaWN0aW9ucycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby11cGxvYWQtZmlsZS1yZXN0cmljdGlvbnMuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1VwbG9hZEZpbGVSZXN0cmljdGlvbnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoJ3AtbWF4LWZpbGVzJykgbWF4RmlsZXM6IG51bWJlcjtcblxuICBsaXRlcmFsczogYW55O1xuXG4gIHByaXZhdGUgX2FsbG93ZWRFeHRlbnNpb25zOiBzdHJpbmc7XG4gIHByaXZhdGUgX21heEZpbGVTaXplOiBzdHJpbmc7XG4gIHByaXZhdGUgX21pbkZpbGVTaXplOiBzdHJpbmc7XG4gIHByaXZhdGUgbGFuZ3VhZ2U6IHN0cmluZztcblxuICBASW5wdXQoJ3AtYWxsb3dlZC1leHRlbnNpb25zJykgc2V0IGFsbG93ZWRFeHRlbnNpb25zKHZhbHVlKSB7XG4gICAgdGhpcy5fYWxsb3dlZEV4dGVuc2lvbnMgPSB0aGlzLmZvcm1hdEFsbG93ZWRFeHRlbnNpb25zKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IGFsbG93ZWRFeHRlbnNpb25zKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2FsbG93ZWRFeHRlbnNpb25zO1xuICB9XG5cbiAgQElucHV0KCdwLW1heC1maWxlLXNpemUnKSBzZXQgbWF4RmlsZVNpemUodmFsdWUpIHtcbiAgICB0aGlzLl9tYXhGaWxlU2l6ZSA9IGZvcm1hdEJ5dGVzKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IG1heEZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21heEZpbGVTaXplO1xuICB9XG5cbiAgQElucHV0KCdwLW1pbi1maWxlLXNpemUnKSBzZXQgbWluRmlsZVNpemUodmFsdWUpIHtcbiAgICB0aGlzLl9taW5GaWxlU2l6ZSA9IGZvcm1hdEJ5dGVzKDxhbnk+dmFsdWUpO1xuICB9XG5cbiAgZ2V0IG1pbkZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX21pbkZpbGVTaXplO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgbGFuZ3VhZ2VTZXJ2aWNlOiBQb0xhbmd1YWdlU2VydmljZVxuICApIHtcbiAgICB0aGlzLmxhbmd1YWdlID0gbGFuZ3VhZ2VTZXJ2aWNlLmdldFNob3J0TGFuZ3VhZ2UoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0TGl0ZXJhbHMoKTtcbiAgfVxuXG4gIHByaXZhdGUgZm9ybWF0QWxsb3dlZEV4dGVuc2lvbnMoYWxsb3dlZEV4dGVuc2lvbnM6IEFycmF5PHN0cmluZz4pOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvbmp1bmN0aW9uID0geyAncHQnOiAnZScsICdlbic6ICdhbmQnLCAnZXMnOiAneScsICdydSc6ICfQuCcgfTtcblxuICAgIHJldHVybiBhbGxvd2VkRXh0ZW5zaW9uc1xuICAgICAgPyBhbGxvd2VkRXh0ZW5zaW9uc1xuICAgICAgICAgIC5qb2luKCcsICcpXG4gICAgICAgICAgLnRvVXBwZXJDYXNlKClcbiAgICAgICAgICAucmVwbGFjZSgvLCg/PVteLF0qJCkvLCBgICR7Y29uanVuY3Rpb25bdGhpcy5sYW5ndWFnZV19YClcbiAgICAgIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRMaXRlcmFscygpIHtcbiAgICB0aGlzLmxpdGVyYWxzID0ge1xuICAgICAgLi4ucG9VcGxvYWRMaXRlcmFsc0RlZmF1bHRbcG9Mb2NhbGVEZWZhdWx0XSxcbiAgICAgIC4uLnBvVXBsb2FkTGl0ZXJhbHNEZWZhdWx0W3RoaXMubGFuZ3VhZ2VdXG4gICAgfTtcblxuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG59XG4iLCI8cCBjbGFzcz1cInBvLWZvbnQtdGV4dC1zbWFsbFwiICpuZ0lmPVwibWF4RmlsZXMgPiAxXCI+XG4gIHt7IGxpdGVyYWxzPy5udW1iZXJPZkZpbGVzQWxsb3dlZCB8IHBvSTE4bjogbWF4RmlsZXMgfX1cbjwvcD5cblxuPHAgY2xhc3M9XCJwby1mb250LXRleHQtc21hbGxcIiAqbmdJZj1cImFsbG93ZWRFeHRlbnNpb25zXCI+XG4gIHt7IGxpdGVyYWxzPy5hbGxvd2VkRm9ybWF0cyB8IHBvSTE4bjogYWxsb3dlZEV4dGVuc2lvbnMgfX1cbjwvcD5cblxuPHAgY2xhc3M9XCJwby1mb250LXRleHQtc21hbGxcIiAqbmdJZj1cIm1pbkZpbGVTaXplIHx8IG1heEZpbGVTaXplXCI+XG4gIDxzcGFuPnt7IGxpdGVyYWxzPy5hbGxvd2VkU2l6ZXMgfX08L3NwYW4+XG5cbiAgPHNwYW4gKm5nSWY9XCJtaW5GaWxlU2l6ZSAmJiBtYXhGaWxlU2l6ZVwiPlxuICAgIHt7IGxpdGVyYWxzPy5hbGxvd2VkRmlsZVNpemVSYW5nZSB8IHBvSTE4bjogW21pbkZpbGVTaXplLCBtYXhGaWxlU2l6ZV0gfX1cbiAgPC9zcGFuPlxuXG4gIDxzcGFuICpuZ0lmPVwibWluRmlsZVNpemUgJiYgIW1heEZpbGVTaXplXCI+XG4gICAge3sgbGl0ZXJhbHM/Lm1pbkZpbGVTaXplQWxsb3dlZCB8IHBvSTE4bjogbWluRmlsZVNpemUgfX1cbiAgPC9zcGFuPlxuXG4gIDxzcGFuICpuZ0lmPVwibWF4RmlsZVNpemUgJiYgIW1pbkZpbGVTaXplXCI+XG4gICAge3sgbGl0ZXJhbHM/Lm1heEZpbGVTaXplQWxsb3dlZCB8IHBvSTE4bjogbWF4RmlsZVNpemUgfX1cbiAgPC9zcGFuPlxuPC9wPlxuIl19