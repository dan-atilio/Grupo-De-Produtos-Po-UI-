import { ChangeDetectionStrategy, Component, forwardRef, ViewChildren } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { PoCheckboxGroupBaseComponent } from './po-checkbox-group-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../po-field-container/po-field-container-bottom/po-field-container-bottom.component";
import * as i3 from "../po-field-container/po-field-container.component";
import * as i4 from "../po-checkbox/po-checkbox.component";
const _c0 = ["checkboxLabel"];
function PoCheckboxGroupComponent_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li")(1, "po-checkbox", 4, 5);
    i0.ɵɵlistener("click", function PoCheckboxGroupComponent_li_3_Template_po_checkbox_click_1_listener() { const restoredCtx = i0.ɵɵrestoreView(_r4); const option_r1 = restoredCtx.$implicit; const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.checkOption(option_r1)); })("keydown", function PoCheckboxGroupComponent_li_3_Template_po_checkbox_keydown_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r4); const option_r1 = restoredCtx.$implicit; const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.onKeyDown($event, option_r1)); });
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const option_r1 = ctx.$implicit;
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵclassMapInterpolate2("po-checkbox-group-item po-md-", ctx_r0.mdColumns, " po-lg-", ctx_r0.columns, "");
    i0.ɵɵclassProp("po-checkbox-group-item-disabled", option_r1.disabled || ctx_r0.disabled);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-label", option_r1.label)("p-disabled", option_r1.disabled || ctx_r0.disabled)("p-checkboxValue", ctx_r0.checkedOptions[option_r1.value] === null ? "mixed" : ctx_r0.checkedOptions[option_r1.value])("p-required", ctx_r0.required);
} }
/**
 * @docsExtends PoCheckboxGroupBaseComponent
 *
 * @example
 *
 * <example name="po-checkbox-group-basic" title="PO Checkbox Group Basic">
 *  <file name="sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.html"> </file>
 *  <file name="sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-checkbox-group-labs" title="PO Checkbox Group Labs">
 *  <file name="sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.html"> </file>
 *  <file name="sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-checkbox-group-password-policy" title="PO Checkbox Group – Security policy">
 *  <file name="sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.html"> </file>
 *  <file name="sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.ts"> </file>
 * </example>
 */
export class PoCheckboxGroupComponent extends PoCheckboxGroupBaseComponent {
    changeDetector;
    checkboxLabels;
    constructor(changeDetector) {
        super();
        this.changeDetector = changeDetector;
    }
    ngAfterViewChecked() {
        this.changeDetector.detectChanges();
    }
    ngAfterViewInit() {
        if (this.autoFocus) {
            this.focus();
        }
    }
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoCheckboxGroupComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoCheckboxGroupComponent, { static: true }) checkbox: PoCheckboxGroupComponent;
     *
     * focusCheckbox() {
     *   this.checkbox.focus();
     * }
     * ```
     */
    focus() {
        if (this.checkboxLabels && !this.disabled) {
            const checkboxLabel = this.checkboxLabels.find((_, index) => !this.options[index].disabled);
            if (checkboxLabel) {
                checkboxLabel.checkboxLabel.nativeElement.focus();
            }
        }
    }
    onKeyDown(event, option) {
        const spaceBar = 32;
        if (event.which === spaceBar || event.keyCode === spaceBar) {
            this.checkOption(option);
            event.preventDefault();
        }
    }
    trackByFn(index) {
        return index;
    }
    static ɵfac = function PoCheckboxGroupComponent_Factory(t) { return new (t || PoCheckboxGroupComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoCheckboxGroupComponent, selectors: [["po-checkbox-group"]], viewQuery: function PoCheckboxGroupComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkboxLabels = _t);
        } }, features: [i0.ɵɵProvidersFeature([
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(() => PoCheckboxGroupComponent),
                    multi: true
                },
                {
                    provide: NG_VALIDATORS,
                    useExisting: forwardRef(() => PoCheckboxGroupComponent),
                    multi: true
                }
            ]), i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 9, consts: [[3, "p-disabled", "p-help", "p-label", "p-optional", "p-required", "p-show-required"], ["role", "group", 1, "po-field-container-content", "po-checkbox-group-content"], [1, "po-row", "po-pt-2", "po-pb-1"], [3, "class", "po-checkbox-group-item-disabled", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "p-label", "p-disabled", "p-checkboxValue", "p-required", "click", "keydown"], ["checkboxLabel", ""]], template: function PoCheckboxGroupComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "po-field-container", 0)(1, "div", 1)(2, "ul", 2);
            i0.ɵɵtemplate(3, PoCheckboxGroupComponent_li_3_Template, 3, 10, "li", 3);
            i0.ɵɵelementEnd()();
            i0.ɵɵelement(4, "po-field-container-bottom");
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("p-disabled", ctx.disabled)("p-help", ctx.help)("p-label", ctx.label)("p-optional", ctx.optional)("p-required", ctx.required)("p-show-required", ctx.showRequired);
            i0.ɵɵadvance();
            i0.ɵɵattribute("aria-label", ctx.label);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngForOf", ctx.checkboxGroupOptionsView)("ngForTrackBy", ctx.trackByFn);
        } }, dependencies: [i1.NgForOf, i2.PoFieldContainerBottomComponent, i3.PoFieldContainerComponent, i4.PoCheckboxComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoCheckboxGroupComponent, [{
        type: Component,
        args: [{ selector: 'po-checkbox-group', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoCheckboxGroupComponent),
                        multi: true
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => PoCheckboxGroupComponent),
                        multi: true
                    }
                ], template: "<po-field-container\n  [p-disabled]=\"disabled\"\n  [p-help]=\"help\"\n  [p-label]=\"label\"\n  [p-optional]=\"optional\"\n  [p-required]=\"required\"\n  [p-show-required]=\"showRequired\"\n>\n  <div role=\"group\" [attr.aria-label]=\"label\" class=\"po-field-container-content po-checkbox-group-content\">\n    <ul class=\"po-row po-pt-2 po-pb-1\">\n      <li\n        *ngFor=\"let option of checkboxGroupOptionsView; trackBy: trackByFn\"\n        class=\"po-checkbox-group-item po-md-{{ mdColumns }} po-lg-{{ columns }}\"\n        [class.po-checkbox-group-item-disabled]=\"option.disabled || disabled\"\n      >\n        <po-checkbox\n          #checkboxLabel\n          [p-label]=\"option.label\"\n          [p-disabled]=\"option.disabled || disabled\"\n          (click)=\"checkOption(option)\"\n          (keydown)=\"onKeyDown($event, option)\"\n          [p-checkboxValue]=\"checkedOptions[option.value] === null ? 'mixed' : checkedOptions[option.value]\"\n          [p-required]=\"required\"\n        >\n        </po-checkbox>\n      </li>\n    </ul>\n  </div>\n\n  <po-field-container-bottom></po-field-container-bottom>\n</po-field-container>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }], { checkboxLabels: [{
            type: ViewChildren,
            args: ['checkboxLabel']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoCheckboxGroupComponent, { className: "PoCheckboxGroupComponent", filePath: "lib/components/po-field/po-checkbox-group/po-checkbox-group.component.ts", lineNumber: 54 }); })();
//# sourceMappingURL=data:application/json;base64,