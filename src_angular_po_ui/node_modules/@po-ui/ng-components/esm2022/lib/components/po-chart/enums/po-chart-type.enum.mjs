/**
 * @usedBy PoChartComponent
 *
 * @description
 *
 * *Enum* `PoChartType` para especificação dos tipos de gráficos.
 */
export var PoChartType;
(function (PoChartType) {
    /**
     * Tipo de gráfico que exibe os dados de modo quantitativo, utilizando linhas contínuas demarcadas por pontos para cada valor de série definido.
     * Similar ao gráfico de linha, diferencia-se pela área localizada abaixo da linha das séries, que é preenchida com cores para um destaque explícita da evolução e mudança dos dados.
     */
    PoChartType["Area"] = "area";
    /**
     * Exibe os dados em formato de rosca, dividindo em partes proporcionais.
     */
    PoChartType["Donut"] = "donut";
    /**
     * Exibe os dados em formato circular, dividindo proporcionalmente em fatias.
     */
    PoChartType["Pie"] = "pie";
    /**
     * Gráfico que mostra os dados de modo linear e contínuo. É útil, por exemplo, para fazer comparações de tendência durante determinado período.
     * Pode ser utilizado em conjunto com gráficos dos tipos `column` e `area`, definindo-se o tipo através da propriedade `PoChartSerie.type`.
     */
    PoChartType["Line"] = "line";
    /**
     * Gráfico que exibe os dados em forma de barras verticais e sua extensão varia de acordo com seus valores. É comumente usado como comparativo entre diversas séries.
     * As séries são exibidas lado-a-lado, com um pequeno espaço entre elas.
     */
    PoChartType["Column"] = "column";
    /**
     * Gráfico que exibe os dados em forma de barras horizontais e sua extensão varia de acordo com seus valores. É comumente usado como comparativo de séries e categorias.
     */
    PoChartType["Bar"] = "bar";
})(PoChartType || (PoChartType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtdHlwZS5lbnVtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWNoYXJ0L2VudW1zL3BvLWNoYXJ0LXR5cGUuZW51bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQU4sSUFBWSxXQWlDWDtBQWpDRCxXQUFZLFdBQVc7SUFDckI7OztPQUdHO0lBQ0gsNEJBQWEsQ0FBQTtJQUViOztPQUVHO0lBQ0gsOEJBQWUsQ0FBQTtJQUVmOztPQUVHO0lBQ0gsMEJBQVcsQ0FBQTtJQUVYOzs7T0FHRztJQUNILDRCQUFhLENBQUE7SUFFYjs7O09BR0c7SUFDSCxnQ0FBaUIsQ0FBQTtJQUVqQjs7T0FFRztJQUNILDBCQUFXLENBQUE7QUFDYixDQUFDLEVBakNXLFdBQVcsS0FBWCxXQUFXLFFBaUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHVzZWRCeSBQb0NoYXJ0Q29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogKkVudW0qIGBQb0NoYXJ0VHlwZWAgcGFyYSBlc3BlY2lmaWNhw6fDo28gZG9zIHRpcG9zIGRlIGdyw6FmaWNvcy5cbiAqL1xuZXhwb3J0IGVudW0gUG9DaGFydFR5cGUge1xuICAvKipcbiAgICogVGlwbyBkZSBncsOhZmljbyBxdWUgZXhpYmUgb3MgZGFkb3MgZGUgbW9kbyBxdWFudGl0YXRpdm8sIHV0aWxpemFuZG8gbGluaGFzIGNvbnTDrW51YXMgZGVtYXJjYWRhcyBwb3IgcG9udG9zIHBhcmEgY2FkYSB2YWxvciBkZSBzw6lyaWUgZGVmaW5pZG8uXG4gICAqIFNpbWlsYXIgYW8gZ3LDoWZpY28gZGUgbGluaGEsIGRpZmVyZW5jaWEtc2UgcGVsYSDDoXJlYSBsb2NhbGl6YWRhIGFiYWl4byBkYSBsaW5oYSBkYXMgc8OpcmllcywgcXVlIMOpIHByZWVuY2hpZGEgY29tIGNvcmVzIHBhcmEgdW0gZGVzdGFxdWUgZXhwbMOtY2l0YSBkYSBldm9sdcOnw6NvIGUgbXVkYW7Dp2EgZG9zIGRhZG9zLlxuICAgKi9cbiAgQXJlYSA9ICdhcmVhJyxcblxuICAvKipcbiAgICogRXhpYmUgb3MgZGFkb3MgZW0gZm9ybWF0byBkZSByb3NjYSwgZGl2aWRpbmRvIGVtIHBhcnRlcyBwcm9wb3JjaW9uYWlzLlxuICAgKi9cbiAgRG9udXQgPSAnZG9udXQnLFxuXG4gIC8qKlxuICAgKiBFeGliZSBvcyBkYWRvcyBlbSBmb3JtYXRvIGNpcmN1bGFyLCBkaXZpZGluZG8gcHJvcG9yY2lvbmFsbWVudGUgZW0gZmF0aWFzLlxuICAgKi9cbiAgUGllID0gJ3BpZScsXG5cbiAgLyoqXG4gICAqIEdyw6FmaWNvIHF1ZSBtb3N0cmEgb3MgZGFkb3MgZGUgbW9kbyBsaW5lYXIgZSBjb250w61udW8uIMOJIMO6dGlsLCBwb3IgZXhlbXBsbywgcGFyYSBmYXplciBjb21wYXJhw6fDtWVzIGRlIHRlbmTDqm5jaWEgZHVyYW50ZSBkZXRlcm1pbmFkbyBwZXLDrW9kby5cbiAgICogUG9kZSBzZXIgdXRpbGl6YWRvIGVtIGNvbmp1bnRvIGNvbSBncsOhZmljb3MgZG9zIHRpcG9zIGBjb2x1bW5gIGUgYGFyZWFgLCBkZWZpbmluZG8tc2UgbyB0aXBvIGF0cmF2w6lzIGRhIHByb3ByaWVkYWRlIGBQb0NoYXJ0U2VyaWUudHlwZWAuXG4gICAqL1xuICBMaW5lID0gJ2xpbmUnLFxuXG4gIC8qKlxuICAgKiBHcsOhZmljbyBxdWUgZXhpYmUgb3MgZGFkb3MgZW0gZm9ybWEgZGUgYmFycmFzIHZlcnRpY2FpcyBlIHN1YSBleHRlbnPDo28gdmFyaWEgZGUgYWNvcmRvIGNvbSBzZXVzIHZhbG9yZXMuIMOJIGNvbXVtZW50ZSB1c2FkbyBjb21vIGNvbXBhcmF0aXZvIGVudHJlIGRpdmVyc2FzIHPDqXJpZXMuXG4gICAqIEFzIHPDqXJpZXMgc8OjbyBleGliaWRhcyBsYWRvLWEtbGFkbywgY29tIHVtIHBlcXVlbm8gZXNwYcOnbyBlbnRyZSBlbGFzLlxuICAgKi9cbiAgQ29sdW1uID0gJ2NvbHVtbicsXG5cbiAgLyoqXG4gICAqIEdyw6FmaWNvIHF1ZSBleGliZSBvcyBkYWRvcyBlbSBmb3JtYSBkZSBiYXJyYXMgaG9yaXpvbnRhaXMgZSBzdWEgZXh0ZW5zw6NvIHZhcmlhIGRlIGFjb3JkbyBjb20gc2V1cyB2YWxvcmVzLiDDiSBjb211bWVudGUgdXNhZG8gY29tbyBjb21wYXJhdGl2byBkZSBzw6lyaWVzIGUgY2F0ZWdvcmlhcy5cbiAgICovXG4gIEJhciA9ICdiYXInXG59XG4iXX0=