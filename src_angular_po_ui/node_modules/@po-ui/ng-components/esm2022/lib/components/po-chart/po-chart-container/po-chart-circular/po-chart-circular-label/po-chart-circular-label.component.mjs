import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
const _c0 = ["svgLabel"];
const _c1 = ["po-chart-circular-label", ""];
export class PoChartCircularLabelComponent {
    changeDetection;
    renderer;
    serie;
    showLabel;
    svgLabel;
    constructor(changeDetection, renderer) {
        this.changeDetection = changeDetection;
        this.renderer = renderer;
    }
    applyCoordinates(coordinates) {
        this.renderer.setAttribute(this.svgLabel.nativeElement, 'x', coordinates.xCoordinate.toString());
        this.renderer.setAttribute(this.svgLabel.nativeElement, 'y', coordinates.yCoordinate.toString());
        this.showLabel = true;
        this.changeDetection.detectChanges();
    }
    static ɵfac = function PoChartCircularLabelComponent_Factory(t) { return new (t || PoChartCircularLabelComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoChartCircularLabelComponent, selectors: [["", "po-chart-circular-label", ""]], viewQuery: function PoChartCircularLabelComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5, ElementRef);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgLabel = _t.first);
        } }, inputs: { serie: [i0.ɵɵInputFlags.None, "p-serie", "serie"], showLabel: [i0.ɵɵInputFlags.None, "p-show-label", "showLabel"] }, attrs: _c1, decls: 3, vars: 6, consts: [["dominant-baseline", "middle", 1, "po-chart-label"], ["svgLabel", ""]], template: function PoChartCircularLabelComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵnamespaceSVG();
            i0.ɵɵelementStart(0, "text", 0, 1);
            i0.ɵɵtext(2);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵclassProp("po-invisible", !ctx.showLabel);
            i0.ɵɵattribute("fill", ctx.serie == null ? null : ctx.serie.color)("x", ctx.serie == null ? null : ctx.serie.xCoordinate)("y", ctx.serie == null ? null : ctx.serie.yCoordinate);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate1(" ", ctx.serie == null ? null : ctx.serie.label, "\n");
        } }, encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoChartCircularLabelComponent, [{
        type: Component,
        args: [{ selector: '[po-chart-circular-label]', template: "<svg:text #svgLabel \n  class=\"po-chart-label\" \n  dominant-baseline=\"middle\"\n  [class.po-invisible]=\"!showLabel\"\n  [attr.fill]=\"serie?.color\"\n  [attr.x]=\"serie?.xCoordinate\"\n  [attr.y]=\"serie?.yCoordinate\">\n  {{ serie?.label }}\n</svg:text> " }]
    }], () => [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }], { serie: [{
            type: Input,
            args: ['p-serie']
        }], showLabel: [{
            type: Input,
            args: ['p-show-label']
        }], svgLabel: [{
            type: ViewChild,
            args: ['svgLabel', { read: ElementRef }]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoChartCircularLabelComponent, { className: "PoChartCircularLabelComponent", filePath: "lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-label/po-chart-circular-label.component.ts", lineNumber: 9 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtY2lyY3VsYXItbGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWNoYXJ0L3BvLWNoYXJ0LWNvbnRhaW5lci9wby1jaGFydC1jaXJjdWxhci9wby1jaGFydC1jaXJjdWxhci1sYWJlbC9wby1jaGFydC1jaXJjdWxhci1sYWJlbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tY2hhcnQvcG8tY2hhcnQtY29udGFpbmVyL3BvLWNoYXJ0LWNpcmN1bGFyL3BvLWNoYXJ0LWNpcmN1bGFyLWxhYmVsL3BvLWNoYXJ0LWNpcmN1bGFyLWxhYmVsLmNvbXBvbmVudC5zdmciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFxQixTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBYSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFRdEcsTUFBTSxPQUFPLDZCQUE2QjtJQVE5QjtJQUNBO0lBUlEsS0FBSyxDQUEwQjtJQUUxQixTQUFTLENBQVU7SUFFRyxRQUFRLENBQWE7SUFFbEUsWUFDVSxlQUFrQyxFQUNsQyxRQUFtQjtRQURuQixvQkFBZSxHQUFmLGVBQWUsQ0FBbUI7UUFDbEMsYUFBUSxHQUFSLFFBQVEsQ0FBVztJQUMxQixDQUFDO0lBRUosZ0JBQWdCLENBQUMsV0FBb0M7UUFDbkQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUNqRyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxHQUFHLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ2pHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkMsQ0FBQzt1RkFqQlUsNkJBQTZCOzZEQUE3Qiw2QkFBNkI7bUNBS1QsVUFBVTs7Ozs7WUNiM0MsbUJBTWdDO1lBTmhDLGtDQU1nQztZQUM5QixZQUNGO1lBQUEsaUJBQVc7O1lBTFQsOENBQWlDO1lBQ2pDLGtFQUEwQix1REFBQSx1REFBQTtZQUcxQixlQUNGO1lBREUsNEVBQ0Y7OztpRkRBYSw2QkFBNkI7Y0FKekMsU0FBUzsyQkFDRSwyQkFBMkI7MEVBSW5CLEtBQUs7a0JBQXRCLEtBQUs7bUJBQUMsU0FBUztZQUVPLFNBQVM7a0JBQS9CLEtBQUs7bUJBQUMsY0FBYztZQUV3QixRQUFRO2tCQUFwRCxTQUFTO21CQUFDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUU7O2tGQUxoQyw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9DaGFydExhYmVsQ29vcmRpbmF0ZXMgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL3BvLWNoYXJ0LWxhYmVsLWNvb3JkaW5hdGVzLmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1twby1jaGFydC1jaXJjdWxhci1sYWJlbF0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tY2hhcnQtY2lyY3VsYXItbGFiZWwuY29tcG9uZW50LnN2Zydcbn0pXG5leHBvcnQgY2xhc3MgUG9DaGFydENpcmN1bGFyTGFiZWxDb21wb25lbnQge1xuICBASW5wdXQoJ3Atc2VyaWUnKSBzZXJpZTogUG9DaGFydExhYmVsQ29vcmRpbmF0ZXM7XG5cbiAgQElucHV0KCdwLXNob3ctbGFiZWwnKSBzaG93TGFiZWw6IGJvb2xlYW47XG5cbiAgQFZpZXdDaGlsZCgnc3ZnTGFiZWwnLCB7IHJlYWQ6IEVsZW1lbnRSZWYgfSkgc3ZnTGFiZWw6IEVsZW1lbnRSZWY7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMlxuICApIHt9XG5cbiAgYXBwbHlDb29yZGluYXRlcyhjb29yZGluYXRlczogUG9DaGFydExhYmVsQ29vcmRpbmF0ZXMpIHtcbiAgICB0aGlzLnJlbmRlcmVyLnNldEF0dHJpYnV0ZSh0aGlzLnN2Z0xhYmVsLm5hdGl2ZUVsZW1lbnQsICd4JywgY29vcmRpbmF0ZXMueENvb3JkaW5hdGUudG9TdHJpbmcoKSk7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5zdmdMYWJlbC5uYXRpdmVFbGVtZW50LCAneScsIGNvb3JkaW5hdGVzLnlDb29yZGluYXRlLnRvU3RyaW5nKCkpO1xuICAgIHRoaXMuc2hvd0xhYmVsID0gdHJ1ZTtcbiAgICB0aGlzLmNoYW5nZURldGVjdGlvbi5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cbn1cbiIsIjxzdmc6dGV4dCAjc3ZnTGFiZWwgXG4gIGNsYXNzPVwicG8tY2hhcnQtbGFiZWxcIiBcbiAgZG9taW5hbnQtYmFzZWxpbmU9XCJtaWRkbGVcIlxuICBbY2xhc3MucG8taW52aXNpYmxlXT1cIiFzaG93TGFiZWxcIlxuICBbYXR0ci5maWxsXT1cInNlcmllPy5jb2xvclwiXG4gIFthdHRyLnhdPVwic2VyaWU/LnhDb29yZGluYXRlXCJcbiAgW2F0dHIueV09XCJzZXJpZT8ueUNvb3JkaW5hdGVcIj5cbiAge3sgc2VyaWU/LmxhYmVsIH19XG48L3N2Zzp0ZXh0PiAiXX0=