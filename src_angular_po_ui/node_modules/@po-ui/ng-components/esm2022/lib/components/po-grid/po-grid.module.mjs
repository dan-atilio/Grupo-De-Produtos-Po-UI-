import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { NgModule } from '@angular/core';
import { PoFieldModule } from './../../components/po-field/po-field.module';
import { PoGridCellActionComponent } from './po-grid-cell-action/po-grid-cell-action.component';
import { PoGridCellComponent } from './po-grid-cell/po-grid-cell.component';
import { PoGridComponent } from './po-grid.component';
import { PoGridHeadComponent } from './po-grid-head/po-grid-head.component';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * Módulo do componente po-grid.
 */
export class PoGridModule {
    static ɵfac = function PoGridModule_Factory(t) { return new (t || PoGridModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PoGridModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule, FormsModule, PoFieldModule] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoGridModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule, PoFieldModule],
                declarations: [PoGridCellActionComponent, PoGridCellComponent, PoGridComponent, PoGridHeadComponent],
                exports: [PoGridComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(PoGridModule, { declarations: [PoGridCellActionComponent, PoGridCellComponent, PoGridComponent, PoGridHeadComponent], imports: [CommonModule, FormsModule, PoFieldModule], exports: [PoGridComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ3JpZC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZ3JpZC9wby1ncmlkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBRTVFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7QUFFNUU7Ozs7R0FJRztBQU1ILE1BQU0sT0FBTyxZQUFZO3NFQUFaLFlBQVk7NERBQVosWUFBWTtnRUFKYixZQUFZLEVBQUUsV0FBVyxFQUFFLGFBQWE7O2lGQUl2QyxZQUFZO2NBTHhCLFFBQVE7ZUFBQztnQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGFBQWEsQ0FBQztnQkFDbkQsWUFBWSxFQUFFLENBQUMseUJBQXlCLEVBQUUsbUJBQW1CLEVBQUUsZUFBZSxFQUFFLG1CQUFtQixDQUFDO2dCQUNwRyxPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUM7YUFDM0I7O3dGQUNZLFlBQVksbUJBSFIseUJBQXlCLEVBQUUsbUJBQW1CLEVBQUUsZUFBZSxFQUFFLG1CQUFtQixhQUR6RixZQUFZLEVBQUUsV0FBVyxFQUFFLGFBQWEsYUFFeEMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvRmllbGRNb2R1bGUgfSBmcm9tICcuLy4uLy4uL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tZmllbGQubW9kdWxlJztcblxuaW1wb3J0IHsgUG9HcmlkQ2VsbEFjdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vcG8tZ3JpZC1jZWxsLWFjdGlvbi9wby1ncmlkLWNlbGwtYWN0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0dyaWRDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi9wby1ncmlkLWNlbGwvcG8tZ3JpZC1jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0dyaWRDb21wb25lbnQgfSBmcm9tICcuL3BvLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFBvR3JpZEhlYWRDb21wb25lbnQgfSBmcm9tICcuL3BvLWdyaWQtaGVhZC9wby1ncmlkLWhlYWQuY29tcG9uZW50JztcblxuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBNw7NkdWxvIGRvIGNvbXBvbmVudGUgcG8tZ3JpZC5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRm9ybXNNb2R1bGUsIFBvRmllbGRNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtQb0dyaWRDZWxsQWN0aW9uQ29tcG9uZW50LCBQb0dyaWRDZWxsQ29tcG9uZW50LCBQb0dyaWRDb21wb25lbnQsIFBvR3JpZEhlYWRDb21wb25lbnRdLFxuICBleHBvcnRzOiBbUG9HcmlkQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBQb0dyaWRNb2R1bGUge31cbiJdfQ==