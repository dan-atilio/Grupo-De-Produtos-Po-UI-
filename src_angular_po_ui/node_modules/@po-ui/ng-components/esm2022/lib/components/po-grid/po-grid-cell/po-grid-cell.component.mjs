import { Component, Input, ViewChild, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
const _c0 = ["inputElement"];
const _c1 = ["contentElement"];
function PoGridCellComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoGridCellComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 3, 4);
    i0.ɵɵlistener("keydown", function PoGridCellComponent_ng_template_2_Template_div_keydown_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.onKeyDownContent($event)); })("dblclick", function PoGridCellComponent_ng_template_2_Template_div_dblclick_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.dblclick($event)); });
    i0.ɵɵelementStart(2, "span");
    i0.ɵɵtext(3);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵclassMapInterpolate2("po-grid-cell-content po-grid-cell-", ctx_r1.align, " ", !ctx_r1.value && ctx_r1.required ? "po-grid-cell-required" : "", "");
    i0.ɵɵpropertyInterpolate("tabindex", ctx_r1.readonly ? -1 : 0);
    i0.ɵɵproperty("id", ctx_r1.position);
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate(ctx_r1.value || "\u00A0");
} }
function PoGridCellComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    const _r11 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "input", 5, 6);
    i0.ɵɵtwoWayListener("ngModelChange", function PoGridCellComponent_ng_template_4_Template_input_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); i0.ɵɵtwoWayBindingSet(ctx_r10.editValue, $event) || (ctx_r10.editValue = $event); return i0.ɵɵresetView($event); });
    i0.ɵɵlistener("keydown.arrowup", function PoGridCellComponent_ng_template_4_Template_input_keydown_arrowup_0_listener($event) { return $event.stopPropagation(); })("keydown.arrowdown", function PoGridCellComponent_ng_template_4_Template_input_keydown_arrowdown_0_listener($event) { return $event.stopPropagation(); })("keydown.arrowleft", function PoGridCellComponent_ng_template_4_Template_input_keydown_arrowleft_0_listener($event) { return $event.stopPropagation(); })("keydown.arrowright", function PoGridCellComponent_ng_template_4_Template_input_keydown_arrowright_0_listener($event) { return $event.stopPropagation(); })("keydown", function PoGridCellComponent_ng_template_4_Template_input_keydown_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r16 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r16.onKeyDownInput($event)); })("blur", function PoGridCellComponent_ng_template_4_Template_input_blur_0_listener() { i0.ɵɵrestoreView(_r11); const ctx_r17 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r17.onBlurInput()); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("id", ctx_r3.position);
    i0.ɵɵtwoWayProperty("ngModel", ctx_r3.editValue);
} }
export class PoGridCellComponent {
    changeDetectorRef;
    align = 'left';
    freeze = false;
    tabIndex = -1;
    position = '';
    readonly = false;
    required = false;
    valueChange = new EventEmitter();
    inputElement;
    contentElement;
    _value = '';
    edit = false;
    editValue = '';
    _width;
    set width(value) {
        this._width = value;
        if (this.freeze && !this._width) {
            this._width = 100;
        }
    }
    get width() {
        return this._width ? `${this._width}px` : '100%';
    }
    set value(value) {
        this._value = value;
        this.valueChange.emit(this._value);
    }
    get value() {
        return this._value;
    }
    constructor(changeDetectorRef) {
        this.changeDetectorRef = changeDetectorRef;
    }
    onKeyDownContent(event) {
        // BACKSPACE / DELETE
        if (!event.ctrlKey && (event.keyCode === 8 || event.keyCode === 46)) {
            if (this.readonly) {
                return;
            }
            event.preventDefault();
            this.value = '';
            return;
        }
        // ENTER
        if (event.keyCode === 13) {
            event.preventDefault();
            this.onEditCell(this.value);
            return;
        }
        // A..Z - 0..9
        if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57)) {
            event.preventDefault();
            this.onEditCell(event.key);
        }
    }
    dblclick(event) {
        event.preventDefault();
        this.onEditCell(this.value);
    }
    onBlurInput() {
        this.value = this.editValue;
        this.editValue = undefined;
        this.edit = false;
    }
    onKeyDownInput(event) {
        // ENTER
        if (event.keyCode === 13) {
            event.target.blur();
            this.changeDetectorRef.detectChanges();
            this.contentElement.nativeElement.focus();
        }
        // ESCAPE
        if (event.keyCode === 27) {
            this.editValue = undefined;
            this.edit = false;
            this.changeDetectorRef.detectChanges();
            this.contentElement.nativeElement.focus();
            event.stopPropagation();
        }
    }
    onEditCell(value) {
        if (this.readonly) {
            return;
        }
        this.editValue = value;
        this.edit = true;
        this.changeDetectorRef.detectChanges();
        this.inputElement.nativeElement.focus();
    }
    static ɵfac = function PoGridCellComponent_Factory(t) { return new (t || PoGridCellComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoGridCellComponent, selectors: [["po-grid-cell"]], viewQuery: function PoGridCellComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5);
            i0.ɵɵviewQuery(_c1, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentElement = _t.first);
        } }, inputs: { align: [i0.ɵɵInputFlags.None, "p-align", "align"], freeze: [i0.ɵɵInputFlags.None, "p-freeze", "freeze"], tabIndex: [i0.ɵɵInputFlags.None, "p-tab-index", "tabIndex"], position: [i0.ɵɵInputFlags.None, "p-position", "position"], readonly: [i0.ɵɵInputFlags.None, "p-readonly", "readonly"], required: [i0.ɵɵInputFlags.None, "p-required", "required"], width: [i0.ɵɵInputFlags.None, "p-width", "width"], value: [i0.ɵɵInputFlags.None, "p-value", "value"] }, outputs: { valueChange: "p-valueChange" }, decls: 6, vars: 3, consts: [[4, "ngIf", "ngIfThen", "ngIfElse"], ["content", ""], ["input", ""], [3, "id", "tabindex", "keydown", "dblclick"], ["contentElement", ""], [1, "po-grid-cell-input", 3, "id", "ngModel", "ngModelChange", "keydown.arrowup", "keydown.arrowdown", "keydown.arrowleft", "keydown.arrowright", "keydown", "blur"], ["inputElement", ""]], template: function PoGridCellComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵtemplate(1, PoGridCellComponent_ng_container_1_Template, 1, 0, "ng-container", 0)(2, PoGridCellComponent_ng_template_2_Template, 4, 7, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor)(4, PoGridCellComponent_ng_template_4_Template, 2, 2, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            const _r2 = i0.ɵɵreference(3);
            const _r4 = i0.ɵɵreference(5);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.edit)("ngIfThen", _r4)("ngIfElse", _r2);
        } }, dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoGridCellComponent, [{
        type: Component,
        args: [{ selector: 'po-grid-cell', template: "<div>\n  <ng-container *ngIf=\"edit; then input; else content\"></ng-container>\n\n  <ng-template #content>\n    <div\n      #contentElement\n      [id]=\"position\"\n      class=\"po-grid-cell-content po-grid-cell-{{ align }} {{ !value && required ? 'po-grid-cell-required' : '' }}\"\n      (keydown)=\"onKeyDownContent($event)\"\n      tabindex=\"{{ readonly ? -1 : 0 }}\"\n      (dblclick)=\"dblclick($event)\"\n    >\n      <span>{{ value || '&nbsp;' }}</span>\n    </div>\n  </ng-template>\n\n  <ng-template #input>\n    <input\n      [id]=\"position\"\n      #inputElement\n      class=\"po-grid-cell-input\"\n      [(ngModel)]=\"editValue\"\n      (keydown.arrowup)=\"$event.stopPropagation()\"\n      (keydown.arrowdown)=\"$event.stopPropagation()\"\n      (keydown.arrowleft)=\"$event.stopPropagation()\"\n      (keydown.arrowright)=\"$event.stopPropagation()\"\n      (keydown)=\"onKeyDownInput($event)\"\n      (blur)=\"onBlurInput()\"\n    />\n  </ng-template>\n</div>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }], { align: [{
            type: Input,
            args: ['p-align']
        }], freeze: [{
            type: Input,
            args: ['p-freeze']
        }], tabIndex: [{
            type: Input,
            args: ['p-tab-index']
        }], position: [{
            type: Input,
            args: ['p-position']
        }], readonly: [{
            type: Input,
            args: ['p-readonly']
        }], required: [{
            type: Input,
            args: ['p-required']
        }], valueChange: [{
            type: Output,
            args: ['p-valueChange']
        }], inputElement: [{
            type: ViewChild,
            args: ['inputElement']
        }], contentElement: [{
            type: ViewChild,
            args: ['contentElement']
        }], width: [{
            type: Input,
            args: ['p-width']
        }], value: [{
            type: Input,
            args: ['p-value']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoGridCellComponent, { className: "PoGridCellComponent", filePath: "lib/components/po-grid/po-grid-cell/po-grid-cell.component.ts", lineNumber: 7 }); })();
//# sourceMappingURL=data:application/json;base64,