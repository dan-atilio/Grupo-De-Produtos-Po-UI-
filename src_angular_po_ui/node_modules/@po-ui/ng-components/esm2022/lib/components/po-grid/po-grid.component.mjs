import { Component, Input, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./po-grid-cell-action/po-grid-cell-action.component";
import * as i3 from "./po-grid-cell/po-grid-cell.component";
import * as i4 from "./po-grid-head/po-grid-head.component";
const _c0 = ["table"];
const _c1 = ["wrapper"];
function PoGridComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div");
    i0.ɵɵtext(1);
    i0.ɵɵelement(2, "br");
    i0.ɵɵtext(3);
    i0.ɵɵelement(4, "br");
    i0.ɵɵtext(5);
    i0.ɵɵelement(6, "br")(7, "hr");
    i0.ɵɵtext(8);
    i0.ɵɵpipe(9, "json");
    i0.ɵɵelement(10, "hr");
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵtextInterpolate2(" lastCell: ", ctx_r1.lastCell, " | currencyCell: ", ctx_r1.currencyCell, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate2(" lastRow: ", ctx_r1.lastRow, " | currencyRow: ", ctx_r1.currencyRow, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵtextInterpolate2(" lastColumn: ", ctx_r1.lastColumn, " | currencyColumn: ", ctx_r1.currencyColumn, " ");
    i0.ɵɵadvance(3);
    i0.ɵɵtextInterpolate1(" currencyObj: ", i0.ɵɵpipeBind1(9, 7, ctx_r1.currencyObj), " ");
} }
function PoGridComponent_div_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoGridComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 14);
    i0.ɵɵtemplate(1, PoGridComponent_div_7_ng_container_1_Template, 1, 0, "ng-container", 9);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r7 = i0.ɵɵreference(12);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", _r7);
} }
function PoGridComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoGridComponent_div_10_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoGridComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 15);
    i0.ɵɵtemplate(1, PoGridComponent_div_10_ng_container_1_Template, 1, 0, "ng-container", 9);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    i0.ɵɵnextContext();
    const _r11 = i0.ɵɵreference(16);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", _r11);
} }
function PoGridComponent_ng_template_11_po_grid_head_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-grid-head", 21);
} if (rf & 2) {
    const column_r16 = ctx.$implicit;
    const i_r17 = ctx.index;
    i0.ɵɵstyleProp("width", column_r16.cssWidth)("max-width", column_r16.cssWidth)("min-width", column_r16.cssWidth);
    i0.ɵɵpropertyInterpolate("p-position", "0-" + i_r17);
    i0.ɵɵproperty("p-width", column_r16.width)("p-align", column_r16.align)("p-title", column_r16.label);
} }
function PoGridComponent_ng_template_11_div_5_po_grid_cell_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-grid-cell", 24);
    i0.ɵɵtwoWayListener("p-valueChange", function PoGridComponent_ng_template_11_div_5_po_grid_cell_1_Template_po_grid_cell_p_valueChange_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r25); const column_r21 = restoredCtx.$implicit; const row_r18 = i0.ɵɵnextContext().$implicit; i0.ɵɵtwoWayBindingSet(row_r18[column_r21.property], $event) || (row_r18[column_r21.property] = $event); return i0.ɵɵresetView($event); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r21 = ctx.$implicit;
    const i_r22 = ctx.index;
    const ctx_r26 = i0.ɵɵnextContext();
    const j_r19 = ctx_r26.index;
    const row_r18 = ctx_r26.$implicit;
    i0.ɵɵstyleProp("width", column_r21.cssWidth)("max-width", column_r21.cssWidth)("min-width", column_r21.cssWidth);
    i0.ɵɵpropertyInterpolate("p-position", j_r19 + 1 + "-" + i_r22);
    i0.ɵɵproperty("p-align", column_r21.align)("p-readonly", column_r21.readonly)("p-required", column_r21.required)("p-width", column_r21.width);
    i0.ɵɵtwoWayProperty("p-value", row_r18[column_r21.property]);
} }
function PoGridComponent_ng_template_11_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r28 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 22);
    i0.ɵɵlistener("keydown.control.delete", function PoGridComponent_ng_template_11_div_5_Template_div_keydown_control_delete_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r28); const row_r18 = restoredCtx.$implicit; const ctx_r27 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r27.removeRow($event, row_r18)); })("keydown.esc", function PoGridComponent_ng_template_11_div_5_Template_div_keydown_esc_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r28); const row_r18 = restoredCtx.$implicit; const ctx_r29 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r29.cancelRow($event, row_r18)); });
    i0.ɵɵtemplate(1, PoGridComponent_ng_template_11_div_5_po_grid_cell_1_Template, 1, 12, "po-grid-cell", 23);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r15.freezeColumns);
} }
function PoGridComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 16)(1, "div", 17)(2, "div", 18);
    i0.ɵɵtemplate(3, PoGridComponent_ng_template_11_po_grid_head_3_Template, 1, 10, "po-grid-head", 19);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "div", 4);
    i0.ɵɵtemplate(5, PoGridComponent_ng_template_11_div_5_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r6.freezeColumns);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r6.data);
} }
function PoGridComponent_ng_template_13_po_grid_head_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-grid-head", 27);
} if (rf & 2) {
    const column_r32 = ctx.$implicit;
    const i_r33 = ctx.index;
    const ctx_r30 = i0.ɵɵnextContext(2);
    i0.ɵɵstyleProp("width", column_r32.cssWidth)("max-width", column_r32.cssWidth)("min-width", column_r32.cssWidth);
    i0.ɵɵpropertyInterpolate("p-position", "0-" + (i_r33 + ctx_r30.freezeColumns.length));
    i0.ɵɵproperty("p-align", column_r32.align)("p-title", column_r32.label)("p-width", column_r32.width);
} }
function PoGridComponent_ng_template_13_div_5_po_grid_cell_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-grid-cell", 29);
    i0.ɵɵtwoWayListener("p-valueChange", function PoGridComponent_ng_template_13_div_5_po_grid_cell_1_Template_po_grid_cell_p_valueChange_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r41); const column_r37 = restoredCtx.$implicit; const row_r34 = i0.ɵɵnextContext().$implicit; i0.ɵɵtwoWayBindingSet(row_r34[column_r37.property], $event) || (row_r34[column_r37.property] = $event); return i0.ɵɵresetView($event); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r37 = ctx.$implicit;
    const i_r38 = ctx.index;
    const ctx_r42 = i0.ɵɵnextContext();
    const j_r35 = ctx_r42.index;
    const row_r34 = ctx_r42.$implicit;
    const ctx_r36 = i0.ɵɵnextContext(2);
    i0.ɵɵstyleProp("width", column_r37.cssWidth)("max-width", column_r37.cssWidth)("min-width", column_r37.cssWidth);
    i0.ɵɵpropertyInterpolate("p-position", j_r35 + 1 + "-" + (i_r38 + ctx_r36.freezeColumns.length));
    i0.ɵɵproperty("p-align", column_r37.align)("p-readonly", column_r37.readonly)("p-required", column_r37.required);
    i0.ɵɵtwoWayProperty("p-value", row_r34[column_r37.property]);
    i0.ɵɵproperty("p-width", column_r37.width);
} }
function PoGridComponent_ng_template_13_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r44 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 22);
    i0.ɵɵlistener("keydown.control.delete", function PoGridComponent_ng_template_13_div_5_Template_div_keydown_control_delete_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r44); const row_r34 = restoredCtx.$implicit; const ctx_r43 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r43.removeRow($event, row_r34)); })("keydown.esc", function PoGridComponent_ng_template_13_div_5_Template_div_keydown_esc_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r44); const row_r34 = restoredCtx.$implicit; const ctx_r45 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r45.cancelRow($event, row_r34)); });
    i0.ɵɵtemplate(1, PoGridComponent_ng_template_13_div_5_po_grid_cell_1_Template, 1, 12, "po-grid-cell", 28);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r31 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r31.columns);
} }
function PoGridComponent_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 25)(1, "div", 17)(2, "div", 18);
    i0.ɵɵtemplate(3, PoGridComponent_ng_template_13_po_grid_head_3_Template, 1, 10, "po-grid-head", 26);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "div", 4);
    i0.ɵɵtemplate(5, PoGridComponent_ng_template_13_div_5_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r8 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r8.columns);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r8.data);
} }
function PoGridComponent_ng_template_15_po_grid_head_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-grid-head", 32);
} if (rf & 2) {
    const column_r48 = ctx.$implicit;
    const i_r49 = ctx.index;
    const ctx_r46 = i0.ɵɵnextContext(2);
    i0.ɵɵpropertyInterpolate("p-position", "0-" + (i_r49 + ctx_r46.freezeColumns.length + ctx_r46.columns.length));
    i0.ɵɵproperty("p-title", column_r48.label)("p-align", column_r48.align);
} }
function PoGridComponent_ng_template_15_div_5_po_grid_cell_action_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-grid-cell-action", 34);
} if (rf & 2) {
    const column_r53 = ctx.$implicit;
    const i_r54 = ctx.index;
    const ctx_r55 = i0.ɵɵnextContext();
    const j_r51 = ctx_r55.index;
    const row_r50 = ctx_r55.$implicit;
    const ctx_r52 = i0.ɵɵnextContext(2);
    i0.ɵɵpropertyInterpolate("p-position", j_r51 + 1 + "-" + (i_r54 + ctx_r52.freezeColumns.length + ctx_r52.columns.length));
    i0.ɵɵproperty("p-value", row_r50[column_r53.property]);
} }
function PoGridComponent_ng_template_15_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r57 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 22);
    i0.ɵɵlistener("keydown.control.delete", function PoGridComponent_ng_template_15_div_5_Template_div_keydown_control_delete_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r57); const row_r50 = restoredCtx.$implicit; const ctx_r56 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r56.removeRow($event, row_r50)); })("keydown.esc", function PoGridComponent_ng_template_15_div_5_Template_div_keydown_esc_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r57); const row_r50 = restoredCtx.$implicit; const ctx_r58 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r58.cancelRow($event, row_r50)); });
    i0.ɵɵtemplate(1, PoGridComponent_ng_template_15_div_5_po_grid_cell_action_1_Template, 1, 2, "po-grid-cell-action", 33);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r47 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngForOf", ctx_r47.actionColumns);
} }
function PoGridComponent_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 30)(1, "div", 17)(2, "div", 18);
    i0.ɵɵtemplate(3, PoGridComponent_ng_template_15_po_grid_head_3_Template, 1, 3, "po-grid-head", 31);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(4, "div", 4);
    i0.ɵɵtemplate(5, PoGridComponent_ng_template_15_div_5_Template, 2, 1, "div", 20);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r10 = i0.ɵɵnextContext();
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngForOf", ctx_r10.actionColumns);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r10.data);
} }
/**
 * @description
 *
 * > Componente em desenvolvimento, podendo haver BREAKING CHANGES nas próximas versões.
 *
 * Componente grid.
 *
 * Ações / atalhos:
 *
 * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;
 * - ARROW-DOWN: Navega para celula inferior;
 * - ARROW-RIGHT: Navega para celula direita;
 * - ARROW-LEFT: Navega para celula esquerda;
 * - TAB: Navega para próxima celula;
 * - SHIFT+TAB: Navega para celula anterior;
 * - CTRL+DEL: Remove linha;
 * - DEL/BACKSPACE: Limpa celula;
 * - ENTER: Edita linha com valor atual/Confirma edição da celula;
 * - DOUBLE-CLICK: Edita linha com valor atual;
 * - ESC: Cancela edição da celula / Cancela inserção de linhas em branco;
 * - A..Z/0..9: Inicia edição com valor em branco.
 *
 * @example
 *
 * <example name="po-grid-basic" title="PO Grid Basic">
 *  <file name="sample-po-grid-basic/sample-po-grid-basic.component.html"> </file>
 *  <file name="sample-po-grid-basic/sample-po-grid-basic.component.ts"> </file>
 * </example>
 */
export class PoGridComponent {
    changeDetectorRef;
    elRef;
    tableElement;
    tableWrapper;
    /**
     * @description
     *
     * Ações disparadas quando uma linha do grid é manipulada.
     */
    rowActions = {};
    /**
     * Lista com os dados que serão exibidos no grid.
     */
    data = [];
    lastCell = '0-0';
    lastRow = 0;
    lastColumn = 0;
    currencyCell = '0-0';
    currencyRow = 0;
    currencyColumn = 0;
    currencyObj;
    logger = false;
    width = '100%';
    widporeeze = 0;
    widthActions = 0;
    resizeListener;
    timeoutResize;
    _columns = [];
    /**
     * Colunas exibidas no grid.
     */
    set columns(value) {
        this._columns = [...value];
        this._columns.forEach(column => {
            column.label = column.label || column.property;
            if (column.freeze === true) {
                column.cssWidth = `${column.width || 100}px`;
            }
            else {
                column.cssWidth = column.width ? `${column.width}px` : '100%';
            }
        });
    }
    get columns() {
        return this._columns.filter(column => column.freeze !== true && column.action !== true);
    }
    constructor(changeDetectorRef, elRef, renderer) {
        this.changeDetectorRef = changeDetectorRef;
        this.elRef = elRef;
        this.debounceResize();
        this.resizeListener = renderer.listen('window', 'resize', (event) => {
            this.debounceResize();
        });
    }
    ngOnDestroy() {
        if (this.resizeListener) {
            this.resizeListener();
        }
    }
    get freezeColumns() {
        const freezeColumns = this._columns.filter(column => column.freeze === true);
        this.widporeeze = freezeColumns.reduce((prev, current) => prev + (current.width || 100), 0);
        return freezeColumns;
    }
    get actionColumns() {
        const actionsColumns = this._columns.filter(column => column.action === true);
        this.widthActions = actionsColumns.length > 0 ? 56 : 0;
        return actionsColumns;
    }
    cancelRow(event, row) {
        const el = this.getEventPath(event).find(element => element.id);
        if (!el) {
            return;
        }
        const [x] = el.id.split('-');
        if (this.isEmptyRow(x)) {
            if (!this.removeRow(event, row)) {
                return;
            }
            this.currencyObj = Object.assign({}, this.data[this.currencyRow - 1]);
        }
        else {
            this.data[+x - 1] = Object.assign({}, this.currencyObj);
            setTimeout(() => this.selectCell(this.currencyRow, this.currencyColumn));
        }
    }
    removeRow(event, row) {
        if (this.rowActions.beforeRemove && !this.rowActions.beforeRemove(Object.assign({}, row))) {
            return false;
        }
        const index = this.data.indexOf(row);
        this.data.splice(index, 1);
        this.changeDetectorRef.detectChanges();
        if (this.data.length === 0 || index === this.data.length) {
            this.selectCell(this.currencyRow - 1, this.currencyColumn);
        }
        else {
            this.selectCell(this.currencyRow, this.currencyColumn);
        }
        return true;
    }
    tableKeydown(event, direction) {
        let [row, col] = event.target.id.split('-');
        row = +row;
        col = +col;
        let prow = +row;
        let pcol = +col;
        if (direction === 'down') {
            if (row <= this.data.length) {
                prow++;
            }
            if (row === this.data.length) {
                if (row === 0 || !this.isEmptyRow(row)) {
                    if (this.saveRow(row)) {
                        if (!this.insertRow()) {
                            return;
                        }
                    }
                    else {
                        return;
                    }
                }
                else {
                    prow--;
                }
            }
        }
        else if (direction === 'up' && row > 0) {
            prow--;
        }
        else if (direction === 'left' && col > 0) {
            pcol--;
        }
        else if (direction === 'right' && col < this._columns.length - 1) {
            pcol++;
        }
        else if (direction === 'next') {
            if (col < this._columns.length - 1) {
                pcol++;
                event.preventDefault();
            }
            else if (row < this.data.length) {
                pcol = 0;
                prow++;
                event.preventDefault();
            }
        }
        else if (direction === 'prior') {
            if (col > 0) {
                pcol--;
                event.preventDefault();
            }
            else if (row > 0) {
                pcol = this._columns.length - 1;
                prow--;
                event.preventDefault();
            }
        }
        if (this.currencyCell === `${prow}-${pcol}`) {
            return;
        }
        if (prow !== this.currencyRow && row > 0 && this.data.length >= row) {
            if (!this.isEmptyRow(row)) {
                if (!this.saveRow(row)) {
                    return;
                }
            }
            else {
                if (!this.removeRow(event, row)) {
                    return;
                }
            }
        }
        if (this.currencyRow !== prow) {
            this.currencyObj = Object.assign({}, this.data[prow - 1]);
        }
        this.lastCell = event.target.id;
        this.lastRow = row;
        this.lastColumn = col;
        this.selectCell(prow, pcol);
    }
    tableClick(event) {
        const el = this.getEventPath(event).find(element => element.id);
        if (!el) {
            this.selectCell(this.currencyRow, this.currencyColumn);
            return;
        }
        if (this.currencyCell === el.id) {
            return;
        }
        const [row, col] = el.id.split('-');
        const prow = +row;
        const pcol = +col;
        if (prow !== this.currencyRow) {
            if (this.currencyRow > 0) {
                if (!this.isEmptyRow(this.currencyRow)) {
                    if (!this.saveRow(this.currencyRow)) {
                        this.selectCell(this.currencyRow, this.currencyColumn);
                        return;
                    }
                }
                else {
                    if (!this.removeRow(event, row)) {
                        return;
                    }
                }
            }
            this.currencyObj = Object.assign({}, this.data[prow - 1]);
        }
        this.lastCell = this.currencyCell;
        this.lastRow = this.currencyRow;
        this.lastColumn = this.currencyColumn;
        this.currencyCell = el.id;
        this.currencyRow = prow;
        this.currencyColumn = pcol;
    }
    saveRow(row) {
        const obj = this.data[row - 1];
        if (!Object.keys(obj).some(prop => obj[prop] !== this.currencyObj[prop])) {
            return true;
        }
        if (this.rowActions.beforeSave && !this.rowActions.beforeSave(obj, this.currencyObj)) {
            return false;
        }
        const requireds = [];
        this.columns.forEach(column => {
            if (column.required === true && !obj[column.property]) {
                requireds.push(column.property);
            }
        });
        return requireds.length === 0;
    }
    insertRow() {
        const obj = {};
        if (this.rowActions.beforeInsert && !this.rowActions.beforeInsert(obj)) {
            return false;
        }
        this.data.push(obj);
        this.changeDetectorRef.detectChanges();
        return true;
    }
    isEmptyRow(row) {
        const obj = this.data[row - 1];
        if (!obj) {
            // title
            return false;
        }
        const filled = Object.keys(obj).some(property => obj[property]);
        return !filled;
    }
    selectCell(row, col) {
        const nextCell = this.elRef.nativeElement.querySelector(`[id='${row}-${col}']`);
        if (nextCell) {
            this.currencyCell = `${row}-${col}`;
            this.currencyRow = row;
            this.currencyColumn = col;
            nextCell.focus();
        }
    }
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(() => {
            const widthTableWrapper = this.tableWrapper.nativeElement.offsetWidth;
            this.width = `${widthTableWrapper - (this.widporeeze + 8) - this.widthActions}px`;
        }, 100);
    }
    getEventPath(event) {
        // firefox do not have support to event.path
        return event.path || event.composedPath();
    }
    static ɵfac = function PoGridComponent_Factory(t) { return new (t || PoGridComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoGridComponent, selectors: [["po-grid"]], viewQuery: function PoGridComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
            i0.ɵɵviewQuery(_c1, 7);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableWrapper = _t.first);
        } }, inputs: { rowActions: [i0.ɵɵInputFlags.None, "p-row-actions", "rowActions"], data: [i0.ɵɵInputFlags.None, "p-data", "data"], columns: [i0.ɵɵInputFlags.None, "p-columns", "columns"] }, decls: 17, vars: 10, consts: [[1, "po-grid-wrapper", "po-grid-row-wrapper"], ["wrapper", ""], [4, "ngIf"], [1, "po-grid"], [1, "po-grid-body"], [1, "po-grid-row", 3, "keydown.arrowup", "keydown.arrowdown", "keydown.arrowleft", "keydown.arrowright", "keydown.tab", "keydown.shift.tab", "click", "contextmenu", "dblclick"], ["table", ""], ["class", "po-grid-cell po-grid-cell-freeze", 4, "ngIf"], [1, "po-grid-cell", "po-grid-cell-normal"], [4, "ngTemplateOutlet"], ["class", "po-grid-cell po-grid-cell-action", 4, "ngIf"], ["divFreezeColumns", ""], ["divColumns", ""], ["divActionColumns", ""], [1, "po-grid-cell", "po-grid-cell-freeze"], [1, "po-grid-cell", "po-grid-cell-action"], [1, "po-grid", "po-grid-freeze"], [1, "po-grid-header-group"], [1, "po-grid-row"], ["class", "po-grid-title", "p-freeze", "true", 3, "width", "max-width", "min-width", "p-position", "p-width", "p-align", "p-title", 4, "ngFor", "ngForOf"], ["class", "po-grid-row", 3, "keydown.control.delete", "keydown.esc", 4, "ngFor", "ngForOf"], ["p-freeze", "true", 1, "po-grid-title", 3, "p-position", "p-width", "p-align", "p-title"], [1, "po-grid-row", 3, "keydown.control.delete", "keydown.esc"], ["class", "po-grid-cell", "p-freeze", "true", 3, "width", "max-width", "min-width", "p-align", "p-readonly", "p-required", "p-position", "p-width", "p-value", "p-valueChange", 4, "ngFor", "ngForOf"], ["p-freeze", "true", 1, "po-grid-cell", 3, "p-align", "p-readonly", "p-required", "p-position", "p-width", "p-value", "p-valueChange"], [1, "po-grid", "po-grid-normal"], ["class", "po-grid-title", 3, "width", "max-width", "min-width", "p-align", "p-position", "p-title", "p-width", 4, "ngFor", "ngForOf"], [1, "po-grid-title", 3, "p-align", "p-position", "p-title", "p-width"], ["class", "po-grid-cell", 3, "width", "max-width", "min-width", "p-align", "p-readonly", "p-required", "p-position", "p-value", "p-width", "p-valueChange", 4, "ngFor", "ngForOf"], [1, "po-grid-cell", 3, "p-align", "p-readonly", "p-required", "p-position", "p-value", "p-width", "p-valueChange"], [1, "po-grid", "po-grid-actions"], ["class", "po-grid-title", 3, "p-position", "p-title", "p-align", 4, "ngFor", "ngForOf"], [1, "po-grid-title", 3, "p-position", "p-title", "p-align"], ["class", "po-grid-cell", 3, "p-position", "p-value", 4, "ngFor", "ngForOf"], [1, "po-grid-cell", 3, "p-position", "p-value"]], template: function PoGridComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0, 1);
            i0.ɵɵtemplate(2, PoGridComponent_div_2_Template, 11, 9, "div", 2);
            i0.ɵɵelementStart(3, "div", 3)(4, "div", 4)(5, "div", 5, 6);
            i0.ɵɵlistener("keydown.arrowup", function PoGridComponent_Template_div_keydown_arrowup_5_listener($event) { return ctx.tableKeydown($event, "up"); })("keydown.arrowdown", function PoGridComponent_Template_div_keydown_arrowdown_5_listener($event) { return ctx.tableKeydown($event, "down"); })("keydown.arrowleft", function PoGridComponent_Template_div_keydown_arrowleft_5_listener($event) { return ctx.tableKeydown($event, "left"); })("keydown.arrowright", function PoGridComponent_Template_div_keydown_arrowright_5_listener($event) { return ctx.tableKeydown($event, "right"); })("keydown.tab", function PoGridComponent_Template_div_keydown_tab_5_listener($event) { return ctx.tableKeydown($event, "next"); })("keydown.shift.tab", function PoGridComponent_Template_div_keydown_shift_tab_5_listener($event) { return ctx.tableKeydown($event, "prior"); })("click", function PoGridComponent_Template_div_click_5_listener($event) { return ctx.tableClick($event); })("contextmenu", function PoGridComponent_Template_div_contextmenu_5_listener($event) { return ctx.tableClick($event); })("dblclick", function PoGridComponent_Template_div_dblclick_5_listener($event) { return ctx.tableClick($event); });
            i0.ɵɵtemplate(7, PoGridComponent_div_7_Template, 2, 1, "div", 7);
            i0.ɵɵelementStart(8, "div", 8);
            i0.ɵɵtemplate(9, PoGridComponent_ng_container_9_Template, 1, 0, "ng-container", 9);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(10, PoGridComponent_div_10_Template, 2, 1, "div", 10);
            i0.ɵɵelementEnd()()()();
            i0.ɵɵtemplate(11, PoGridComponent_ng_template_11_Template, 6, 2, "ng-template", null, 11, i0.ɵɵtemplateRefExtractor)(13, PoGridComponent_ng_template_13_Template, 6, 2, "ng-template", null, 12, i0.ɵɵtemplateRefExtractor)(15, PoGridComponent_ng_template_15_Template, 6, 2, "ng-template", null, 13, i0.ɵɵtemplateRefExtractor);
        } if (rf & 2) {
            const _r9 = i0.ɵɵreference(14);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.logger);
            i0.ɵɵadvance(5);
            i0.ɵɵproperty("ngIf", ctx.freezeColumns.length > 0);
            i0.ɵɵadvance();
            i0.ɵɵstyleProp("width", ctx.width)("max-width", ctx.width)("min-width", ctx.width);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngTemplateOutlet", _r9);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.actionColumns.length > 0);
        } }, dependencies: [i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i2.PoGridCellActionComponent, i3.PoGridCellComponent, i4.PoGridHeadComponent, i1.JsonPipe], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoGridComponent, [{
        type: Component,
        args: [{ selector: 'po-grid', template: "<div class=\"po-grid-wrapper po-grid-row-wrapper\" #wrapper>\n  <div *ngIf=\"logger\">\n    lastCell: {{ lastCell }} | currencyCell: {{ currencyCell }} <br />\n    lastRow: {{ lastRow }} | currencyRow: {{ currencyRow }} <br />\n    lastColumn: {{ lastColumn }} | currencyColumn: {{ currencyColumn }} <br />\n    <hr />\n    currencyObj: {{ currencyObj | json }}\n    <hr />\n  </div>\n\n  <div class=\"po-grid\">\n    <div class=\"po-grid-body\">\n      <div\n        class=\"po-grid-row\"\n        #table\n        (keydown.arrowup)=\"tableKeydown($event, 'up')\"\n        (keydown.arrowdown)=\"tableKeydown($event, 'down')\"\n        (keydown.arrowleft)=\"tableKeydown($event, 'left')\"\n        (keydown.arrowright)=\"tableKeydown($event, 'right')\"\n        (keydown.tab)=\"tableKeydown($event, 'next')\"\n        (keydown.shift.tab)=\"tableKeydown($event, 'prior')\"\n        (click)=\"tableClick($event)\"\n        (contextmenu)=\"tableClick($event)\"\n        (dblclick)=\"tableClick($event)\"\n      >\n        <div class=\"po-grid-cell po-grid-cell-freeze\" *ngIf=\"freezeColumns.length > 0\">\n          <ng-container *ngTemplateOutlet=\"divFreezeColumns\"></ng-container>\n        </div>\n\n        <div\n          class=\"po-grid-cell po-grid-cell-normal\"\n          [style.width]=\"width\"\n          [style.max-width]=\"width\"\n          [style.min-width]=\"width\"\n        >\n          <ng-container *ngTemplateOutlet=\"divColumns\"></ng-container>\n        </div>\n\n        <div class=\"po-grid-cell po-grid-cell-action\" *ngIf=\"actionColumns.length > 0\">\n          <ng-container *ngTemplateOutlet=\"divActionColumns\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Coluna com as colunas congeladas -->\n<ng-template #divFreezeColumns>\n  <div class=\"po-grid po-grid-freeze\">\n    <div class=\"po-grid-header-group\">\n      <div class=\"po-grid-row\">\n        <po-grid-head\n          *ngFor=\"let column of freezeColumns; index as i\"\n          class=\"po-grid-title\"\n          [style.width]=\"column.cssWidth\"\n          [style.max-width]=\"column.cssWidth\"\n          [style.min-width]=\"column.cssWidth\"\n          p-freeze=\"true\"\n          p-position=\"{{ '0-' + i }}\"\n          [p-width]=\"column.width\"\n          [p-align]=\"column.align\"\n          [p-title]=\"column.label\"\n        >\n        </po-grid-head>\n      </div>\n    </div>\n\n    <div class=\"po-grid-body\">\n      <div\n        class=\"po-grid-row\"\n        *ngFor=\"let row of data; index as j\"\n        (keydown.control.delete)=\"removeRow($event, row)\"\n        (keydown.esc)=\"cancelRow($event, row)\"\n      >\n        <po-grid-cell\n          *ngFor=\"let column of freezeColumns; index as i\"\n          class=\"po-grid-cell\"\n          [style.width]=\"column.cssWidth\"\n          [style.max-width]=\"column.cssWidth\"\n          [style.min-width]=\"column.cssWidth\"\n          p-freeze=\"true\"\n          [p-align]=\"column.align\"\n          [p-readonly]=\"column.readonly\"\n          [p-required]=\"column.required\"\n          p-position=\"{{ j + 1 + '-' + i }}\"\n          [p-width]=\"column.width\"\n          [(p-value)]=\"row[column.property]\"\n        >\n        </po-grid-cell>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<!-- FIM: Coluna com as colunas congeladas -->\n\n<!-- Coluna com as colunas nornais -->\n<ng-template #divColumns>\n  <div class=\"po-grid po-grid-normal\">\n    <div class=\"po-grid-header-group\">\n      <div class=\"po-grid-row\">\n        <po-grid-head\n          *ngFor=\"let column of columns; index as i\"\n          class=\"po-grid-title\"\n          [style.width]=\"column.cssWidth\"\n          [style.max-width]=\"column.cssWidth\"\n          [style.min-width]=\"column.cssWidth\"\n          [p-align]=\"column.align\"\n          p-position=\"{{ '0-' + (i + freezeColumns.length) }}\"\n          [p-title]=\"column.label\"\n          [p-width]=\"column.width\"\n        >\n        </po-grid-head>\n      </div>\n    </div>\n\n    <div class=\"po-grid-body\">\n      <div\n        class=\"po-grid-row\"\n        *ngFor=\"let row of data; index as j\"\n        (keydown.control.delete)=\"removeRow($event, row)\"\n        (keydown.esc)=\"cancelRow($event, row)\"\n      >\n        <po-grid-cell\n          *ngFor=\"let column of columns; index as i\"\n          class=\"po-grid-cell\"\n          [style.width]=\"column.cssWidth\"\n          [style.max-width]=\"column.cssWidth\"\n          [style.min-width]=\"column.cssWidth\"\n          [p-align]=\"column.align\"\n          [p-readonly]=\"column.readonly\"\n          [p-required]=\"column.required\"\n          p-position=\"{{ j + 1 + '-' + (i + freezeColumns.length) }}\"\n          [(p-value)]=\"row[column.property]\"\n          [p-width]=\"column.width\"\n        >\n        </po-grid-cell>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<!-- FIM: Coluna com as colunas nornais -->\n\n<!-- Coluna com as colunas de a\u00E7\u00E3o -->\n<ng-template #divActionColumns>\n  <div class=\"po-grid po-grid-actions\">\n    <div class=\"po-grid-header-group\">\n      <div class=\"po-grid-row\">\n        <po-grid-head\n          *ngFor=\"let column of actionColumns; index as i\"\n          class=\"po-grid-title\"\n          p-position=\"{{ '0-' + (i + freezeColumns.length + columns.length) }}\"\n          [p-title]=\"column.label\"\n          [p-align]=\"column.align\"\n        >\n        </po-grid-head>\n      </div>\n    </div>\n\n    <div class=\"po-grid-body\">\n      <div\n        class=\"po-grid-row\"\n        *ngFor=\"let row of data; index as j\"\n        (keydown.control.delete)=\"removeRow($event, row)\"\n        (keydown.esc)=\"cancelRow($event, row)\"\n      >\n        <po-grid-cell-action\n          *ngFor=\"let column of actionColumns; index as i\"\n          class=\"po-grid-cell\"\n          p-position=\"{{ j + 1 + '-' + (i + freezeColumns.length + columns.length) }}\"\n          [p-value]=\"row[column.property]\"\n        >\n        </po-grid-cell-action>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<!-- FIM: Coluna com as colunas de a\u00E7\u00E3o -->\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }], { tableElement: [{
            type: ViewChild,
            args: ['table', { static: true }]
        }], tableWrapper: [{
            type: ViewChild,
            args: ['wrapper', { static: true }]
        }], rowActions: [{
            type: Input,
            args: ['p-row-actions']
        }], data: [{
            type: Input,
            args: ['p-data']
        }], columns: [{
            type: Input,
            args: ['p-columns']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoGridComponent, { className: "PoGridComponent", filePath: "lib/components/po-grid/po-grid.component.ts", lineNumber: 38 }); })();
//# sourceMappingURL=data:application/json;base64,