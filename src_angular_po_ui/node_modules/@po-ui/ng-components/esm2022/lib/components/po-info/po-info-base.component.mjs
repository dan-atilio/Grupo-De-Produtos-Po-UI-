import { Input, Directive } from '@angular/core';
import { PoInfoOrientation } from './po-info-orietation.enum';
import * as i0 from "@angular/core";
const poInfoOrientationDefault = PoInfoOrientation.Vertical;
export class PoInfoBaseComponent {
    /** Valor do rótulo a ser exibido. */
    label;
    /**
     * Ao informar uma URL, o conteúdo será exibido na forma de um *link* e ao ser clicado será redirecionado para a URL informada.
     *
     * > Caso informar `http://` será aberto uma nova aba.
     * Caso informar um caminho relativo, exemplo: `/customers`, será aberto na aba atual.
     *
     */
    url;
    /** Valor do conteúdo a ser exibido. */
    value;
    poInfoOrientation = PoInfoOrientation;
    _labelSize;
    _orientation = poInfoOrientationDefault;
    /**
     * @optional
     *
     * @description
     *
     * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `p-label` quando o componente for
     * utilizado na orientação horizontal.
     *
     * Valores válidos:
     *  - `[1 .. 11]`
     *
     * > A propriedade `p-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.
     */
    set labelSize(value) {
        if (isNaN(parseInt(value, 10))) {
            this._labelSize = undefined;
        }
        else {
            value = parseInt(value, 10);
            this._labelSize = value < 1 || value > 11 ? undefined : value;
        }
    }
    get labelSize() {
        return this._labelSize;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define o layout de exibição.
     *
     * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informações exibidas.
     *
     * @default `vertical`
     */
    set orientation(value) {
        this._orientation = Object.values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;
    }
    get orientation() {
        return this._orientation;
    }
    static ɵfac = function PoInfoBaseComponent_Factory(t) { return new (t || PoInfoBaseComponent)(); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoInfoBaseComponent, inputs: { label: [i0.ɵɵInputFlags.None, "p-label", "label"], url: [i0.ɵɵInputFlags.None, "p-url", "url"], value: [i0.ɵɵInputFlags.None, "p-value", "value"], labelSize: [i0.ɵɵInputFlags.None, "p-label-size", "labelSize"], orientation: [i0.ɵɵInputFlags.None, "p-orientation", "orientation"] } });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoInfoBaseComponent, [{
        type: Directive
    }], null, { label: [{
            type: Input,
            args: ['p-label']
        }], url: [{
            type: Input,
            args: ['p-url']
        }], value: [{
            type: Input,
            args: ['p-value']
        }], labelSize: [{
            type: Input,
            args: ['p-label-size']
        }], orientation: [{
            type: Input,
            args: ['p-orientation']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taW5mby1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1pbmZvL3BvLWluZm8tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7O0FBRTlELE1BQU0sd0JBQXdCLEdBQUcsaUJBQWlCLENBQUMsUUFBUSxDQUFDO0FBRzVELE1BQU0sT0FBTyxtQkFBbUI7SUFDOUIscUNBQXFDO0lBQ25CLEtBQUssQ0FBUztJQUVoQzs7Ozs7O09BTUc7SUFDYSxHQUFHLENBQVU7SUFFN0IsdUNBQXVDO0lBQ3JCLEtBQUssQ0FBVTtJQUVqQixpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztJQUU5QyxVQUFVLENBQVM7SUFDbkIsWUFBWSxHQUFzQix3QkFBd0IsQ0FBQztJQUVuRTs7Ozs7Ozs7Ozs7O09BWUc7SUFDSCxJQUEyQixTQUFTLENBQUMsS0FBYTtRQUNoRCxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQU0sS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUU7WUFDbkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7U0FDN0I7YUFBTTtZQUNMLEtBQUssR0FBRyxRQUFRLENBQU0sS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRWpDLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxHQUFHLENBQUMsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztTQUMvRDtJQUNILENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7Ozs7Ozs7O09BVUc7SUFDSCxJQUE0QixXQUFXLENBQUMsS0FBd0I7UUFDOUQsSUFBSSxDQUFDLFlBQVksR0FBUyxNQUFPLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLHdCQUF3QixDQUFDO0lBQ2pILENBQUM7SUFDRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQzs2RUFoRVUsbUJBQW1COzZEQUFuQixtQkFBbUI7O2lGQUFuQixtQkFBbUI7Y0FEL0IsU0FBUztnQkFHVSxLQUFLO2tCQUF0QixLQUFLO21CQUFDLFNBQVM7WUFTQSxHQUFHO2tCQUFsQixLQUFLO21CQUFDLE9BQU87WUFHSSxLQUFLO2tCQUF0QixLQUFLO21CQUFDLFNBQVM7WUFvQlcsU0FBUztrQkFBbkMsS0FBSzttQkFBQyxjQUFjO1lBeUJPLFdBQVc7a0JBQXRDLEtBQUs7bUJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9JbmZvT3JpZW50YXRpb24gfSBmcm9tICcuL3BvLWluZm8tb3JpZXRhdGlvbi5lbnVtJztcblxuY29uc3QgcG9JbmZvT3JpZW50YXRpb25EZWZhdWx0ID0gUG9JbmZvT3JpZW50YXRpb24uVmVydGljYWw7XG5cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGNsYXNzIFBvSW5mb0Jhc2VDb21wb25lbnQge1xuICAvKiogVmFsb3IgZG8gcsOzdHVsbyBhIHNlciBleGliaWRvLiAqL1xuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBbyBpbmZvcm1hciB1bWEgVVJMLCBvIGNvbnRlw7pkbyBzZXLDoSBleGliaWRvIG5hIGZvcm1hIGRlIHVtICpsaW5rKiBlIGFvIHNlciBjbGljYWRvIHNlcsOhIHJlZGlyZWNpb25hZG8gcGFyYSBhIFVSTCBpbmZvcm1hZGEuXG4gICAqXG4gICAqID4gQ2FzbyBpbmZvcm1hciBgaHR0cDovL2Agc2Vyw6EgYWJlcnRvIHVtYSBub3ZhIGFiYS5cbiAgICogQ2FzbyBpbmZvcm1hciB1bSBjYW1pbmhvIHJlbGF0aXZvLCBleGVtcGxvOiBgL2N1c3RvbWVyc2AsIHNlcsOhIGFiZXJ0byBuYSBhYmEgYXR1YWwuXG4gICAqXG4gICAqL1xuICBASW5wdXQoJ3AtdXJsJykgdXJsPzogc3RyaW5nO1xuXG4gIC8qKiBWYWxvciBkbyBjb250ZcO6ZG8gYSBzZXIgZXhpYmlkby4gKi9cbiAgQElucHV0KCdwLXZhbHVlJykgdmFsdWU/OiBzdHJpbmc7XG5cbiAgcHVibGljIHJlYWRvbmx5IHBvSW5mb09yaWVudGF0aW9uID0gUG9JbmZvT3JpZW50YXRpb247XG5cbiAgcHJpdmF0ZSBfbGFiZWxTaXplOiBudW1iZXI7XG4gIHByaXZhdGUgX29yaWVudGF0aW9uOiBQb0luZm9PcmllbnRhdGlvbiA9IHBvSW5mb09yaWVudGF0aW9uRGVmYXVsdDtcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBRdWFudGlkYWRlIGRlIFtjb2x1bmFzXSgvZ3VpZGVzL2dyaWQtc3lzdGVtKSB1c2FkYXMgcGFyYSBhIGV4aWJpw6fDo28gZGEgYHAtbGFiZWxgIHF1YW5kbyBvIGNvbXBvbmVudGUgZm9yXG4gICAqIHV0aWxpemFkbyBuYSBvcmllbnRhw6fDo28gaG9yaXpvbnRhbC5cbiAgICpcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICogIC0gYFsxIC4uIDExXWBcbiAgICpcbiAgICogPiBBIHByb3ByaWVkYWRlIGBwLXZhbHVlYCByZWNlYmUgbyBuw7ptZXJvIGRlIGNvbHVuYXMgcmVzdGFudGVzLCBwb3IgZXhlbXBsbywgc2UgZGVmaW5pZG8gMyBjb2x1bmFzIGEgbWVzbWEgYXNzdW1lIDkgY29sdW5hcy5cbiAgICovXG4gIEBJbnB1dCgncC1sYWJlbC1zaXplJykgc2V0IGxhYmVsU2l6ZSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgaWYgKGlzTmFOKHBhcnNlSW50KDxhbnk+dmFsdWUsIDEwKSkpIHtcbiAgICAgIHRoaXMuX2xhYmVsU2l6ZSA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgPSBwYXJzZUludCg8YW55PnZhbHVlLCAxMCk7XG5cbiAgICAgIHRoaXMuX2xhYmVsU2l6ZSA9IHZhbHVlIDwgMSB8fCB2YWx1ZSA+IDExID8gdW5kZWZpbmVkIDogdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGxhYmVsU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9sYWJlbFNpemU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZWZpbmUgbyBsYXlvdXQgZGUgZXhpYmnDp8Ojby5cbiAgICpcbiAgICogPiBRdWFuZG8gZGVmaW5pZG8gbmEgaG9yaXpvbnRhbCwgcG9kZS1zZSB1dGlsaXphciBhIHByb3ByaWVkYWRlIGBwLWxhYmVsLXNpemVgIHBhcmEgdW0gbWFpb3IgY29udHJvbGUgZGFzIGluZm9ybWHDp8O1ZXMgZXhpYmlkYXMuXG4gICAqXG4gICAqIEBkZWZhdWx0IGB2ZXJ0aWNhbGBcbiAgICovXG4gIEBJbnB1dCgncC1vcmllbnRhdGlvbicpIHNldCBvcmllbnRhdGlvbih2YWx1ZTogUG9JbmZvT3JpZW50YXRpb24pIHtcbiAgICB0aGlzLl9vcmllbnRhdGlvbiA9ICg8YW55Pk9iamVjdCkudmFsdWVzKFBvSW5mb09yaWVudGF0aW9uKS5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IHBvSW5mb09yaWVudGF0aW9uRGVmYXVsdDtcbiAgfVxuICBnZXQgb3JpZW50YXRpb24oKTogUG9JbmZvT3JpZW50YXRpb24ge1xuICAgIHJldHVybiB0aGlzLl9vcmllbnRhdGlvbjtcbiAgfVxufVxuIl19