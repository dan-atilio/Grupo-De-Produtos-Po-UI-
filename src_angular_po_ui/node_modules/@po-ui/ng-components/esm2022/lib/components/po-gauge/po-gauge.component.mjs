import { Component, ElementRef, ViewChild } from '@angular/core';
import { PoGaugePadding } from './po-gauge-default-values.constant';
import { PoGaugeBaseComponent } from './po-gauge-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/po-color/po-color.service";
import * as i2 from "./po-gauge-title/po-gauge-title.component";
import * as i3 from "./po-gauge-legend/po-gauge-legend.component";
import * as i4 from "./po-gauge-svg/po-gauge-svg.component";
import * as i5 from "./po-gauge-description/po-gauge-description.component";
const _c0 = ["descriptionEl"];
const _c1 = ["legendEl"];
const _c2 = ["titleEl"];
const _c3 = ["svgEl"];
/**
 * @docsExtends PoGaugeBaseComponent
 *
 * @example
 *
 * <example name="po-gauge-basic" title="PO Gauge Basic">
 *  <file name="sample-po-gauge-basic/sample-po-gauge-basic.component.html"> </file>
 *  <file name="sample-po-gauge-basic/sample-po-gauge-basic.component.ts"> </file>
 * </example>
 * <example name="po-gauge-labs" title="PO Gauge Labs">
 *  <file name="sample-po-gauge-labs/sample-po-gauge-labs.component.html"> </file>
 *  <file name="sample-po-gauge-labs/sample-po-gauge-labs.component.ts"> </file>
 * </example>
 * <example name="po-gauge-summary" title="PO Gauge Summary">
 *  <file name="sample-po-gauge-summary/sample-po-gauge-summary.component.html"> </file>
 *  <file name="sample-po-gauge-summary/sample-po-gauge-summary.component.ts"> </file>
 * </example>
 */
export class PoGaugeComponent extends PoGaugeBaseComponent {
    colorService;
    changeDetector;
    descriptionEl;
    legendEl;
    titleEl;
    svgEl;
    svgContainer;
    isLoaded = false;
    constructor(colorService, changeDetector) {
        super(colorService);
        this.colorService = colorService;
        this.changeDetector = changeDetector;
    }
    get hasElementRef() {
        return !!this.svgEl?.nativeElement.offsetWidth;
    }
    get hasRanges() {
        return this.ranges.length > 0;
    }
    ngDoCheck() {
        if (!this.isLoaded && this.hasElementRef) {
            this.isLoaded = true;
            this.svgContainerSize();
        }
    }
    svgContainerSize() {
        if (this.svgEl?.nativeElement.offsetWidth) {
            this.changeDetector.detectChanges();
            const titleHeight = this.titleEl.nativeElement?.offsetHeight ?? 0;
            const legendHeight = this.legendEl.nativeElement?.offsetHeight ?? 0;
            const descriptionHeight = this.descriptionEl.nativeElement?.offsetHeight ?? 0;
            const height = this.height - titleHeight - legendHeight - descriptionHeight - PoGaugePadding * 2;
            const width = this.svgEl.nativeElement.offsetWidth;
            this.svgContainer = { width, height };
        }
    }
    static ɵfac = function PoGaugeComponent_Factory(t) { return new (t || PoGaugeComponent)(i0.ɵɵdirectiveInject(i1.PoColorService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoGaugeComponent, selectors: [["po-gauge"]], viewQuery: function PoGaugeComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5, ElementRef);
            i0.ɵɵviewQuery(_c1, 5, ElementRef);
            i0.ɵɵviewQuery(_c2, 5, ElementRef);
            i0.ɵɵviewQuery(_c3, 5, ElementRef);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.descriptionEl = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.legendEl = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleEl = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgEl = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 9, vars: 11, consts: [[1, "po-gauge-wrapper"], [3, "p-title"], ["titleEl", ""], [3, "p-description", "p-description-width", "p-has-ranges", "p-value"], ["descriptionEl", ""], [3, "p-container", "p-ranges", "p-value"], ["svgEl", ""], [3, "p-ranges"], ["legendEl", ""]], template: function PoGaugeComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵelement(1, "po-gauge-title", 1, 2)(3, "po-gauge-description", 3, 4)(5, "po-gauge-svg", 5, 6)(7, "po-gauge-legend", 7, 8);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵstyleProp("height", ctx.height, "px");
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-title", ctx.title);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("p-description", ctx.description)("p-description-width", ctx.height)("p-has-ranges", ctx.hasRanges)("p-value", ctx.value);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("p-container", ctx.svgContainer)("p-ranges", ctx.ranges)("p-value", ctx.value);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("p-ranges", ctx.ranges);
        } }, dependencies: [i2.PoGaugeTitleComponent, i3.PoGaugeLegendComponent, i4.PoGaugeSvgComponent, i5.PoGaugeDescriptionComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoGaugeComponent, [{
        type: Component,
        args: [{ selector: 'po-gauge', template: "<div class=\"po-gauge-wrapper\" [style.height.px]=\"height\">\n  <po-gauge-title #titleEl [p-title]=\"title\"></po-gauge-title>\n\n  <po-gauge-description\n    #descriptionEl\n    [p-description]=\"description\"\n    [p-description-width]=\"height\"\n    [p-has-ranges]=\"hasRanges\"\n    [p-value]=\"value\"\n  ></po-gauge-description>\n\n  <po-gauge-svg #svgEl [p-container]=\"svgContainer\" [p-ranges]=\"ranges\" [p-value]=\"value\"></po-gauge-svg>\n\n  <po-gauge-legend #legendEl [p-ranges]=\"ranges\"> </po-gauge-legend>\n</div>\n" }]
    }], () => [{ type: i1.PoColorService }, { type: i0.ChangeDetectorRef }], { descriptionEl: [{
            type: ViewChild,
            args: ['descriptionEl', { read: ElementRef }]
        }], legendEl: [{
            type: ViewChild,
            args: ['legendEl', { read: ElementRef }]
        }], titleEl: [{
            type: ViewChild,
            args: ['titleEl', { read: ElementRef }]
        }], svgEl: [{
            type: ViewChild,
            args: ['svgEl', { read: ElementRef }]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoGaugeComponent, { className: "PoGaugeComponent", filePath: "lib/components/po-gauge/po-gauge.component.ts", lineNumber: 32 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ2F1Z2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWdhdWdlL3BvLWdhdWdlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1nYXVnZS9wby1nYXVnZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXFCLFNBQVMsRUFBVyxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTdGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUlwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7Ozs7QUFHakU7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBS0gsTUFBTSxPQUFPLGdCQUFpQixTQUFRLG9CQUFvQjtJQVc1QztJQUNGO0lBWHdDLGFBQWEsQ0FBYTtJQUMvQixRQUFRLENBQWE7SUFDdEIsT0FBTyxDQUFhO0lBQ3RCLEtBQUssQ0FBYTtJQUU1RCxZQUFZLENBQXNCO0lBRTFCLFFBQVEsR0FBWSxLQUFLLENBQUM7SUFFbEMsWUFDWSxZQUE0QixFQUM5QixjQUFpQztRQUV6QyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7UUFIVixpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7UUFDOUIsbUJBQWMsR0FBZCxjQUFjLENBQW1CO0lBRzNDLENBQUM7SUFFRCxJQUFZLGFBQWE7UUFDdkIsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxhQUFhLENBQUMsV0FBVyxDQUFDO0lBQ2pELENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDeEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBRVMsZ0JBQWdCO1FBQ3hCLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxhQUFhLENBQUMsV0FBVyxFQUFFO1lBQ3pDLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7WUFFcEMsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsWUFBWSxJQUFJLENBQUMsQ0FBQztZQUNsRSxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxZQUFZLElBQUksQ0FBQyxDQUFDO1lBQ3BFLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLEVBQUUsWUFBWSxJQUFJLENBQUMsQ0FBQztZQUU5RSxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLENBQUMsQ0FBQztZQUNqRyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7WUFFbkQsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUN2QztJQUNILENBQUM7MEVBN0NVLGdCQUFnQjs2REFBaEIsZ0JBQWdCO21DQUNTLFVBQVU7bUNBQ2YsVUFBVTttQ0FDWCxVQUFVO21DQUNaLFVBQVU7Ozs7Ozs7O1lDbkN4Qyw4QkFBeUQ7WUFDdkQsdUNBQTRELGlDQUFBLHlCQUFBLDRCQUFBO1lBYTlELGlCQUFNOztZQWR3QiwwQ0FBMEI7WUFDN0IsY0FBaUI7WUFBakIsbUNBQWlCO1lBSXhDLGVBQTZCO1lBQTdCLCtDQUE2QixtQ0FBQSwrQkFBQSxzQkFBQTtZQU1WLGVBQTRCO1lBQTVCLDhDQUE0Qix3QkFBQSxzQkFBQTtZQUV0QixlQUFtQjtZQUFuQixxQ0FBbUI7OztpRkRrQm5DLGdCQUFnQjtjQUo1QixTQUFTOzJCQUNFLFVBQVU7K0VBSThCLGFBQWE7a0JBQTlELFNBQVM7bUJBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUNILFFBQVE7a0JBQXBELFNBQVM7bUJBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUNDLE9BQU87a0JBQWxELFNBQVM7bUJBQUMsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtZQUNBLEtBQUs7a0JBQTlDLFNBQVM7bUJBQUMsT0FBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTs7a0ZBSjdCLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb0dhdWdlUGFkZGluZyB9IGZyb20gJy4vcG8tZ2F1Z2UtZGVmYXVsdC12YWx1ZXMuY29uc3RhbnQnO1xuXG5pbXBvcnQgeyBQb0NvbG9yU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3BvLWNvbG9yL3BvLWNvbG9yLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBQb0dhdWdlQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tZ2F1Z2UtYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9HYXVnZVN2Z0NvbnRhaW5lciB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1nYXVnZS1zdmctY29udGFpbmVyLmludGVyZmFjZSc7XG5cbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvR2F1Z2VCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZ2F1Z2UtYmFzaWNcIiB0aXRsZT1cIlBPIEdhdWdlIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1nYXVnZS1iYXNpYy9zYW1wbGUtcG8tZ2F1Z2UtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZ2F1Z2UtYmFzaWMvc2FtcGxlLXBvLWdhdWdlLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZ2F1Z2UtbGFic1wiIHRpdGxlPVwiUE8gR2F1Z2UgTGFic1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZ2F1Z2UtbGFicy9zYW1wbGUtcG8tZ2F1Z2UtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1nYXVnZS1sYWJzL3NhbXBsZS1wby1nYXVnZS1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZ2F1Z2Utc3VtbWFyeVwiIHRpdGxlPVwiUE8gR2F1Z2UgU3VtbWFyeVwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZ2F1Z2Utc3VtbWFyeS9zYW1wbGUtcG8tZ2F1Z2Utc3VtbWFyeS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1nYXVnZS1zdW1tYXJ5L3NhbXBsZS1wby1nYXVnZS1zdW1tYXJ5LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWdhdWdlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLWdhdWdlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0dhdWdlQ29tcG9uZW50IGV4dGVuZHMgUG9HYXVnZUJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBEb0NoZWNrIHtcbiAgQFZpZXdDaGlsZCgnZGVzY3JpcHRpb25FbCcsIHsgcmVhZDogRWxlbWVudFJlZiB9KSBkZXNjcmlwdGlvbkVsOiBFbGVtZW50UmVmO1xuICBAVmlld0NoaWxkKCdsZWdlbmRFbCcsIHsgcmVhZDogRWxlbWVudFJlZiB9KSBsZWdlbmRFbDogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZCgndGl0bGVFbCcsIHsgcmVhZDogRWxlbWVudFJlZiB9KSB0aXRsZUVsOiBFbGVtZW50UmVmO1xuICBAVmlld0NoaWxkKCdzdmdFbCcsIHsgcmVhZDogRWxlbWVudFJlZiB9KSBzdmdFbDogRWxlbWVudFJlZjtcblxuICBzdmdDb250YWluZXI6IFBvR2F1Z2VTdmdDb250YWluZXI7XG5cbiAgcHJpdmF0ZSBpc0xvYWRlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBjb2xvclNlcnZpY2U6IFBvQ29sb3JTZXJ2aWNlLFxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmXG4gICkge1xuICAgIHN1cGVyKGNvbG9yU2VydmljZSk7XG4gIH1cblxuICBwcml2YXRlIGdldCBoYXNFbGVtZW50UmVmKCkge1xuICAgIHJldHVybiAhIXRoaXMuc3ZnRWw/Lm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gIH1cblxuICBnZXQgaGFzUmFuZ2VzKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnJhbmdlcy5sZW5ndGggPiAwO1xuICB9XG5cbiAgbmdEb0NoZWNrKCkge1xuICAgIGlmICghdGhpcy5pc0xvYWRlZCAmJiB0aGlzLmhhc0VsZW1lbnRSZWYpIHtcbiAgICAgIHRoaXMuaXNMb2FkZWQgPSB0cnVlO1xuICAgICAgdGhpcy5zdmdDb250YWluZXJTaXplKCk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIHN2Z0NvbnRhaW5lclNpemUoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuc3ZnRWw/Lm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGgpIHtcbiAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuXG4gICAgICBjb25zdCB0aXRsZUhlaWdodCA9IHRoaXMudGl0bGVFbC5uYXRpdmVFbGVtZW50Py5vZmZzZXRIZWlnaHQgPz8gMDtcbiAgICAgIGNvbnN0IGxlZ2VuZEhlaWdodCA9IHRoaXMubGVnZW5kRWwubmF0aXZlRWxlbWVudD8ub2Zmc2V0SGVpZ2h0ID8/IDA7XG4gICAgICBjb25zdCBkZXNjcmlwdGlvbkhlaWdodCA9IHRoaXMuZGVzY3JpcHRpb25FbC5uYXRpdmVFbGVtZW50Py5vZmZzZXRIZWlnaHQgPz8gMDtcblxuICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5oZWlnaHQgLSB0aXRsZUhlaWdodCAtIGxlZ2VuZEhlaWdodCAtIGRlc2NyaXB0aW9uSGVpZ2h0IC0gUG9HYXVnZVBhZGRpbmcgKiAyO1xuICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLnN2Z0VsLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGg7XG5cbiAgICAgIHRoaXMuc3ZnQ29udGFpbmVyID0geyB3aWR0aCwgaGVpZ2h0IH07XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwicG8tZ2F1Z2Utd3JhcHBlclwiIFtzdHlsZS5oZWlnaHQucHhdPVwiaGVpZ2h0XCI+XG4gIDxwby1nYXVnZS10aXRsZSAjdGl0bGVFbCBbcC10aXRsZV09XCJ0aXRsZVwiPjwvcG8tZ2F1Z2UtdGl0bGU+XG5cbiAgPHBvLWdhdWdlLWRlc2NyaXB0aW9uXG4gICAgI2Rlc2NyaXB0aW9uRWxcbiAgICBbcC1kZXNjcmlwdGlvbl09XCJkZXNjcmlwdGlvblwiXG4gICAgW3AtZGVzY3JpcHRpb24td2lkdGhdPVwiaGVpZ2h0XCJcbiAgICBbcC1oYXMtcmFuZ2VzXT1cImhhc1Jhbmdlc1wiXG4gICAgW3AtdmFsdWVdPVwidmFsdWVcIlxuICA+PC9wby1nYXVnZS1kZXNjcmlwdGlvbj5cblxuICA8cG8tZ2F1Z2Utc3ZnICNzdmdFbCBbcC1jb250YWluZXJdPVwic3ZnQ29udGFpbmVyXCIgW3AtcmFuZ2VzXT1cInJhbmdlc1wiIFtwLXZhbHVlXT1cInZhbHVlXCI+PC9wby1nYXVnZS1zdmc+XG5cbiAgPHBvLWdhdWdlLWxlZ2VuZCAjbGVnZW5kRWwgW3AtcmFuZ2VzXT1cInJhbmdlc1wiPiA8L3BvLWdhdWdlLWxlZ2VuZD5cbjwvZGl2PlxuIl19