import { Component, Input } from '@angular/core';
import { isTypeof } from '../../utils/util';
import * as i0 from "@angular/core";
import * as i1 from "../../services/po-language/po-language.service";
import * as i2 from "@angular/common";
function PoLogoComponent_a_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "a", 2);
    i0.ɵɵelement(1, "img", 3);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵclassMap(ctx_r0.className);
    i0.ɵɵproperty("alt", ctx_r0.logoAlt)("src", ctx_r0.logo, i0.ɵɵsanitizeUrl)("title", ctx_r0.logoAlt);
} }
function PoLogoComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "img", 3);
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵclassMap(ctx_r1.className);
    i0.ɵɵproperty("alt", ctx_r1.logoAlt)("src", ctx_r1.logo, i0.ɵɵsanitizeUrl)("title", ctx_r1.logoAlt);
} }
const poLogoLiteralsDefault = {
    en: {
        logomarcaHome: 'Home logo'
    },
    es: {
        logomarcaHome: 'Logomarca inicio'
    },
    pt: {
        logomarcaHome: 'Logomarca início'
    },
    ru: {
        logomarcaHome: 'Дом Логомарка'
    }
};
const MAX_LENGHT = 125;
export class PoLogoComponent {
    poLanguageService;
    literals;
    _logo;
    _logoAlt;
    /**
     * Define uma classe para o elemento `img` do componente.
     *
     * > **Importante**
     * > A classe deve ser definida apenas quando houver necessidade de ajustar o componente dentro de outro componente.
     *
     */
    className = 'po-logo';
    /**
     * Define se o componente terá o elemento âncora para a página inicial.
     *
     * > Caso seja definido como false, o componente apenas renderizará o elemento `img`.
     * O valor inicial é `true`.
     *
     */
    link = true;
    /**
     * Definie o caminho para a imagem, que será exibida como logomarca.
     *
     */
    set logo(value) {
        this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    get logo() {
        return this._logo;
    }
    /**
     * Define o texto alternativo para a logomarca.
     *
     * > **Importante**
     * > Caso esta propriedade não seja definida o texto padrão será "Logomarca início".
     */
    set logoAlt(value) {
        this._logoAlt = isTypeof(value, 'string') && value.trim() ? this.maxLength(value) : this.literals.logomarcaHome;
    }
    get logoAlt() {
        return this._logoAlt;
    }
    constructor(poLanguageService) {
        this.poLanguageService = poLanguageService;
        this.literals = {
            ...poLogoLiteralsDefault[this.poLanguageService?.getLanguageDefault()],
            ...poLogoLiteralsDefault[this.poLanguageService?.getShortLanguage()]
        };
        this._logoAlt = this.literals.logomarcaHome;
    }
    maxLength(value) {
        return value.length > MAX_LENGHT ? value.toString().substring(0, MAX_LENGHT) : value;
    }
    static ɵfac = function PoLogoComponent_Factory(t) { return new (t || PoLogoComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoLogoComponent, selectors: [["po-logo"]], inputs: { className: [i0.ɵɵInputFlags.None, "p-class", "className"], link: [i0.ɵɵInputFlags.None, "p-link", "link"], logo: [i0.ɵɵInputFlags.None, "p-logo", "logo"], logoAlt: [i0.ɵɵInputFlags.None, "p-logo-alt", "logoAlt"] }, decls: 3, vars: 2, consts: [["href", "/", 4, "ngIf", "ngIfElse"], ["noLink", ""], ["href", "/"], [3, "alt", "src", "title"]], template: function PoLogoComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, PoLogoComponent_a_0_Template, 2, 5, "a", 0)(1, PoLogoComponent_ng_template_1_Template, 1, 5, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        } if (rf & 2) {
            const _r2 = i0.ɵɵreference(2);
            i0.ɵɵproperty("ngIf", ctx.link)("ngIfElse", _r2);
        } }, dependencies: [i2.NgIf], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoLogoComponent, [{
        type: Component,
        args: [{ selector: 'po-logo', template: "<a *ngIf=\"link; else noLink\" href=\"/\">\n  <img [alt]=\"logoAlt\" [class]=\"className\" [src]=\"logo\" [title]=\"logoAlt\" />\n</a>\n\n<ng-template #noLink>\n  <img [alt]=\"logoAlt\" [class]=\"className\" [src]=\"logo\" [title]=\"logoAlt\" />\n</ng-template>\n" }]
    }], () => [{ type: i1.PoLanguageService }], { className: [{
            type: Input,
            args: ['p-class']
        }], link: [{
            type: Input,
            args: ['p-link']
        }], logo: [{
            type: Input,
            args: ['p-logo']
        }], logoAlt: [{
            type: Input,
            args: ['p-logo-alt']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoLogoComponent, { className: "PoLogoComponent", filePath: "lib/components/po-logo/po-logo.component.ts", lineNumber: 27 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9nby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tbG9nby9wby1sb2dvLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1sb2dvL3BvLWxvZ28uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHakQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7OztJQ0g1Qyw0QkFBc0M7SUFDcEMseUJBQTBFO0lBQzVFLGlCQUFJOzs7SUFEbUIsY0FBbUI7SUFBbkIsK0JBQW1CO0lBQW5DLG9DQUFlLHNDQUFBLHlCQUFBOzs7SUFJcEIseUJBQTBFOzs7SUFBckQsK0JBQW1CO0lBQW5DLG9DQUFlLHNDQUFBLHlCQUFBOztBREF0QixNQUFNLHFCQUFxQixHQUFHO0lBQzVCLEVBQUUsRUFBRTtRQUNGLGFBQWEsRUFBRSxXQUFXO0tBQzNCO0lBQ0QsRUFBRSxFQUFFO1FBQ0YsYUFBYSxFQUFFLGtCQUFrQjtLQUNsQztJQUNELEVBQUUsRUFBRTtRQUNGLGFBQWEsRUFBRSxrQkFBa0I7S0FDbEM7SUFDRCxFQUFFLEVBQUU7UUFDRixhQUFhLEVBQUUsZUFBZTtLQUMvQjtDQUNGLENBQUM7QUFFRixNQUFNLFVBQVUsR0FBVyxHQUFHLENBQUM7QUFNL0IsTUFBTSxPQUFPLGVBQWU7SUFrRFA7SUFqRFYsUUFBUSxDQUFNO0lBRWYsS0FBSyxDQUFVO0lBQ2YsUUFBUSxDQUFTO0lBRXpCOzs7Ozs7T0FNRztJQUNlLFNBQVMsR0FBVyxTQUFTLENBQUM7SUFFaEQ7Ozs7OztPQU1HO0lBQ2MsSUFBSSxHQUFZLElBQUksQ0FBQztJQUV0Qzs7O09BR0c7SUFDSCxJQUFxQixJQUFJLENBQUMsS0FBYTtRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUM3RSxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILElBQXlCLE9BQU8sQ0FBQyxLQUFhO1FBQzVDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDO0lBQ2xILENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVELFlBQW1CLGlCQUFvQztRQUFwQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3JELElBQUksQ0FBQyxRQUFRLEdBQUc7WUFDZCxHQUFHLHFCQUFxQixDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxDQUFDO1lBQ3RFLEdBQUcscUJBQXFCLENBQUMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLENBQUM7U0FDckUsQ0FBQztRQUNGLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUM7SUFDOUMsQ0FBQztJQUVPLFNBQVMsQ0FBQyxLQUFhO1FBQzdCLE9BQU8sS0FBSyxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDdkYsQ0FBQzt5RUE1RFUsZUFBZTs2REFBZixlQUFlO1lDMUI1Qiw0REFFSSxvR0FBQTs7O1lBRkEsK0JBQVksaUJBQUE7OztpRkQwQkgsZUFBZTtjQUozQixTQUFTOzJCQUNFLFNBQVM7a0RBZ0JELFNBQVM7a0JBQTFCLEtBQUs7bUJBQUMsU0FBUztZQVNDLElBQUk7a0JBQXBCLEtBQUs7bUJBQUMsUUFBUTtZQU1NLElBQUk7a0JBQXhCLEtBQUs7bUJBQUMsUUFBUTtZQWNVLE9BQU87a0JBQS9CLEtBQUs7bUJBQUMsWUFBWTs7a0ZBMUNSLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvTGFuZ3VhZ2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcG8tbGFuZ3VhZ2UvcG8tbGFuZ3VhZ2Uuc2VydmljZSc7XG5pbXBvcnQgeyBpc1R5cGVvZiB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5jb25zdCBwb0xvZ29MaXRlcmFsc0RlZmF1bHQgPSB7XG4gIGVuOiB7XG4gICAgbG9nb21hcmNhSG9tZTogJ0hvbWUgbG9nbydcbiAgfSxcbiAgZXM6IHtcbiAgICBsb2dvbWFyY2FIb21lOiAnTG9nb21hcmNhIGluaWNpbydcbiAgfSxcbiAgcHQ6IHtcbiAgICBsb2dvbWFyY2FIb21lOiAnTG9nb21hcmNhIGluw61jaW8nXG4gIH0sXG4gIHJ1OiB7XG4gICAgbG9nb21hcmNhSG9tZTogJ9CU0L7QvCDQm9C+0LPQvtC80LDRgNC60LAnXG4gIH1cbn07XG5cbmNvbnN0IE1BWF9MRU5HSFQ6IG51bWJlciA9IDEyNTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tbG9nbycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1sb2dvLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0xvZ29Db21wb25lbnQge1xuICByZWFkb25seSBsaXRlcmFsczogYW55O1xuXG4gIHByaXZhdGUgX2xvZ28/OiBzdHJpbmc7XG4gIHByaXZhdGUgX2xvZ29BbHQ6IHN0cmluZztcblxuICAvKipcbiAgICogRGVmaW5lIHVtYSBjbGFzc2UgcGFyYSBvIGVsZW1lbnRvIGBpbWdgIGRvIGNvbXBvbmVudGUuXG4gICAqXG4gICAqID4gKipJbXBvcnRhbnRlKipcbiAgICogPiBBIGNsYXNzZSBkZXZlIHNlciBkZWZpbmlkYSBhcGVuYXMgcXVhbmRvIGhvdXZlciBuZWNlc3NpZGFkZSBkZSBhanVzdGFyIG8gY29tcG9uZW50ZSBkZW50cm8gZGUgb3V0cm8gY29tcG9uZW50ZS5cbiAgICpcbiAgICovXG4gIEBJbnB1dCgncC1jbGFzcycpIGNsYXNzTmFtZTogc3RyaW5nID0gJ3BvLWxvZ28nO1xuXG4gIC8qKlxuICAgKiBEZWZpbmUgc2UgbyBjb21wb25lbnRlIHRlcsOhIG8gZWxlbWVudG8gw6JuY29yYSBwYXJhIGEgcMOhZ2luYSBpbmljaWFsLlxuICAgKlxuICAgKiA+IENhc28gc2VqYSBkZWZpbmlkbyBjb21vIGZhbHNlLCBvIGNvbXBvbmVudGUgYXBlbmFzIHJlbmRlcml6YXLDoSBvIGVsZW1lbnRvIGBpbWdgLlxuICAgKiBPIHZhbG9yIGluaWNpYWwgw6kgYHRydWVgLlxuICAgKlxuICAgKi9cbiAgQElucHV0KCdwLWxpbmsnKSBsaW5rOiBib29sZWFuID0gdHJ1ZTtcblxuICAvKipcbiAgICogRGVmaW5pZSBvIGNhbWluaG8gcGFyYSBhIGltYWdlbSwgcXVlIHNlcsOhIGV4aWJpZGEgY29tbyBsb2dvbWFyY2EuXG4gICAqXG4gICAqL1xuICBASW5wdXQoJ3AtbG9nbycpIHNldCBsb2dvKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9sb2dvID0gaXNUeXBlb2YodmFsdWUsICdzdHJpbmcnKSAmJiB2YWx1ZS50cmltKCkgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCBsb2dvKCkge1xuICAgIHJldHVybiB0aGlzLl9sb2dvO1xuICB9XG5cbiAgLyoqXG4gICAqIERlZmluZSBvIHRleHRvIGFsdGVybmF0aXZvIHBhcmEgYSBsb2dvbWFyY2EuXG4gICAqXG4gICAqID4gKipJbXBvcnRhbnRlKipcbiAgICogPiBDYXNvIGVzdGEgcHJvcHJpZWRhZGUgbsOjbyBzZWphIGRlZmluaWRhIG8gdGV4dG8gcGFkcsOjbyBzZXLDoSBcIkxvZ29tYXJjYSBpbsOtY2lvXCIuXG4gICAqL1xuICBASW5wdXQoJ3AtbG9nby1hbHQnKSBzZXQgbG9nb0FsdCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fbG9nb0FsdCA9IGlzVHlwZW9mKHZhbHVlLCAnc3RyaW5nJykgJiYgdmFsdWUudHJpbSgpID8gdGhpcy5tYXhMZW5ndGgodmFsdWUpIDogdGhpcy5saXRlcmFscy5sb2dvbWFyY2FIb21lO1xuICB9XG5cbiAgZ2V0IGxvZ29BbHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvZ29BbHQ7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcG9MYW5ndWFnZVNlcnZpY2U6IFBvTGFuZ3VhZ2VTZXJ2aWNlKSB7XG4gICAgdGhpcy5saXRlcmFscyA9IHtcbiAgICAgIC4uLnBvTG9nb0xpdGVyYWxzRGVmYXVsdFt0aGlzLnBvTGFuZ3VhZ2VTZXJ2aWNlPy5nZXRMYW5ndWFnZURlZmF1bHQoKV0sXG4gICAgICAuLi5wb0xvZ29MaXRlcmFsc0RlZmF1bHRbdGhpcy5wb0xhbmd1YWdlU2VydmljZT8uZ2V0U2hvcnRMYW5ndWFnZSgpXVxuICAgIH07XG4gICAgdGhpcy5fbG9nb0FsdCA9IHRoaXMubGl0ZXJhbHMubG9nb21hcmNhSG9tZTtcbiAgfVxuXG4gIHByaXZhdGUgbWF4TGVuZ3RoKHZhbHVlOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdmFsdWUubGVuZ3RoID4gTUFYX0xFTkdIVCA/IHZhbHVlLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsIE1BWF9MRU5HSFQpIDogdmFsdWU7XG4gIH1cbn1cbiIsIjxhICpuZ0lmPVwibGluazsgZWxzZSBub0xpbmtcIiBocmVmPVwiL1wiPlxuICA8aW1nIFthbHRdPVwibG9nb0FsdFwiIFtjbGFzc109XCJjbGFzc05hbWVcIiBbc3JjXT1cImxvZ29cIiBbdGl0bGVdPVwibG9nb0FsdFwiIC8+XG48L2E+XG5cbjxuZy10ZW1wbGF0ZSAjbm9MaW5rPlxuICA8aW1nIFthbHRdPVwibG9nb0FsdFwiIFtjbGFzc109XCJjbGFzc05hbWVcIiBbc3JjXT1cImxvZ29cIiBbdGl0bGVdPVwibG9nb0FsdFwiIC8+XG48L25nLXRlbXBsYXRlPlxuIl19