export function getGridColumnsClasses(gridColumns, offsetColumns, grid, offset, pull) {
    const systemGrid = {
        gridSm: grid?.smGrid || gridColumns || 12,
        gridMd: grid?.mdGrid || gridColumns || 6,
        gridLg: grid?.lgGrid || gridColumns || 4,
        gridXl: grid?.xlGrid || gridColumns || 3,
        offsetSm: offset?.smOffset || offsetColumns || 0,
        offsetMd: offset?.mdOffset || offsetColumns || 0,
        offsetLg: offset?.lgOffset || offsetColumns || 0,
        offsetXl: offset?.xlOffset || offsetColumns || 0,
        pullSm: pull?.smPull || 0,
        pullMd: pull?.mdPull || 0,
        pullLg: pull?.lgPull || 0,
        pullXl: pull?.xlPull || 0
    };
    return (`po-sm-${systemGrid.gridSm} po-offset-sm-${systemGrid.offsetSm} po-pull-sm-${systemGrid.pullSm} ` +
        `po-md-${systemGrid.gridMd} po-offset-md-${systemGrid.offsetMd} po-pull-md-${systemGrid.pullMd} ` +
        `po-lg-${systemGrid.gridLg} po-offset-lg-${systemGrid.offsetLg} po-pull-lg-${systemGrid.pullLg} ` +
        `po-xl-${systemGrid.gridXl} po-offset-xl-${systemGrid.offsetXl} po-pull-xl-${systemGrid.pullXl}`);
}
export function isVisibleField(field) {
    const containsVisible = 'visible' in field;
    return containsVisible ? field.visible : true;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy51dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWR5bmFtaWMvcG8tZHluYW1pYy51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxXQUFXLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSTtJQUNsRixNQUFNLFVBQVUsR0FBRztRQUNqQixNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksRUFBRTtRQUN6QyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksQ0FBQztRQUN4QyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksQ0FBQztRQUN4QyxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxXQUFXLElBQUksQ0FBQztRQUN4QyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsSUFBSSxhQUFhLElBQUksQ0FBQztRQUNoRCxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxDQUFDO1FBQ3pCLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxJQUFJLENBQUM7UUFDekIsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLElBQUksQ0FBQztRQUN6QixNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sSUFBSSxDQUFDO0tBQzFCLENBQUM7SUFFRixPQUFPLENBQ0wsU0FBUyxVQUFVLENBQUMsTUFBTSxpQkFBaUIsVUFBVSxDQUFDLFFBQVEsZUFBZSxVQUFVLENBQUMsTUFBTSxHQUFHO1FBQ2pHLFNBQVMsVUFBVSxDQUFDLE1BQU0saUJBQWlCLFVBQVUsQ0FBQyxRQUFRLGVBQWUsVUFBVSxDQUFDLE1BQU0sR0FBRztRQUNqRyxTQUFTLFVBQVUsQ0FBQyxNQUFNLGlCQUFpQixVQUFVLENBQUMsUUFBUSxlQUFlLFVBQVUsQ0FBQyxNQUFNLEdBQUc7UUFDakcsU0FBUyxVQUFVLENBQUMsTUFBTSxpQkFBaUIsVUFBVSxDQUFDLFFBQVEsZUFBZSxVQUFVLENBQUMsTUFBTSxFQUFFLENBQ2pHLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUE0QjtJQUN6RCxNQUFNLGVBQWUsR0FBRyxTQUFTLElBQUksS0FBSyxDQUFDO0lBRTNDLE9BQU8sZUFBZSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDaEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvRHluYW1pY1ZpZXdGaWVsZCB9IGZyb20gJy4vcG8tZHluYW1pYy12aWV3L3BvLWR5bmFtaWMtdmlldy1maWVsZC5pbnRlcmZhY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0R3JpZENvbHVtbnNDbGFzc2VzKGdyaWRDb2x1bW5zLCBvZmZzZXRDb2x1bW5zLCBncmlkLCBvZmZzZXQsIHB1bGwpIHtcbiAgY29uc3Qgc3lzdGVtR3JpZCA9IHtcbiAgICBncmlkU206IGdyaWQ/LnNtR3JpZCB8fCBncmlkQ29sdW1ucyB8fCAxMixcbiAgICBncmlkTWQ6IGdyaWQ/Lm1kR3JpZCB8fCBncmlkQ29sdW1ucyB8fCA2LFxuICAgIGdyaWRMZzogZ3JpZD8ubGdHcmlkIHx8IGdyaWRDb2x1bW5zIHx8IDQsXG4gICAgZ3JpZFhsOiBncmlkPy54bEdyaWQgfHwgZ3JpZENvbHVtbnMgfHwgMyxcbiAgICBvZmZzZXRTbTogb2Zmc2V0Py5zbU9mZnNldCB8fCBvZmZzZXRDb2x1bW5zIHx8IDAsXG4gICAgb2Zmc2V0TWQ6IG9mZnNldD8ubWRPZmZzZXQgfHwgb2Zmc2V0Q29sdW1ucyB8fCAwLFxuICAgIG9mZnNldExnOiBvZmZzZXQ/LmxnT2Zmc2V0IHx8IG9mZnNldENvbHVtbnMgfHwgMCxcbiAgICBvZmZzZXRYbDogb2Zmc2V0Py54bE9mZnNldCB8fCBvZmZzZXRDb2x1bW5zIHx8IDAsXG4gICAgcHVsbFNtOiBwdWxsPy5zbVB1bGwgfHwgMCxcbiAgICBwdWxsTWQ6IHB1bGw/Lm1kUHVsbCB8fCAwLFxuICAgIHB1bGxMZzogcHVsbD8ubGdQdWxsIHx8IDAsXG4gICAgcHVsbFhsOiBwdWxsPy54bFB1bGwgfHwgMFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgYHBvLXNtLSR7c3lzdGVtR3JpZC5ncmlkU219IHBvLW9mZnNldC1zbS0ke3N5c3RlbUdyaWQub2Zmc2V0U219IHBvLXB1bGwtc20tJHtzeXN0ZW1HcmlkLnB1bGxTbX0gYCArXG4gICAgYHBvLW1kLSR7c3lzdGVtR3JpZC5ncmlkTWR9IHBvLW9mZnNldC1tZC0ke3N5c3RlbUdyaWQub2Zmc2V0TWR9IHBvLXB1bGwtbWQtJHtzeXN0ZW1HcmlkLnB1bGxNZH0gYCArXG4gICAgYHBvLWxnLSR7c3lzdGVtR3JpZC5ncmlkTGd9IHBvLW9mZnNldC1sZy0ke3N5c3RlbUdyaWQub2Zmc2V0TGd9IHBvLXB1bGwtbGctJHtzeXN0ZW1HcmlkLnB1bGxMZ30gYCArXG4gICAgYHBvLXhsLSR7c3lzdGVtR3JpZC5ncmlkWGx9IHBvLW9mZnNldC14bC0ke3N5c3RlbUdyaWQub2Zmc2V0WGx9IHBvLXB1bGwteGwtJHtzeXN0ZW1HcmlkLnB1bGxYbH1gXG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Zpc2libGVGaWVsZChmaWVsZDogeyB2aXNpYmxlPzogYm9vbGVhbiB9KTogYm9vbGVhbiB7XG4gIGNvbnN0IGNvbnRhaW5zVmlzaWJsZSA9ICd2aXNpYmxlJyBpbiBmaWVsZDtcblxuICByZXR1cm4gY29udGFpbnNWaXNpYmxlID8gZmllbGQudmlzaWJsZSA6IHRydWU7XG59XG4iXX0=