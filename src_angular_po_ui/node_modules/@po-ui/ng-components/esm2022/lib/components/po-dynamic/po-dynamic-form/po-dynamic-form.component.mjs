import { Component, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';
import * as i0 from "@angular/core";
import * as i1 from "./po-dynamic-form-load/po-dynamic-form-load.service";
import * as i2 from "./po-dynamic-form-validation/po-dynamic-form-validation.service";
const _c0 = ["fieldsComponent"];
const _c1 = ["dynamicForm"];
function PoDynamicFormComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoDynamicFormComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-dynamic-form-fields", 3, 4);
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-auto-focus", ctx_r1.autoFocus)("p-fields", ctx_r1.fields)("p-value", ctx_r1.value);
} }
function PoDynamicFormComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "form", null, 5)(2, "po-dynamic-form-fields", 6, 4);
    i0.ɵɵtwoWayListener("p-fieldsChange", function PoDynamicFormComponent_ng_template_3_Template_po_dynamic_form_fields_p_fieldsChange_2_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); i0.ɵɵtwoWayBindingSet(ctx_r8.fields, $event) || (ctx_r8.fields = $event); return i0.ɵɵresetView($event); });
    i0.ɵɵlistener("p-object-value", function PoDynamicFormComponent_ng_template_3_Template_po_dynamic_form_fields_p_object_value_2_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.sendObjectValue($event)); })("p-form-validate", function PoDynamicFormComponent_ng_template_3_Template_po_dynamic_form_fields_p_form_validate_2_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.validateForm($event)); });
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵtwoWayProperty("p-fields", ctx_r3.fields);
    i0.ɵɵproperty("p-auto-focus", ctx_r3.autoFocus)("p-disabled-form", ctx_r3.disabledForm)("p-validate", ctx_r3.validate)("p-validate-fields", ctx_r3.validateFields)("p-validate-on-input", ctx_r3.validateOnInput)("p-value", ctx_r3.value);
} }
/**
 * @docsExtends PoDynamicFormBaseComponent
 *
 * @example
 *
 * <example name="po-dynamic-form-basic" title="PO Dynamic Form Basic">
 *  <file name="sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html"> </file>
 *  <file name="sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-form-register" title="PO Dynamic Form - Register">
 *  <file name="sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html"> </file>
 *  <file name="sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts"> </file>
 *  <file name="sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-form-container" title="PO Dynamic Form - Container">
 *  <file name="sample-po-dynamic-form-container/sample-po-dynamic-form-container.component.html"> </file>
 *  <file name="sample-po-dynamic-form-container/sample-po-dynamic-form-container.component.ts"> </file>
 *  <file name="sample-po-dynamic-form-container/sample-po-dynamic-form-container.service.ts"> </file>
 * </example>
 *
 */
export class PoDynamicFormComponent extends PoDynamicFormBaseComponent {
    changes;
    loadService;
    validationService;
    fieldsComponent;
    disabledForm;
    _form;
    onLoadSubscription;
    sendFormSubscription;
    comboOptionSubject = new Subject();
    set form(value) {
        // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError
        setTimeout(() => {
            this._form = value;
            this.emitForm();
        });
    }
    get form() {
        return this._form || {};
    }
    constructor(changes, loadService, validationService) {
        super();
        this.changes = changes;
        this.loadService = loadService;
        this.validationService = validationService;
    }
    ngOnDestroy() {
        this.removeListeners();
    }
    ngOnInit() {
        if (this.load) {
            this.loadDataOnInitialize();
        }
    }
    /**
     * Função que atribui foco ao campo desejado.
     *
     * Para utilizá-la é necessário capturar a instância do `dynamic form`, como por exemplo:
     *
     * ``` html
     * <po-dynamic-form #dynamicForm [p-fields]="fields"></po-dynamic-form>
     * ```
     *
     * ``` javascript
     * import { PoDynamicFormComponent, PoDynamicFormField } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;
     *
     * fields: Array<PoDynamicFormField> = [
     *   { property: 'fieldOne' },
     *   { property: 'fieldTwo' }
     * ];
     *
     * fieldFocus() {
     *   this.dynamicForm.focus('fieldTwo');
     * }
     * ```
     *
     * @param {string} property Nome da propriedade atribuída ao `PoDynamicFormField.property`.
     */
    focus(property) {
        this.fieldsComponent.focus(property);
    }
    getObjectValue() {
        return this.comboOptionSubject.asObservable();
    }
    sendObjectValue(objectValue) {
        this.comboOptionSubject.next(objectValue);
    }
    validateForm(field) {
        const previousFocusElement = document.activeElement;
        this.disableForm(true);
        const errorOnValidation = () => this.disableForm(false);
        this.sendFormSubscription = this.validationService
            .sendFormChange(this.validate, field, this.value)
            .subscribe(this.applyFormValidation(previousFocusElement), errorOnValidation);
    }
    applyFormUpdatesOnLoad(previousFocusElement) {
        return dynamicFormData => {
            this.updateModelOnLoad(dynamicFormData);
            this.disableForm(false);
            this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);
        };
    }
    applyFormValidation(previousFocusElement) {
        return dynamicFormData => {
            this.updateModelWithValidation(dynamicFormData);
            this.disableForm(false);
            this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);
        };
    }
    disableForm(value) {
        this.disabledForm = value;
        this.changes.detectChanges();
    }
    emitForm() {
        if (!this.groupForm && this.formOutput.observers.length) {
            this.formOutput.emit(this.form);
        }
    }
    loadDataOnInitialize() {
        const previousFocusElement = document.activeElement;
        this.disabledForm = true;
        const errorOnLoad = () => (this.disabledForm = false);
        this.onLoadSubscription = this.loadService
            .executeLoad(this.load, this.value)
            .subscribe(this.applyFormUpdatesOnLoad(previousFocusElement), errorOnLoad);
    }
    removeListeners() {
        if (this.onLoadSubscription) {
            this.onLoadSubscription.unsubscribe();
        }
        if (this.sendFormSubscription) {
            this.sendFormSubscription.unsubscribe();
        }
    }
    setFocusOnFieldByProperty(property, previousFocusElement) {
        if (property) {
            // precisa do timeout para que o valor seja atribuido no campo antes de setar o focus,
            // para nao disparar a mudança posteriormente. Situação ocorre quando retornar campo com valor e focus atribuido a ele.
            setTimeout(() => this.focus(property));
        }
        else {
            previousFocusElement['focus']();
        }
    }
    updateModelOnLoad(loadedFormData) {
        Object.assign(this.value, loadedFormData.value);
        this.fields = this.loadService.createAndUpdateFieldsForm(loadedFormData.fields, this.fields);
    }
    updateModelWithValidation(formData) {
        Object.assign(this.value, formData.value);
        this.fieldsComponent.updatePreviousValue();
        this.fields = this.validationService.updateFieldsForm(formData.fields, this.fields);
    }
    static ɵfac = function PoDynamicFormComponent_Factory(t) { return new (t || PoDynamicFormComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PoDynamicFormLoadService), i0.ɵɵdirectiveInject(i2.PoDynamicFormValidationService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoDynamicFormComponent, selectors: [["po-dynamic-form"]], viewQuery: function PoDynamicFormComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5);
            i0.ɵɵviewQuery(_c1, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fieldsComponent = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 3, consts: [[4, "ngIf", "ngIfThen", "ngIfElse"], ["reuseFormTemplate", ""], ["uniqueFormTemplate", ""], [3, "p-auto-focus", "p-fields", "p-value"], ["fieldsComponent", ""], ["dynamicForm", "ngForm"], [3, "p-fields", "p-auto-focus", "p-disabled-form", "p-validate", "p-validate-fields", "p-validate-on-input", "p-value", "p-fieldsChange", "p-object-value", "p-form-validate"]], template: function PoDynamicFormComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, PoDynamicFormComponent_ng_container_0_Template, 1, 0, "ng-container", 0)(1, PoDynamicFormComponent_ng_template_1_Template, 2, 3, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor)(3, PoDynamicFormComponent_ng_template_3_Template, 4, 7, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
        } if (rf & 2) {
            const _r2 = i0.ɵɵreference(2);
            const _r4 = i0.ɵɵreference(4);
            i0.ɵɵproperty("ngIf", ctx.groupForm)("ngIfThen", _r2)("ngIfElse", _r4);
        } }, encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoDynamicFormComponent, [{
        type: Component,
        args: [{ selector: 'po-dynamic-form', template: "<ng-container *ngIf=\"groupForm; then reuseFormTemplate; else uniqueFormTemplate\"></ng-container>\n\n<ng-template #reuseFormTemplate>\n  <po-dynamic-form-fields #fieldsComponent [p-auto-focus]=\"autoFocus\" [p-fields]=\"fields\" [p-value]=\"value\">\n  </po-dynamic-form-fields>\n</ng-template>\n\n<ng-template #uniqueFormTemplate>\n  <form #dynamicForm=\"ngForm\">\n    <po-dynamic-form-fields\n      #fieldsComponent\n      [(p-fields)]=\"fields\"\n      [p-auto-focus]=\"autoFocus\"\n      [p-disabled-form]=\"disabledForm\"\n      [p-validate]=\"validate\"\n      [p-validate-fields]=\"validateFields\"\n      [p-validate-on-input]=\"validateOnInput\"\n      [p-value]=\"value\"\n      (p-object-value)=\"sendObjectValue($event)\"\n      (p-form-validate)=\"validateForm($event)\"\n    >\n    </po-dynamic-form-fields>\n  </form>\n</ng-template>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }, { type: i1.PoDynamicFormLoadService }, { type: i2.PoDynamicFormValidationService }], { fieldsComponent: [{
            type: ViewChild,
            args: ['fieldsComponent']
        }], form: [{
            type: ViewChild,
            args: ['dynamicForm']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoDynamicFormComponent, { className: "PoDynamicFormComponent", filePath: "lib/components/po-dynamic/po-dynamic-form/po-dynamic-form.component.ts", lineNumber: 41 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1keW5hbWljL3BvLWR5bmFtaWMtZm9ybS9wby1keW5hbWljLWZvcm0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWR5bmFtaWMvcG8tZHluYW1pYy1mb3JtL3BvLWR5bmFtaWMtZm9ybS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUF3QyxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0YsT0FBTyxFQUFjLE9BQU8sRUFBZ0IsTUFBTSxNQUFNLENBQUM7QUFFekQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7Ozs7Ozs7SUNMOUUsd0JBQWdHOzs7SUFHOUYsK0NBQ3lCOzs7SUFEZ0IsK0NBQTBCLDJCQUFBLHlCQUFBOzs7O0lBS25FLHFDQUE0QixtQ0FBQTtJQUd4Qiw2VEFBcUI7SUFPckIsb05BQWtCLGVBQUEsK0JBQXVCLENBQUEsSUFBQyx5TUFDdkIsZUFBQSw0QkFBb0IsQ0FBQSxJQURHO0lBRzVDLGlCQUF5QixFQUFBOzs7SUFWdkIsZUFBcUI7SUFBckIsOENBQXFCO0lBQ3JCLCtDQUEwQix3Q0FBQSwrQkFBQSw0Q0FBQSwrQ0FBQSx5QkFBQTs7QURBaEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFNSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsMEJBQTBCO0lBeUIxRDtJQUNBO0lBQ0E7SUExQm9CLGVBQWUsQ0FBeUU7SUFFdEgsWUFBWSxDQUFVO0lBRWQsS0FBSyxDQUFTO0lBRWQsa0JBQWtCLENBQWU7SUFDakMsb0JBQW9CLENBQWU7SUFDbkMsa0JBQWtCLEdBQUcsSUFB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QUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRU8seUJBQXlCLENBQUMsUUFBaUM7UUFDakUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsZUFBZSxDQUFDLG1CQUFtQixFQUFFLENBQUM7UUFDM0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEYsQ0FBQztnRkFoS1Usc0JBQXNCOzZEQUF0QixzQkFBc0I7Ozs7Ozs7O1lDeENuQyx5RkFBZ0csMkdBQUEsMkdBQUE7Ozs7WUFBakYsb0NBQWlCLGlCQUFBLGlCQUFBOzs7aUZEd0NuQixzQkFBc0I7Y0FKbEMsU0FBUzsyQkFDRSxpQkFBaUI7c0lBSUcsZUFBZTtrQkFBNUMsU0FBUzttQkFBQyxpQkFBaUI7WUFVRSxJQUFJO2tCQUFqQyxTQUFTO21CQUFDLGFBQWE7O2tGQVhiLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uRGVzdHJveSwgT25Jbml0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1CYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9EeW5hbWljRm9ybUZpZWxkIH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tZmllbGQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1Mb2FkIH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tbG9hZC9wby1keW5hbWljLWZvcm0tbG9hZC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9EeW5hbWljRm9ybUxvYWRTZXJ2aWNlIH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tbG9hZC9wby1keW5hbWljLWZvcm0tbG9hZC5zZXJ2aWNlJztcbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1WYWxpZGF0aW9uIH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9EeW5hbWljRm9ybVZhbGlkYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9EeW5hbWljRm9ybUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1keW5hbWljLWZvcm0tYmFzaWNcIiB0aXRsZT1cIlBPIER5bmFtaWMgRm9ybSBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLWJhc2ljL3NhbXBsZS1wby1keW5hbWljLWZvcm0tYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLWJhc2ljL3NhbXBsZS1wby1keW5hbWljLWZvcm0tYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyXCIgdGl0bGU9XCJQTyBEeW5hbWljIEZvcm0gLSBSZWdpc3RlclwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyL3NhbXBsZS1wby1keW5hbWljLWZvcm0tcmVnaXN0ZXIuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyL3NhbXBsZS1wby1keW5hbWljLWZvcm0tcmVnaXN0ZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1yZWdpc3Rlci9zYW1wbGUtcG8tZHluYW1pYy1mb3JtLXJlZ2lzdGVyLnNlcnZpY2UudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1keW5hbWljLWZvcm0tY29udGFpbmVyXCIgdGl0bGU9XCJQTyBEeW5hbWljIEZvcm0gLSBDb250YWluZXJcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1jb250YWluZXIvc2FtcGxlLXBvLWR5bmFtaWMtZm9ybS1jb250YWluZXIuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLWNvbnRhaW5lci9zYW1wbGUtcG8tZHluYW1pYy1mb3JtLWNvbnRhaW5lci5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZHluYW1pYy1mb3JtLWNvbnRhaW5lci9zYW1wbGUtcG8tZHluYW1pYy1mb3JtLWNvbnRhaW5lci5zZXJ2aWNlLnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKi9cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tZHluYW1pYy1mb3JtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLWR5bmFtaWMtZm9ybS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9EeW5hbWljRm9ybUNvbXBvbmVudCBleHRlbmRzIFBvRHluYW1pY0Zvcm1CYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBAVmlld0NoaWxkKCdmaWVsZHNDb21wb25lbnQnKSBmaWVsZHNDb21wb25lbnQ6IHsgZm9jdXM6IChwcm9wZXJ0eTogc3RyaW5nKSA9PiB2b2lkOyB1cGRhdGVQcmV2aW91c1ZhbHVlOiAoKSA9PiB2b2lkIH07XG5cbiAgZGlzYWJsZWRGb3JtOiBib29sZWFuO1xuXG4gIHByaXZhdGUgX2Zvcm06IE5nRm9ybTtcblxuICBwcml2YXRlIG9uTG9hZFN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICBwcml2YXRlIHNlbmRGb3JtU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gIHByaXZhdGUgY29tYm9PcHRpb25TdWJqZWN0ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuXG4gIEBWaWV3Q2hpbGQoJ2R5bmFtaWNGb3JtJykgc2V0IGZvcm0odmFsdWU6IE5nRm9ybSkge1xuICAgIC8vIG5lY2Vzc2FyaW8gcGFyYSBuYW8gb2NvcnJlciBvIEV4cHJlc3Npb25DaGFuZ2VkQWZ0ZXJJdEhhc0JlZW5DaGVja2VkRXJyb3JcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuX2Zvcm0gPSB2YWx1ZTtcblxuICAgICAgdGhpcy5lbWl0Rm9ybSgpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IGZvcm0oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Zvcm0gfHwgPGFueT57fTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgY2hhbmdlczogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgcHJpdmF0ZSBsb2FkU2VydmljZTogUG9EeW5hbWljRm9ybUxvYWRTZXJ2aWNlLFxuICAgIHByaXZhdGUgdmFsaWRhdGlvblNlcnZpY2U6IFBvRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZVxuICApIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLmxvYWQpIHtcbiAgICAgIHRoaXMubG9hZERhdGFPbkluaXRpYWxpemUoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRnVuw6fDo28gcXVlIGF0cmlidWkgZm9jbyBhbyBjYW1wbyBkZXNlamFkby5cbiAgICpcbiAgICogUGFyYSB1dGlsaXrDoS1sYSDDqSBuZWNlc3PDoXJpbyBjYXB0dXJhciBhIGluc3TDom5jaWEgZG8gYGR5bmFtaWMgZm9ybWAsIGNvbW8gcG9yIGV4ZW1wbG86XG4gICAqXG4gICAqIGBgYCBodG1sXG4gICAqIDxwby1keW5hbWljLWZvcm0gI2R5bmFtaWNGb3JtIFtwLWZpZWxkc109XCJmaWVsZHNcIj48L3BvLWR5bmFtaWMtZm9ybT5cbiAgICogYGBgXG4gICAqXG4gICAqIGBgYCBqYXZhc2NyaXB0XG4gICAqIGltcG9ydCB7IFBvRHluYW1pY0Zvcm1Db21wb25lbnQsIFBvRHluYW1pY0Zvcm1GaWVsZCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcbiAgICpcbiAgICogLi4uXG4gICAqXG4gICAqIEBWaWV3Q2hpbGQoJ2R5bmFtaWNGb3JtJywgeyBzdGF0aWM6IHRydWUgfSkgZHluYW1pY0Zvcm06IFBvRHluYW1pY0Zvcm1Db21wb25lbnQ7XG4gICAqXG4gICAqIGZpZWxkczogQXJyYXk8UG9EeW5hbWljRm9ybUZpZWxkPiA9IFtcbiAgICogICB7IHByb3BlcnR5OiAnZmllbGRPbmUnIH0sXG4gICAqICAgeyBwcm9wZXJ0eTogJ2ZpZWxkVHdvJyB9XG4gICAqIF07XG4gICAqXG4gICAqIGZpZWxkRm9jdXMoKSB7XG4gICAqICAgdGhpcy5keW5hbWljRm9ybS5mb2N1cygnZmllbGRUd28nKTtcbiAgICogfVxuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHByb3BlcnR5IE5vbWUgZGEgcHJvcHJpZWRhZGUgYXRyaWJ1w61kYSBhbyBgUG9EeW5hbWljRm9ybUZpZWxkLnByb3BlcnR5YC5cbiAgICovXG4gIGZvY3VzKHByb3BlcnR5OiBzdHJpbmcpIHtcbiAgICB0aGlzLmZpZWxkc0NvbXBvbmVudC5mb2N1cyhwcm9wZXJ0eSk7XG4gIH1cblxuICBnZXRPYmplY3RWYWx1ZSgpOiBPYnNlcnZhYmxlPGFueT4ge1xuICAgIHJldHVybiB0aGlzLmNvbWJvT3B0aW9uU3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHNlbmRPYmplY3RWYWx1ZShvYmplY3RWYWx1ZTogYW55KSB7XG4gICAgdGhpcy5jb21ib09wdGlvblN1YmplY3QubmV4dChvYmplY3RWYWx1ZSk7XG4gIH1cblxuICB2YWxpZGF0ZUZvcm0oZmllbGQ6IFBvRHluYW1pY0Zvcm1GaWVsZCkge1xuICAgIGNvbnN0IHByZXZpb3VzRm9jdXNFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcblxuICAgIHRoaXMuZGlzYWJsZUZvcm0odHJ1ZSk7XG4gICAgY29uc3QgZXJyb3JPblZhbGlkYXRpb24gPSAoKSA9PiB0aGlzLmRpc2FibGVGb3JtKGZhbHNlKTtcblxuICAgIHRoaXMuc2VuZEZvcm1TdWJzY3JpcHRpb24gPSB0aGlzLnZhbGlkYXRpb25TZXJ2aWNlXG4gICAgICAuc2VuZEZvcm1DaGFuZ2UodGhpcy52YWxpZGF0ZSwgZmllbGQsIHRoaXMudmFsdWUpXG4gICAgICAuc3Vic2NyaWJlKHRoaXMuYXBwbHlGb3JtVmFsaWRhdGlvbihwcmV2aW91c0ZvY3VzRWxlbWVudCksIGVycm9yT25WYWxpZGF0aW9uKTtcbiAgfVxuXG4gIHByaXZhdGUgYXBwbHlGb3JtVXBkYXRlc09uTG9hZChwcmV2aW91c0ZvY3VzRWxlbWVudDogRWxlbWVudCk6IChkeW5hbWljRm9ybURhdGE6IFBvRHluYW1pY0Zvcm1Mb2FkKSA9PiB2b2lkIHtcbiAgICByZXR1cm4gZHluYW1pY0Zvcm1EYXRhID0+IHtcbiAgICAgIHRoaXMudXBkYXRlTW9kZWxPbkxvYWQoZHluYW1pY0Zvcm1EYXRhKTtcbiAgICAgIHRoaXMuZGlzYWJsZUZvcm0oZmFsc2UpO1xuICAgICAgdGhpcy5zZXRGb2N1c09uRmllbGRCeVByb3BlcnR5KGR5bmFtaWNGb3JtRGF0YS5mb2N1cywgcHJldmlvdXNGb2N1c0VsZW1lbnQpO1xuICAgIH07XG4gIH1cblxuICBwcml2YXRlIGFwcGx5Rm9ybVZhbGlkYXRpb24ocHJldmlvdXNGb2N1c0VsZW1lbnQ6IEVsZW1lbnQpOiAoZHluYW1pY0Zvcm1EYXRhOiBQb0R5bmFtaWNGb3JtVmFsaWRhdGlvbikgPT4gdm9pZCB7XG4gICAgcmV0dXJuIGR5bmFtaWNGb3JtRGF0YSA9PiB7XG4gICAgICB0aGlzLnVwZGF0ZU1vZGVsV2l0aFZhbGlkYXRpb24oZHluYW1pY0Zvcm1EYXRhKTtcbiAgICAgIHRoaXMuZGlzYWJsZUZvcm0oZmFsc2UpO1xuICAgICAgdGhpcy5zZXRGb2N1c09uRmllbGRCeVByb3BlcnR5KGR5bmFtaWNGb3JtRGF0YS5mb2N1cywgcHJldmlvdXNGb2N1c0VsZW1lbnQpO1xuICAgIH07XG4gIH1cblxuICBwcml2YXRlIGRpc2FibGVGb3JtKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5kaXNhYmxlZEZvcm0gPSB2YWx1ZTtcbiAgICB0aGlzLmNoYW5nZXMuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgcHJpdmF0ZSBlbWl0Rm9ybSgpIHtcbiAgICBpZiAoIXRoaXMuZ3JvdXBGb3JtICYmIHRoaXMuZm9ybU91dHB1dC5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmZvcm1PdXRwdXQuZW1pdCh0aGlzLmZvcm0pO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgbG9hZERhdGFPbkluaXRpYWxpemUoKSB7XG4gICAgY29uc3QgcHJldmlvdXNGb2N1c0VsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXG4gICAgdGhpcy5kaXNhYmxlZEZvcm0gPSB0cnVlO1xuICAgIGNvbnN0IGVycm9yT25Mb2FkID0gKCkgPT4gKHRoaXMuZGlzYWJsZWRGb3JtID0gZmFsc2UpO1xuXG4gICAgdGhpcy5vbkxvYWRTdWJzY3JpcHRpb24gPSB0aGlzLmxvYWRTZXJ2aWNlXG4gICAgICAuZXhlY3V0ZUxvYWQodGhpcy5sb2FkLCB0aGlzLnZhbHVlKVxuICAgICAgLnN1YnNjcmliZSh0aGlzLmFwcGx5Rm9ybVVwZGF0ZXNPbkxvYWQocHJldmlvdXNGb2N1c0VsZW1lbnQpLCBlcnJvck9uTG9hZCk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICBpZiAodGhpcy5vbkxvYWRTdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMub25Mb2FkU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2VuZEZvcm1TdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMuc2VuZEZvcm1TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldEZvY3VzT25GaWVsZEJ5UHJvcGVydHkocHJvcGVydHk6IHN0cmluZywgcHJldmlvdXNGb2N1c0VsZW1lbnQ6IEVsZW1lbnQpIHtcbiAgICBpZiAocHJvcGVydHkpIHtcbiAgICAgIC8vIHByZWNpc2EgZG8gdGltZW91dCBwYXJhIHF1ZSBvIHZhbG9yIHNlamEgYXRyaWJ1aWRvIG5vIGNhbXBvIGFudGVzIGRlIHNldGFyIG8gZm9jdXMsXG4gICAgICAvLyBwYXJhIG5hbyBkaXNwYXJhciBhIG11ZGFuw6dhIHBvc3Rlcmlvcm1lbnRlLiBTaXR1YcOnw6NvIG9jb3JyZSBxdWFuZG8gcmV0b3JuYXIgY2FtcG8gY29tIHZhbG9yIGUgZm9jdXMgYXRyaWJ1aWRvIGEgZWxlLlxuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmZvY3VzKHByb3BlcnR5KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByZXZpb3VzRm9jdXNFbGVtZW50Wydmb2N1cyddKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSB1cGRhdGVNb2RlbE9uTG9hZChsb2FkZWRGb3JtRGF0YTogUG9EeW5hbWljRm9ybUxvYWQpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMudmFsdWUsIGxvYWRlZEZvcm1EYXRhLnZhbHVlKTtcbiAgICB0aGlzLmZpZWxkcyA9IHRoaXMubG9hZFNlcnZpY2UuY3JlYXRlQW5kVXBkYXRlRmllbGRzRm9ybShsb2FkZWRGb3JtRGF0YS5maWVsZHMsIHRoaXMuZmllbGRzKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlTW9kZWxXaXRoVmFsaWRhdGlvbihmb3JtRGF0YTogUG9EeW5hbWljRm9ybVZhbGlkYXRpb24pIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMudmFsdWUsIGZvcm1EYXRhLnZhbHVlKTtcbiAgICB0aGlzLmZpZWxkc0NvbXBvbmVudC51cGRhdGVQcmV2aW91c1ZhbHVlKCk7XG4gICAgdGhpcy5maWVsZHMgPSB0aGlzLnZhbGlkYXRpb25TZXJ2aWNlLnVwZGF0ZUZpZWxkc0Zvcm0oZm9ybURhdGEuZmllbGRzLCB0aGlzLmZpZWxkcyk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJncm91cEZvcm07IHRoZW4gcmV1c2VGb3JtVGVtcGxhdGU7IGVsc2UgdW5pcXVlRm9ybVRlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSAjcmV1c2VGb3JtVGVtcGxhdGU+XG4gIDxwby1keW5hbWljLWZvcm0tZmllbGRzICNmaWVsZHNDb21wb25lbnQgW3AtYXV0by1mb2N1c109XCJhdXRvRm9jdXNcIiBbcC1maWVsZHNdPVwiZmllbGRzXCIgW3AtdmFsdWVdPVwidmFsdWVcIj5cbiAgPC9wby1keW5hbWljLWZvcm0tZmllbGRzPlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICN1bmlxdWVGb3JtVGVtcGxhdGU+XG4gIDxmb3JtICNkeW5hbWljRm9ybT1cIm5nRm9ybVwiPlxuICAgIDxwby1keW5hbWljLWZvcm0tZmllbGRzXG4gICAgICAjZmllbGRzQ29tcG9uZW50XG4gICAgICBbKHAtZmllbGRzKV09XCJmaWVsZHNcIlxuICAgICAgW3AtYXV0by1mb2N1c109XCJhdXRvRm9jdXNcIlxuICAgICAgW3AtZGlzYWJsZWQtZm9ybV09XCJkaXNhYmxlZEZvcm1cIlxuICAgICAgW3AtdmFsaWRhdGVdPVwidmFsaWRhdGVcIlxuICAgICAgW3AtdmFsaWRhdGUtZmllbGRzXT1cInZhbGlkYXRlRmllbGRzXCJcbiAgICAgIFtwLXZhbGlkYXRlLW9uLWlucHV0XT1cInZhbGlkYXRlT25JbnB1dFwiXG4gICAgICBbcC12YWx1ZV09XCJ2YWx1ZVwiXG4gICAgICAocC1vYmplY3QtdmFsdWUpPVwic2VuZE9iamVjdFZhbHVlKCRldmVudClcIlxuICAgICAgKHAtZm9ybS12YWxpZGF0ZSk9XCJ2YWxpZGF0ZUZvcm0oJGV2ZW50KVwiXG4gICAgPlxuICAgIDwvcG8tZHluYW1pYy1mb3JtLWZpZWxkcz5cbiAgPC9mb3JtPlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==