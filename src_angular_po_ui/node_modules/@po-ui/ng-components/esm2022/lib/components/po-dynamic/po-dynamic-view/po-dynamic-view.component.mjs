import { Component } from '@angular/core';
import { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../pipes/po-time/po-time.pipe";
import * as i3 from "./services/po-dynamic-view.service";
import * as i4 from "../../po-field/po-combo/po-combo-filter.service";
import * as i5 from "../../po-field/po-multiselect/po-multiselect-filter.service";
import * as i6 from "../../po-divider/po-divider.component";
import * as i7 from "../../po-info/po-info.component";
import * as i8 from "../../po-tag/po-tag.component";
import * as i9 from "../../po-image/po-image.component";
import * as i10 from "../po-dynamic-container/po-dynamic-container.component";
function PoDynamicViewComponent_div_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
const _c0 = a0 => ({ $implicit: a0 });
function PoDynamicViewComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 6);
    i0.ɵɵtemplate(1, PoDynamicViewComponent_div_0_ng_container_1_Template, 1, 0, "ng-container", 7);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    const _r4 = i0.ɵɵreference(4);
    const _r2 = i0.ɵɵreference(2);
    i0.ɵɵclassProp("po-dynamic", ctx_r0.hasContainers);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", ctx_r0.hasContainers ? _r4 : _r2)("ngTemplateOutletContext", i0.ɵɵpureFunction1(4, _c0, ctx_r0.hasContainers ? ctx_r0.containerFields : ctx_r0.visibleFields));
} }
function PoDynamicViewComponent_ng_template_1_ng_template_0_po_divider_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-divider", 10);
} if (rf & 2) {
    const field_r14 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("p-label", field_r14.divider);
} }
function PoDynamicViewComponent_ng_template_1_ng_template_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoDynamicViewComponent_ng_template_1_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, PoDynamicViewComponent_ng_template_1_ng_template_0_po_divider_0_Template, 1, 1, "po-divider", 9)(1, PoDynamicViewComponent_ng_template_1_ng_template_0_ng_container_1_Template, 1, 0, "ng-container", 7);
} if (rf & 2) {
    const field_r14 = ctx.$implicit;
    i0.ɵɵnextContext(2);
    const _r6 = i0.ɵɵreference(6);
    const _r8 = i0.ɵɵreference(8);
    const _r10 = i0.ɵɵreference(10);
    i0.ɵɵproperty("ngIf", field_r14 == null ? null : field_r14.divider == null ? null : field_r14.divider.trim());
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", !field_r14.tag && !field_r14.image ? _r6 : !field_r14.image ? _r8 : _r10)("ngTemplateOutletContext", i0.ɵɵpureFunction1(3, _c0, field_r14));
} }
function PoDynamicViewComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, PoDynamicViewComponent_ng_template_1_ng_template_0_Template, 2, 5, "ng-template", 8);
} if (rf & 2) {
    const fields_r12 = ctx.$implicit;
    i0.ɵɵproperty("ngForOf", fields_r12);
} }
function PoDynamicViewComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-dynamic-container", 11);
} if (rf & 2) {
    const fields_r18 = ctx.$implicit;
    i0.ɵɵnextContext();
    const _r2 = i0.ɵɵreference(2);
    i0.ɵɵproperty("p-fields", fields_r18)("p-content", _r2);
} }
function PoDynamicViewComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-info", 12);
} if (rf & 2) {
    const field_r19 = ctx.$implicit;
    const ctx_r5 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", field_r19.cssClass)("p-label", field_r19.label)("p-value", ctx_r5.setFieldValue(field_r19));
} }
function PoDynamicViewComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-tag", 13);
} if (rf & 2) {
    const field_r20 = ctx.$implicit;
    const ctx_r7 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ngClass", field_r20.cssClass)("p-color", field_r20.color)("p-icon", field_r20.icon)("p-inverse", field_r20.inverse)("p-label", field_r20.label)("p-value", ctx_r7.setFieldValue(field_r20));
} }
function PoDynamicViewComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-image", 14);
} if (rf & 2) {
    const field_r21 = ctx.$implicit;
    i0.ɵɵproperty("p-alt", field_r21.alt)("p-height", field_r21.height)("p-src", field_r21.value);
} }
/**
 * @docsExtends PoDynamicViewBaseComponent
 *
 * @example
 *
 * <example name="po-dynamic-view-basic" title="PO Dynamic View Basic">
 *  <file name="sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html"> </file>
 *  <file name="sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-view-employee" title="PO Dynamic View - Employee">
 *  <file name="sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html"> </file>
 *  <file name="sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-view-employee-on-load" title="PO Dynamic View - Employee on load">
 *  <file name="sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.html"> </file>
 *  <file name="sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.ts"> </file>
 *  <file name="sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.service.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-view-container" title="PO Dynamic View - Employee on load">
 *  <file name="sample-po-dynamic-view-container/sample-po-dynamic-view-container.component.html"> </file>
 *  <file name="sample-po-dynamic-view-container/sample-po-dynamic-view-container.component.ts"> </file>
 * </example>
 */
export class PoDynamicViewComponent extends PoDynamicViewBaseComponent {
    initChanges;
    constructor(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService, comboFilterService, multiselectFilterService) {
        super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService, comboFilterService, multiselectFilterService);
    }
    ngOnChanges(changes) {
        if (this.load && !this.initChanges) {
            this.initChanges = false;
        }
        else {
            this.initChanges = true;
        }
        if ((changes.fields || changes.value || changes.showAllValue) && this.initChanges) {
            this.visibleFields = this.getVisibleFields();
            this.setContainerFields();
        }
    }
    ngOnInit() {
        if (this.load) {
            this.updateValuesAndFieldsOnLoad().finally(() => {
                this.setContainerFields();
            });
        }
    }
    setFieldValue(field) {
        if (field.options) {
            const selectedOption = field.options.find(option => option.value === field.value);
            return selectedOption ? selectedOption.label : field.value;
        }
        else if (field.type === 'boolean' && 'booleanTrue' in field && 'booleanFalse' in field) {
            return field.value ? field.booleanTrue : field.booleanFalse;
        }
        else {
            return field.value;
        }
    }
    async getValuesAndFieldsFromLoad() {
        let valueAndFieldsFromLoad;
        if (typeof this.load === 'string') {
            valueAndFieldsFromLoad = await this.dynamicViewService.onLoad(this.load, this.value);
        }
        else if (typeof this.load === 'function') {
            valueAndFieldsFromLoad = this.load();
        }
        return valueAndFieldsFromLoad || {};
    }
    getVisibleFields() {
        if (this.showAllValue) {
            return this.getMergedFields();
        }
        return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();
    }
    setFieldOnLoad(fieldOnLoad) {
        const index = this.fields.findIndex(field => field.property === fieldOnLoad.property);
        if (index >= 0) {
            this.fields[index] = { ...this.fields[index], ...fieldOnLoad };
        }
        else {
            this.fields.push({ ...fieldOnLoad });
        }
    }
    setFieldsOnLoad(fields) {
        if (fields) {
            fields.forEach(fieldOnLoad => {
                this.setFieldOnLoad(fieldOnLoad);
            });
        }
    }
    setValueOnLoad(newValue) {
        Object.assign(this.value, newValue);
    }
    async updateValuesAndFieldsOnLoad() {
        const { value, fields } = await this.getValuesAndFieldsFromLoad();
        this.setValueOnLoad(value);
        this.setFieldsOnLoad(fields);
        this.visibleFields = this.getVisibleFields();
        this.initChanges = true;
    }
    static ɵfac = function PoDynamicViewComponent_Factory(t) { return new (t || PoDynamicViewComponent)(i0.ɵɵdirectiveInject(i1.CurrencyPipe), i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i1.DecimalPipe), i0.ɵɵdirectiveInject(i2.PoTimePipe), i0.ɵɵdirectiveInject(i1.TitleCasePipe), i0.ɵɵdirectiveInject(i3.PoDynamicViewService), i0.ɵɵdirectiveInject(i4.PoComboFilterService), i0.ɵɵdirectiveInject(i5.PoMultiselectFilterService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoDynamicViewComponent, selectors: [["po-dynamic-view"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 11, vars: 1, consts: [["class", "po-row", 3, "po-dynamic", 4, "ngIf"], ["poContent", ""], ["poContentContainer", ""], ["poInfo", ""], ["poTag", ""], ["poImage", ""], [1, "po-row"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["ngFor", "", 3, "ngForOf"], ["class", "po-sm-12", 3, "p-label", 4, "ngIf"], [1, "po-sm-12", 3, "p-label"], [3, "p-fields", "p-content"], [3, "ngClass", "p-label", "p-value"], [3, "ngClass", "p-color", "p-icon", "p-inverse", "p-label", "p-value"], [3, "p-alt", "p-height", "p-src"]], template: function PoDynamicViewComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, PoDynamicViewComponent_div_0_Template, 2, 6, "div", 0)(1, PoDynamicViewComponent_ng_template_1_Template, 1, 1, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor)(3, PoDynamicViewComponent_ng_template_3_Template, 1, 2, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor)(5, PoDynamicViewComponent_ng_template_5_Template, 1, 3, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor)(7, PoDynamicViewComponent_ng_template_7_Template, 1, 6, "ng-template", null, 4, i0.ɵɵtemplateRefExtractor)(9, PoDynamicViewComponent_ng_template_9_Template, 1, 3, "ng-template", null, 5, i0.ɵɵtemplateRefExtractor);
        } if (rf & 2) {
            i0.ɵɵproperty("ngIf", ctx.visibleFields.length);
        } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i6.PoDividerComponent, i7.PoInfoComponent, i8.PoTagComponent, i9.PoImageComponent, i10.PoDynamicContainerComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoDynamicViewComponent, [{
        type: Component,
        args: [{ selector: 'po-dynamic-view', template: "<div class=\"po-row\" [class.po-dynamic]=\"hasContainers\" *ngIf=\"visibleFields.length\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      hasContainers ? poContentContainer : poContent;\n      context: { $implicit: hasContainers ? containerFields : visibleFields }\n    \"\n  ></ng-container>\n</div>\n\n<ng-template #poContent let-fields>\n  <ng-template ngFor let-field [ngForOf]=\"fields\">\n    <po-divider *ngIf=\"field?.divider?.trim()\" class=\"po-sm-12\" [p-label]=\"field.divider\"> </po-divider>\n    <ng-container\n      *ngTemplateOutlet=\"\n        !field.tag && !field.image ? poInfo : !field.image ? poTag : poImage;\n        context: { $implicit: field }\n      \"\n    >\n    </ng-container>\n  </ng-template>\n</ng-template>\n\n<ng-template #poContentContainer let-fields>\n  <po-dynamic-container [p-fields]=\"fields\" [p-content]=\"poContent\"></po-dynamic-container>\n</ng-template>\n\n<ng-template #poInfo let-field>\n  <po-info [ngClass]=\"field.cssClass\" [p-label]=\"field.label\" [p-value]=\"setFieldValue(field)\"> </po-info>\n</ng-template>\n\n<ng-template #poTag let-field>\n  <po-tag\n    [ngClass]=\"field.cssClass\"\n    [p-color]=\"field.color\"\n    [p-icon]=\"field.icon\"\n    [p-inverse]=\"field.inverse\"\n    [p-label]=\"field.label\"\n    [p-value]=\"setFieldValue(field)\"\n  >\n  </po-tag>\n</ng-template>\n\n<ng-template #poImage let-field>\n  <po-image [p-alt]=\"field.alt\" [p-height]=\"field.height\" [p-src]=\"field.value\"> </po-image>\n</ng-template>\n" }]
    }], () => [{ type: i1.CurrencyPipe }, { type: i1.DatePipe }, { type: i1.DecimalPipe }, { type: i2.PoTimePipe }, { type: i1.TitleCasePipe }, { type: i3.PoDynamicViewService }, { type: i4.PoComboFilterService }, { type: i5.PoMultiselectFilterService }], null); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoDynamicViewComponent, { className: "PoDynamicViewComponent", filePath: "lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.component.ts", lineNumber: 42 }); })();
//# sourceMappingURL=data:application/json;base64,