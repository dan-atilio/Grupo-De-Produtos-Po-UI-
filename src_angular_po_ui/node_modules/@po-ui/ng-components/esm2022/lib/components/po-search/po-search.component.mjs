import { ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';
import { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';
import { PoKeyCodeEnum } from './../../enums/po-key-code.enum';
import { PoSearchFilterMode } from './enum/po-search-filter-mode.enum';
import { PoSearchBaseComponent } from './po-search-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../services/po-language/po-language.service";
import * as i2 from "../../services/po-control-position/po-control-position.service";
import * as i3 from "@angular/common";
import * as i4 from "../po-field/po-clean/po-clean.component";
import * as i5 from "../po-icon/po-icon.component";
import * as i6 from "../po-listbox/po-listbox.component";
import * as i7 from "../po-dropdown/po-dropdown.component";
const _c0 = ["poSearchInput"];
const _c1 = ["poListboxContainerElement"];
const _c2 = ["poListboxElement"];
const _c3 = ["poListbox"];
function PoSearchComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 12);
    i0.ɵɵelement(1, "po-dropdown", 13);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-label", ctx_r0.searchFilterSelectLabel)("p-disabled", ctx_r0.disabled)("p-actions", ctx_r0.searchFilterSelectActions);
} }
function PoSearchComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 14);
    i0.ɵɵelement(1, "po-icon", 15);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-icon", ctx_r1.icon ? ctx_r1.icon : "ICON_SEARCH");
} }
function PoSearchComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r9 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 16);
    i0.ɵɵlistener("click", function PoSearchComponent_button_6_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.clearSearch()); })("keydown.enter", function PoSearchComponent_button_6_Template_button_keydown_enter_0_listener() { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.clearSearch()); });
    i0.ɵɵelement(1, "po-clean", 17);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ariaLabel", ctx_r3.literals.clean);
} }
function PoSearchComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r12 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 18);
    i0.ɵɵlistener("click", function PoSearchComponent_button_7_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); const _r2 = i0.ɵɵreference(4); return i0.ɵɵresetView(ctx_r11.onSearchChange(_r2.value, true, true)); })("keydown.enter", function PoSearchComponent_button_7_Template_button_keydown_enter_0_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); const _r2 = i0.ɵɵreference(4); return i0.ɵɵresetView(ctx_r13.onSearchChange(_r2.value, true, true)); });
    i0.ɵɵelement(1, "po-icon", 15);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵproperty("ariaLabel", ctx_r4.literals.search)("disabled", ctx_r4.disabled);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-icon", ctx_r4.icon ? ctx_r4.icon : "ICON_SEARCH");
} }
const poSearchContainerOffset = 8;
const poSearchContainerPositionDefault = 'bottom';
/**
 * @docsExtends PoSearchBaseComponent
 *
 * @example
 *
 * <example name="po-search-basic" title="PO Search Basic">
 *  <file name="sample-po-search-basic/sample-po-search-basic.component.html"> </file>
 *  <file name="sample-po-search-basic/sample-po-search-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-search-labs" title="PO Search Labs">
 *  <file name="sample-po-search-labs/sample-po-search-labs.component.html"> </file>
 *  <file name="sample-po-search-labs/sample-po-search-labs.component.ts"> </file>
 *  <file name="sample-po-search-labs/sample-po-search-labs.service.ts"> </file>
 * </example>
 *
 * <example name="po-search-find-people" title="PO Search Find People">
 *  <file name="sample-po-search-find-people/sample-po-search-find-people.component.html"> </file>
 *  <file name="sample-po-search-find-people/sample-po-search-find-people.component.ts"> </file>
 *  <file name="sample-po-search-find-people/sample-po-search-find-people.service.ts"> </file>
 * </example>
 *
 * <example name="po-search-listbox" title="PO Search With Listbox">
 *  <file name="sample-po-search-listbox/sample-po-search-listbox.component.html"> </file>
 *  <file name="sample-po-search-listbox/sample-po-search-listbox.component.ts"> </file>
 *  <file name="sample-po-search-listbox/sample-po-search-listbox.service.ts"> </file>
 * </example>
 *
 * <example name="po-search-filter-select" title="PO Search With Filter Select + Listbox">
 *  <file name="sample-po-search-filter-select/sample-po-search-filter-select.component.html"> </file>
 *  <file name="sample-po-search-filter-select/sample-po-search-filter-select.component.ts"> </file>
 * </example>
 *
 */
export class PoSearchComponent extends PoSearchBaseComponent {
    languageService;
    renderer;
    changeDetector;
    controlPosition;
    clickoutListener;
    eventResizeListener;
    poSearchInput;
    poListboxContainerElement;
    poListboxElement;
    poListbox;
    listboxFilteredItems = [];
    filteredItems = [];
    listboxOpen = false;
    shouldMarkLetters = true;
    isFiltering = false;
    listboxItemclicked = false;
    searchFilter = {};
    searchFilterSelectLabel;
    searchFilterSelectActions;
    constructor(languageService, renderer, changeDetector, controlPosition) {
        super(languageService);
        this.languageService = languageService;
        this.renderer = renderer;
        this.changeDetector = changeDetector;
        this.controlPosition = controlPosition;
    }
    ngOnInit() {
        this.filteredItems = this.items;
        if (this.showListbox) {
            this.listboxFilteredItems = this.listboxItems;
        }
        if (this.filterSelect) {
            this.createDropdownFilterSelect();
        }
    }
    ngOnChanges(changes) {
        if (changes.filterSelect && changes.filterSelect.currentValue) {
            this.createDropdownFilterSelect();
        }
    }
    ngOnDestroy() {
        this.removeListeners();
    }
    clearSearch() {
        this.poSearchInput.nativeElement.value = '';
        this.onSearchChange('', true);
        this.filteredItemsChange.emit(this.items);
        this.onCloseListbox();
    }
    onSearchChange(searchText, activated, buttonClick) {
        const searchTextInitial = searchText;
        if (searchText !== undefined) {
            searchText = searchText.toLowerCase();
        }
        this.isFiltering = true;
        if (this.showListbox && !buttonClick && searchText.length > 0) {
            this.controlListboxVisibility(true);
            this.listboxFilteredItems = this.getListboxFilteredItems(searchText);
        }
        else {
            if (searchText.length === 0) {
                this.listboxFilteredItems = this.listboxItems;
            }
        }
        if (activated && !this.listboxItemclicked) {
            this.updateFilteredItems(searchText);
            this.filteredItemsChange.emit(this.filteredItems);
            if (this.filterSelect) {
                this.searchFilter = {
                    ...this.searchFilter,
                    value: searchTextInitial
                };
            }
            else {
                this.searchFilter = {
                    filter: this.filterKeys,
                    value: searchTextInitial
                };
            }
            this.filter.emit(this.searchFilter);
            this.changeModel.emit(searchText);
        }
        if (this.listboxItemclicked) {
            this.listboxItemclicked = false;
        }
        this.changeDetector.detectChanges();
    }
    updateFilteredItems(searchText) {
        if (this.items && this.items.length > 0) {
            this.filteredItems = this.getFilteredItems(searchText);
        }
        else {
            this.filteredItems = [];
        }
    }
    getFilteredItems(searchText) {
        return this.items.filter(item => this.itemMatchesFilter(item, searchText));
    }
    itemMatchesFilter(item, searchText) {
        const valuesToSearch = this.filterKeys
            .map(key => (typeof item[key] !== 'string' ? String(item[key]) : item[key]))
            .map(value => (value ? value.toLowerCase() : ''));
        return valuesToSearch.some(value => this.filterValue(value, searchText));
    }
    getListboxFilteredItems(searchText) {
        return this.listboxItems.filter(item => this.filterValue(item.value, searchText));
    }
    filterValue(value, searchText) {
        value = value?.toLowerCase();
        switch (this.filterType) {
            case PoSearchFilterMode.startsWith:
                return value?.startsWith(searchText);
            case PoSearchFilterMode.contains:
                return value?.includes(searchText);
            case PoSearchFilterMode.endsWith:
                return value?.endsWith(searchText);
            default:
                return false;
        }
    }
    get listboxItems() {
        return this.items
            .map(item => this.filterKeys.map(key => item[key]).map(item => (typeof item !== 'string' ? String(item) : item)))
            .flat()
            .map(value => ({ label: value, value }))
            .filter((obj, index, self) => index === self.findIndex(o => o.label === obj.label && o.value === obj.value));
    }
    onCloseListbox() {
        this.poSearchInput.nativeElement.focus();
        this.controlListboxVisibility(false);
        this.isFiltering = false;
    }
    onListboxClick(option, event) {
        if (event) {
            event.stopPropagation();
        }
        if (!event || event.code === 'Enter') {
            this.listboxItemclicked = true;
        }
        this.poSearchInput.nativeElement.value = option.value;
        this.listboxOnClick.emit(option.value);
        this.onCloseListbox();
        if (this.type === 'action') {
            this.listboxItemclicked = false;
            this.onSearchChange(option.value.toString(), true, true);
        }
    }
    onBlur() {
        if (this.listboxOpen) {
            if (!this.poListbox.items.length) {
                this.controlListboxVisibility(false);
            }
            else {
                this.focusItem();
            }
        }
    }
    onKeyDown(event) {
        const key = event.keyCode;
        if (event.shiftKey && key === PoKeyCodeEnum.tab) {
            this.controlListboxVisibility(false);
            return;
        }
        if (key === PoKeyCodeEnum.tab) {
            this.controlListboxVisibility(false);
            return;
        }
        if (key === PoKeyCodeEnum.arrowDown) {
            event.preventDefault();
            if (!this.listboxOpen) {
                return;
            }
            this.focusItem();
            this.controlListboxVisibility(true);
            return;
        }
        if (key === PoKeyCodeEnum.esc) {
            this.controlListboxVisibility(false);
            this.poSearchInput.nativeElement.focus();
        }
        if (key === PoKeyCodeEnum.enter && this.listboxOpen) {
            this.controlListboxVisibility(false);
            this.isFiltering = false;
        }
    }
    focusItem() {
        const listboxItemList = document.querySelectorAll('.po-listbox-item');
        setTimeout(() => {
            Array.from(listboxItemList).forEach((el) => {
                el.tabIndex = -1;
                el.classList.remove('cdk-option-active');
            });
            const firstOption = listboxItemList[0];
            firstOption.focus();
            firstOption.classList.add('cdk-option-active');
        });
    }
    setContainerPosition() {
        if (this.poListboxContainerElement && this.poSearchInput) {
            this.controlPosition.setElements(this.poListboxContainerElement.nativeElement, poSearchContainerOffset, this.poSearchInput, ['top', 'bottom'], true);
            this.adjustContainerPosition();
        }
    }
    adjustContainerPosition() {
        if (this.poListboxContainerElement && this.poSearchInput) {
            this.controlPosition.adjustPosition(poSearchContainerPositionDefault);
        }
    }
    controlListboxVisibility(toOpen) {
        toOpen ? this.openListbox() : this.closeListbox();
    }
    openListbox() {
        this.listboxOpen = true;
        this.changeDetector.detectChanges();
        this.initializeListeners();
        this.poSearchInput.nativeElement.focus();
        this.setContainerPosition();
    }
    closeListbox() {
        this.listboxOpen = false;
        this.changeDetector.detectChanges();
        this.removeListeners();
    }
    clickedOutsideInput(event) {
        if (this.listboxOpen &&
            !this.poSearchInput.nativeElement.contains(event.target) &&
            (!this.poListboxElement || !this.poListboxElement.nativeElement.contains(event.target))) {
            this.controlListboxVisibility(false);
        }
    }
    initializeListeners() {
        this.removeListeners();
        this.clickoutListener = this.renderer.listen('document', 'click', (event) => {
            this.clickedOutsideInput(event);
        });
        this.eventResizeListener = this.renderer.listen('window', 'resize', () => {
            setTimeout(() => this.adjustContainerPosition(), 250);
        });
        window.addEventListener('scroll', this.onScroll, true);
    }
    removeListeners() {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.eventResizeListener) {
            this.eventResizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    }
    onScroll = () => {
        this.adjustContainerPosition();
    };
    getInputValue() {
        return this.poSearchInput.nativeElement.value;
    }
    createDropdownFilterSelect() {
        this.searchFilterSelectActions = [];
        if (!this.filterSelect) {
            return;
        }
        this.filterSelect.forEach(filterOption => {
            const selectOption = {
                label: filterOption.label,
                action: () => this.changeFilterSelect(filterOption),
                selected: this.isSelected(filterOption)
            };
            this.searchFilterSelectActions.push(selectOption);
        });
        this.changeFilterSelect(this.filterSelect[0]);
    }
    isSelected(filterOption) {
        return this.searchFilterSelectLabel === filterOption.label;
    }
    changeFilterSelect(filterOption) {
        this.searchFilterSelectLabel = filterOption.label;
        this.filterKeys = Array.isArray(filterOption.value) ? [...filterOption.value] : [filterOption.value];
        if (!this.searchFilterSelectActions) {
            return;
        }
        this.searchFilterSelectActions.map(action => (action.selected = false));
        const selectAction = this.searchFilterSelectActions.find(action => action.label === this.searchFilterSelectLabel);
        selectAction.selected = true;
        this.searchFilter = {
            filter: filterOption.label === this.literals.all ? ['all'] : filterOption.value
        };
        this.poSearchInput.nativeElement.focus();
        if (this.type === 'action') {
            this.onSearchChange(this.getInputValue(), true);
        }
    }
    static ɵfac = function PoSearchComponent_Factory(t) { return new (t || PoSearchComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.PoControlPositionService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoSearchComponent, selectors: [["po-search"]], viewQuery: function PoSearchComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7, ElementRef);
            i0.ɵɵviewQuery(_c1, 5, ElementRef);
            i0.ɵɵviewQuery(_c2, 5, ElementRef);
            i0.ɵɵviewQuery(_c3, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poSearchInput = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poListboxContainerElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poListboxElement = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poListbox = _t.first);
        } }, features: [i0.ɵɵProvidersFeature([PoControlPositionService]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 13, vars: 20, consts: [[1, "po-search"], ["class", "po-search-select", 4, "ngIf"], ["class", "po-search-icon", 4, "ngIf"], ["type", "text", 1, "po-search-input", 3, "ariaLabel", "disabled", "placeholder", "input", "keyup.enter", "keydown", "blur"], ["poSearchInput", ""], [1, "po-search-buttons"], ["class", "po-search-button po-search-button-clean", "type", "button", 3, "ariaLabel", "click", "keydown.enter", 4, "ngIf"], ["class", "po-search-button po-search-button-trigger", "type", "button", 3, "ariaLabel", "disabled", "click", "keydown.enter", 4, "ngIf"], [1, "po-search-listbox-container", 3, "hidden"], ["poListboxContainerElement", ""], ["p-type", "option", 3, "p-items", "p-visible", "p-filter-mode", "p-should-mark-letter", "p-filtering", "p-search-value", "p-selectcombo-item", "p-close"], ["poListbox", "", "poListboxElement", ""], [1, "po-search-select"], [3, "p-label", "p-disabled", "p-actions"], [1, "po-search-icon"], [3, "p-icon"], ["type", "button", 1, "po-search-button", "po-search-button-clean", 3, "ariaLabel", "click", "keydown.enter"], [1, "po-icon-input"], ["type", "button", 1, "po-search-button", "po-search-button-trigger", 3, "ariaLabel", "disabled", "click", "keydown.enter"]], template: function PoSearchComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, PoSearchComponent_div_1_Template, 2, 3, "div", 1)(2, PoSearchComponent_div_2_Template, 2, 1, "div", 2);
            i0.ɵɵelementStart(3, "input", 3, 4);
            i0.ɵɵlistener("input", function PoSearchComponent_Template_input_input_3_listener($event) { ctx.onSearchChange($event.target.value, false); return ctx.onSearchChange($event.target.value, ctx.type === "action" ? true : false); })("keyup.enter", function PoSearchComponent_Template_input_keyup_enter_3_listener($event) { ctx.listboxOpen ? ctx.closeListbox() : ctx.onSearchChange($event.target.value, ctx.type === "trigger" ? true : false, true); return ctx.closeListbox(); })("keydown", function PoSearchComponent_Template_input_keydown_3_listener($event) { return ctx.onKeyDown($event); })("blur", function PoSearchComponent_Template_input_blur_3_listener() { return ctx.onBlur(); });
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(5, "div", 5);
            i0.ɵɵtemplate(6, PoSearchComponent_button_6_Template, 2, 1, "button", 6)(7, PoSearchComponent_button_7_Template, 2, 3, "button", 7);
            i0.ɵɵelementEnd()();
            i0.ɵɵelementStart(8, "div", 8, 9)(10, "po-listbox", 10, 11);
            i0.ɵɵlistener("p-selectcombo-item", function PoSearchComponent_Template_po_listbox_p_selectcombo_item_10_listener($event) { return ctx.onListboxClick($event, $event.event); })("p-close", function PoSearchComponent_Template_po_listbox_p_close_10_listener() { return ctx.onCloseListbox(); });
            i0.ɵɵelementEnd()();
        } if (rf & 2) {
            const _r2 = i0.ɵɵreference(4);
            i0.ɵɵclassProp("po-search-disabled", ctx.disabled);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.filterSelect);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.type === "action");
            i0.ɵɵadvance();
            i0.ɵɵclassProp("po-search-input-clean", !!_r2.value && !ctx.disabled)("po-search-input-trigger", ctx.type === "trigger");
            i0.ɵɵproperty("ariaLabel", ctx.ariaLabel)("disabled", ctx.disabled)("placeholder", ctx.literals.search);
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("ngIf", !!_r2.value && !ctx.disabled);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.type === "trigger");
            i0.ɵɵadvance();
            i0.ɵɵproperty("hidden", !ctx.listboxOpen);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("p-items", ctx.listboxFilteredItems)("p-visible", ctx.listboxOpen)("p-filter-mode", ctx.filterType)("p-should-mark-letter", ctx.shouldMarkLetters)("p-filtering", ctx.isFiltering)("p-search-value", ctx.getInputValue());
        } }, dependencies: [i3.NgIf, i4.PoCleanComponent, i5.PoIconComponent, i6.PoListBoxComponent, i7.PoDropdownComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSearchComponent, [{
        type: Component,
        args: [{ selector: 'po-search', providers: [PoControlPositionService], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"po-search\" [class.po-search-disabled]=\"disabled\">\n  <div class=\"po-search-select\" *ngIf=\"filterSelect\">\n    <po-dropdown [p-label]=\"searchFilterSelectLabel\" [p-disabled]=\"disabled\" [p-actions]=\"searchFilterSelectActions\">\n    </po-dropdown>\n  </div>\n\n  <div *ngIf=\"type === 'action'\" class=\"po-search-icon\">\n    <po-icon [p-icon]=\"icon ? icon : 'ICON_SEARCH'\"></po-icon>\n  </div>\n\n  <input\n    #poSearchInput\n    class=\"po-search-input\"\n    type=\"text\"\n    [ariaLabel]=\"ariaLabel\"\n    [class.po-search-input-clean]=\"!!poSearchInput.value && !disabled\"\n    [class.po-search-input-trigger]=\"type === 'trigger'\"\n    [disabled]=\"disabled\"\n    [placeholder]=\"literals.search\"\n    (input)=\"\n      onSearchChange($event.target.value, false); onSearchChange($event.target.value, type === 'action' ? true : false)\n    \"\n    (keyup.enter)=\"\n      listboxOpen ? closeListbox() : onSearchChange($event.target.value, type === 'trigger' ? true : false, true);\n      closeListbox()\n    \"\n    (keydown)=\"onKeyDown($event)\"\n    (blur)=\"onBlur()\"\n  />\n\n  <div class=\"po-search-buttons\">\n    <button\n      *ngIf=\"!!poSearchInput.value && !disabled\"\n      class=\"po-search-button po-search-button-clean\"\n      type=\"button\"\n      [ariaLabel]=\"literals.clean\"\n      (click)=\"clearSearch()\"\n      (keydown.enter)=\"clearSearch()\"\n    >\n      <po-clean class=\"po-icon-input\"></po-clean>\n    </button>\n\n    <button\n      *ngIf=\"type === 'trigger'\"\n      class=\"po-search-button po-search-button-trigger\"\n      type=\"button\"\n      [ariaLabel]=\"literals.search\"\n      (click)=\"onSearchChange(poSearchInput.value, true, true)\"\n      (keydown.enter)=\"onSearchChange(poSearchInput.value, true, true)\"\n      [disabled]=\"disabled\"\n    >\n      <po-icon [p-icon]=\"icon ? icon : 'ICON_SEARCH'\"> </po-icon>\n    </button>\n  </div>\n</div>\n\n<div #poListboxContainerElement class=\"po-search-listbox-container\" [hidden]=\"!listboxOpen\">\n  <po-listbox\n    #poListbox\n    #poListboxElement\n    p-type=\"option\"\n    [p-items]=\"listboxFilteredItems\"\n    (p-selectcombo-item)=\"onListboxClick($event, $event.event)\"\n    [p-visible]=\"listboxOpen\"\n    [p-filter-mode]=\"filterType\"\n    [p-should-mark-letter]=\"shouldMarkLetters\"\n    [p-filtering]=\"isFiltering\"\n    [p-search-value]=\"getInputValue()\"\n    (p-close)=\"onCloseListbox()\"\n  ></po-listbox>\n</div>\n" }]
    }], () => [{ type: i1.PoLanguageService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i2.PoControlPositionService }], { poSearchInput: [{
            type: ViewChild,
            args: ['poSearchInput', { read: ElementRef, static: true }]
        }], poListboxContainerElement: [{
            type: ViewChild,
            args: ['poListboxContainerElement', { read: ElementRef }]
        }], poListboxElement: [{
            type: ViewChild,
            args: ['poListboxElement', { read: ElementRef }]
        }], poListbox: [{
            type: ViewChild,
            args: ['poListbox']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoSearchComponent, { className: "PoSearchComponent", filePath: "lib/components/po-search/po-search.component.ts", lineNumber: 64 }); })();
//# sourceMappingURL=data:application/json;base64,