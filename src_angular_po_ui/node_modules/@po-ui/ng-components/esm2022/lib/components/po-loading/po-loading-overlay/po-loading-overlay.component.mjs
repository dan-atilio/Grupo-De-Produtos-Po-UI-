import { Component } from '@angular/core';
import { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';
import * as i0 from "@angular/core";
import * as i1 from "./../../../services/po-language/po-language.service";
import * as i2 from "../../po-overlay/po-overlay.component";
import * as i3 from "../po-loading.component";
/**
 *
 * @docsExtends PoLoadingOverlayBaseComponent
 *
 * @example
 *
 * <example name="po-loading-overlay-basic" title="PO Loading Overlay Basic">
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html"> </file>
 *  <file name="sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-labs" title="PO Loading Overlay Labs">
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html"> </file>
 *  <file name="sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-loading-overlay-connection-test" title="PO Loading Overlay - Connection Test">
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html"> </file>
 *  <file name="sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts"> </file>
 * </example>
 */
export class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {
    changeDetector;
    constructor(changeDetector, languageService) {
        super(languageService);
        this.changeDetector = changeDetector;
    }
    static ɵfac = function PoLoadingOverlayComponent_Factory(t) { return new (t || PoLoadingOverlayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoLoadingOverlayComponent, selectors: [["po-loading-overlay"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[3, "p-screen-lock"], [3, "p-text", "p-size"]], template: function PoLoadingOverlayComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "po-overlay", 0);
            i0.ɵɵelement(1, "po-loading", 1);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("p-screen-lock", ctx.screenLock);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-text", ctx.text)("p-size", ctx.size);
        } }, dependencies: [i2.PoOverlayComponent, i3.PoLoadingComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoLoadingOverlayComponent, [{
        type: Component,
        args: [{ selector: 'po-loading-overlay', template: "<po-overlay [p-screen-lock]=\"screenLock\">\n  <po-loading [p-text]=\"text\" [p-size]=\"size\"></po-loading>\n</po-overlay>\n" }]
    }], () => [{ type: i0.ChangeDetectorRef }, { type: i1.PoLanguageService }], null); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoLoadingOverlayComponent, { className: "PoLoadingOverlayComponent", filePath: "lib/components/po-loading/po-loading-overlay/po-loading-overlay.component.ts", lineNumber: 32 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1vdmVybGF5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1sb2FkaW5nL3BvLWxvYWRpbmctb3ZlcmxheS9wby1sb2FkaW5nLW92ZXJsYXkuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWxvYWRpbmcvcG8tbG9hZGluZy1vdmVybGF5L3BvLWxvYWRpbmctb3ZlcmxheS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUk3RCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQzs7Ozs7QUFFcEY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBb0JHO0FBS0gsTUFBTSxPQUFPLHlCQUEwQixTQUFRLDZCQUE2QjtJQUVqRTtJQURULFlBQ1MsY0FBaUMsRUFDeEMsZUFBa0M7UUFFbEMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBSGhCLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtJQUkxQyxDQUFDO21GQU5VLHlCQUF5Qjs2REFBekIseUJBQXlCO1lDL0J0QyxxQ0FBeUM7WUFDdkMsZ0NBQXlEO1lBQzNELGlCQUFhOztZQUZELDhDQUE0QjtZQUMxQixjQUFlO1lBQWYsaUNBQWUsb0JBQUE7OztpRkQ4QmhCLHlCQUF5QjtjQUpyQyxTQUFTOzJCQUNFLG9CQUFvQjs7a0ZBR25CLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9MYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBQb0xvYWRpbmdPdmVybGF5QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tbG9hZGluZy1vdmVybGF5LWJhc2UuY29tcG9uZW50JztcblxuLyoqXG4gKlxuICogQGRvY3NFeHRlbmRzIFBvTG9hZGluZ092ZXJsYXlCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbG9hZGluZy1vdmVybGF5LWJhc2ljXCIgdGl0bGU9XCJQTyBMb2FkaW5nIE92ZXJsYXkgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1iYXNpYy9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1iYXNpYy9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWxvYWRpbmctb3ZlcmxheS1sYWJzXCIgdGl0bGU9XCJQTyBMb2FkaW5nIE92ZXJsYXkgTGFic1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWxhYnMvc2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1sYWJzL3NhbXBsZS1wby1sb2FkaW5nLW92ZXJsYXktbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1sb2FkaW5nLW92ZXJsYXktY29ubmVjdGlvbi10ZXN0XCIgdGl0bGU9XCJQTyBMb2FkaW5nIE92ZXJsYXkgLSBDb25uZWN0aW9uIFRlc3RcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3Qvc2FtcGxlLXBvLWxvYWRpbmctb3ZlcmxheS1jb25uZWN0aW9uLXRlc3QuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC9zYW1wbGUtcG8tbG9hZGluZy1vdmVybGF5LWNvbm5lY3Rpb24tdGVzdC5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1sb2FkaW5nLW92ZXJsYXknLFxuICB0ZW1wbGF0ZVVybDogJ3BvLWxvYWRpbmctb3ZlcmxheS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9Mb2FkaW5nT3ZlcmxheUNvbXBvbmVudCBleHRlbmRzIFBvTG9hZGluZ092ZXJsYXlCYXNlQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBsYW5ndWFnZVNlcnZpY2U6IFBvTGFuZ3VhZ2VTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGxhbmd1YWdlU2VydmljZSk7XG4gIH1cbn1cbiIsIjxwby1vdmVybGF5IFtwLXNjcmVlbi1sb2NrXT1cInNjcmVlbkxvY2tcIj5cbiAgPHBvLWxvYWRpbmcgW3AtdGV4dF09XCJ0ZXh0XCIgW3Atc2l6ZV09XCJzaXplXCI+PC9wby1sb2FkaW5nPlxuPC9wby1vdmVybGF5PlxuIl19