import { Component, Input } from '@angular/core';
import { convertToBoolean, uuid } from '../../../utils/util';
import { PoLoadingIconSize } from './po-loading-icon-size-enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que exibe um ícone de carregamento de conteúdo. A cor padrão para ele é a primária conforme o tema utilizado.
 * É possível alterá-la para um tom cinza conforme a necessidade.
 */
export class PoLoadingIconComponent {
    _neutralColor;
    _size = 'md';
    id = uuid();
    /**
     * @optional
     *
     * @description
     *
     * Definição para cor neutra (cinza) para o ícone de carregamento.
     *
     * @default `false`
     */
    set neutralColor(value) {
        this._neutralColor = convertToBoolean(value);
    }
    get neutralColor() {
        return this._neutralColor;
    }
    /**
     * @optional
     *
     * @description
     *
     * Definição do tamanho do ícone.
     *
     * Valores válidos:
     *  - `xs`: tamanho `extra small`
     *  - `sm`: tamanho `small`
     *  - `md`: tamanho `medium`
     *  - `lg`: tamanho `large`
     *
     * @default `md`
     */
    set size(value) {
        this._size = PoLoadingIconSize[value] ? PoLoadingIconSize[value] : PoLoadingIconSize.md;
    }
    get size() {
        return this._size;
    }
    static ɵfac = function PoLoadingIconComponent_Factory(t) { return new (t || PoLoadingIconComponent)(); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoLoadingIconComponent, selectors: [["po-loading-icon"]], inputs: { neutralColor: [i0.ɵɵInputFlags.None, "p-neutral-color", "neutralColor"], size: [i0.ɵɵInputFlags.None, "p-size", "size"] }, decls: 14, vars: 8, consts: [["viewBox", "0 0 200 200", "fill", "none", "xmlns", "http://www.w3.org/2000/svg", 3, "ngClass"], [3, "id"], ["offset", "0", "stop-opacity", "0", "stop-color", "currentColor"], ["offset", "1", "stop-opacity", "0.5", "stop-color", "currentColor"], ["offset", "0", "stop-opacity", "1", "stop-color", "currentColor"], ["stroke-width", "24", "transform", "matrix(0.876218, 0, 0, 0.87855, 12.377892, 12.144993)"], ["d", "M 4 100 A 96 96 0 0 1 196 100"], ["d", "M 196 100 A 96 96 0 0 1 4 100"], ["stroke", "currentColor", "d", "M 4 100 A 96 96 0 0 1 4 98"], ["from", "0 0 0", "to", "360 0 0", "attributeName", "transform", "type", "rotate", "repeatCount", "indefinite", "dur", "1200ms"]], template: function PoLoadingIconComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div");
            i0.ɵɵnamespaceSVG();
            i0.ɵɵelementStart(1, "svg", 0)(2, "defs")(3, "linearGradient", 1);
            i0.ɵɵelement(4, "stop", 2)(5, "stop", 3);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(6, "linearGradient", 1);
            i0.ɵɵelement(7, "stop", 4)(8, "stop", 3);
            i0.ɵɵelementEnd()();
            i0.ɵɵelementStart(9, "g", 5);
            i0.ɵɵelement(10, "path", 6)(11, "path", 7)(12, "path", 8);
            i0.ɵɵelementEnd();
            i0.ɵɵelement(13, "animateTransform", 9);
            i0.ɵɵelementEnd()();
        } if (rf & 2) {
            i0.ɵɵclassMapInterpolate1("po-loading-icon-container po-loading-svg-", ctx.size, "");
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngClass", ctx.neutralColor ? "po-loading-icon-neutral" : "po-loading-icon");
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("id", "first" + ctx.id);
            i0.ɵɵadvance(3);
            i0.ɵɵproperty("id", "second" + ctx.id);
            i0.ɵɵadvance(4);
            i0.ɵɵattribute("stroke", "url(#" + "second" + ctx.id + ")");
            i0.ɵɵadvance();
            i0.ɵɵattribute("stroke", "url(#" + "first" + ctx.id + ")");
        } }, dependencies: [i1.NgClass], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoLoadingIconComponent, [{
        type: Component,
        args: [{ selector: 'po-loading-icon', template: "<div class=\"po-loading-icon-container po-loading-svg-{{ size }}\">\n  <svg\n    [ngClass]=\"neutralColor ? 'po-loading-icon-neutral' : 'po-loading-icon'\"\n    viewBox=\"0 0 200 200\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <defs>\n      <linearGradient [id]=\"'first' + id\">\n        <stop offset=\"0\" stop-opacity=\"0\" stop-color=\"currentColor\" />\n        <stop offset=\"1\" stop-opacity=\"0.5\" stop-color=\"currentColor\" />\n      </linearGradient>\n      <linearGradient [id]=\"'second' + id\">\n        <stop offset=\"0\" stop-opacity=\"1\" stop-color=\"currentColor\" />\n        <stop offset=\"1\" stop-opacity=\"0.5\" stop-color=\"currentColor\" />\n      </linearGradient>\n    </defs>\n    <g stroke-width=\"24\" transform=\"matrix(0.876218, 0, 0, 0.87855, 12.377892, 12.144993)\">\n      <path [attr.stroke]=\"'url(#' + 'second' + id + ')'\" d=\"M 4 100 A 96 96 0 0 1 196 100\" />\n      <path [attr.stroke]=\"'url(#' + 'first' + id + ')'\" d=\"M 196 100 A 96 96 0 0 1 4 100\" />\n      <path stroke=\"currentColor\" d=\"M 4 100 A 96 96 0 0 1 4 98\" />\n    </g>\n\n    <animateTransform\n      from=\"0 0 0\"\n      to=\"360 0 0\"\n      attributeName=\"transform\"\n      type=\"rotate\"\n      repeatCount=\"indefinite\"\n      dur=\"1200ms\"\n    />\n  </svg>\n</div>\n" }]
    }], null, { neutralColor: [{
            type: Input,
            args: ['p-neutral-color']
        }], size: [{
            type: Input,
            args: ['p-size']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoLoadingIconComponent, { className: "PoLoadingIconComponent", filePath: "lib/components/po-loading/po-loading-icon/po-loading-icon.component.ts", lineNumber: 18 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1sb2FkaW5nL3BvLWxvYWRpbmctaWNvbi9wby1sb2FkaW5nLWljb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWxvYWRpbmcvcG8tbG9hZGluZy1pY29uL3BvLWxvYWRpbmctaWNvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7OztBQUVoRTs7Ozs7OztHQU9HO0FBS0gsTUFBTSxPQUFPLHNCQUFzQjtJQUN6QixhQUFhLENBQVU7SUFDdkIsS0FBSyxHQUFXLElBQUksQ0FBQztJQUM3QixFQUFFLEdBQUcsSUFBSSxFQUFFLENBQUM7SUFFWjs7Ozs7Ozs7T0FRRztJQUNILElBQThCLFlBQVksQ0FBQyxLQUFjO1FBQ3ZELElBQUksQ0FBQyxhQUFhLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM1QixDQUFDO0lBRUQ7Ozs7Ozs7Ozs7Ozs7O09BY0c7SUFDSCxJQUFxQixJQUFJLENBQUMsS0FBYTtRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDO0lBQzFGLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztnRkEzQ1Usc0JBQXNCOzZEQUF0QixzQkFBc0I7WUNqQm5DLDJCQUFpRTtZQUMvRCxtQkFLQztZQUxELDhCQUtDLFdBQUEsd0JBQUE7WUFHSywwQkFBOEQsY0FBQTtZQUVoRSxpQkFBaUI7WUFDakIseUNBQXFDO1lBQ25DLDBCQUE4RCxjQUFBO1lBRWhFLGlCQUFpQixFQUFBO1lBRW5CLDRCQUF1RjtZQUNyRiwyQkFBd0YsZUFBQSxlQUFBO1lBRzFGLGlCQUFJO1lBRUosdUNBT0U7WUFDSixpQkFBTSxFQUFBOztZQS9CSCxvRkFBMkQ7WUFFNUQsY0FBd0U7WUFBeEUsMEZBQXdFO1lBTXRELGVBQW1CO1lBQW5CLHFDQUFtQjtZQUluQixlQUFvQjtZQUFwQixzQ0FBb0I7WUFNOUIsZUFBNkM7WUFBN0MsMkRBQTZDO1lBQzdDLGNBQTRDO1lBQTVDLDBEQUE0Qzs7O2lGREYzQyxzQkFBc0I7Y0FKbEMsU0FBUzsyQkFDRSxpQkFBaUI7Z0JBaUJHLFlBQVk7a0JBQXpDLEtBQUs7bUJBQUMsaUJBQWlCO1lBdUJILElBQUk7a0JBQXhCLEtBQUs7bUJBQUMsUUFBUTs7a0ZBckNKLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiwgdXVpZCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuaW1wb3J0IHsgUG9Mb2FkaW5nSWNvblNpemUgfSBmcm9tICcuL3BvLWxvYWRpbmctaWNvbi1zaXplLWVudW0nO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIGV4aWJlIHVtIMOtY29uZSBkZSBjYXJyZWdhbWVudG8gZGUgY29udGXDumRvLiBBIGNvciBwYWRyw6NvIHBhcmEgZWxlIMOpIGEgcHJpbcOhcmlhIGNvbmZvcm1lIG8gdGVtYSB1dGlsaXphZG8uXG4gKiDDiSBwb3Nzw612ZWwgYWx0ZXLDoS1sYSBwYXJhIHVtIHRvbSBjaW56YSBjb25mb3JtZSBhIG5lY2Vzc2lkYWRlLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1sb2FkaW5nLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJ3BvLWxvYWRpbmctaWNvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9Mb2FkaW5nSWNvbkNvbXBvbmVudCB7XG4gIHByaXZhdGUgX25ldXRyYWxDb2xvcjogYm9vbGVhbjtcbiAgcHJpdmF0ZSBfc2l6ZTogc3RyaW5nID0gJ21kJztcbiAgaWQgPSB1dWlkKCk7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5pw6fDo28gcGFyYSBjb3IgbmV1dHJhIChjaW56YSkgcGFyYSBvIMOtY29uZSBkZSBjYXJyZWdhbWVudG8uXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1uZXV0cmFsLWNvbG9yJykgc2V0IG5ldXRyYWxDb2xvcih2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX25ldXRyYWxDb2xvciA9IGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgZ2V0IG5ldXRyYWxDb2xvcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbmV1dHJhbENvbG9yO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5pw6fDo28gZG8gdGFtYW5obyBkbyDDrWNvbmUuXG4gICAqXG4gICAqIFZhbG9yZXMgdsOhbGlkb3M6XG4gICAqICAtIGB4c2A6IHRhbWFuaG8gYGV4dHJhIHNtYWxsYFxuICAgKiAgLSBgc21gOiB0YW1hbmhvIGBzbWFsbGBcbiAgICogIC0gYG1kYDogdGFtYW5obyBgbWVkaXVtYFxuICAgKiAgLSBgbGdgOiB0YW1hbmhvIGBsYXJnZWBcbiAgICpcbiAgICogQGRlZmF1bHQgYG1kYFxuICAgKi9cbiAgQElucHV0KCdwLXNpemUnKSBzZXQgc2l6ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fc2l6ZSA9IFBvTG9hZGluZ0ljb25TaXplW3ZhbHVlXSA/IFBvTG9hZGluZ0ljb25TaXplW3ZhbHVlXSA6IFBvTG9hZGluZ0ljb25TaXplLm1kO1xuICB9XG5cbiAgZ2V0IHNpemUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fc2l6ZTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInBvLWxvYWRpbmctaWNvbi1jb250YWluZXIgcG8tbG9hZGluZy1zdmcte3sgc2l6ZSB9fVwiPlxuICA8c3ZnXG4gICAgW25nQ2xhc3NdPVwibmV1dHJhbENvbG9yID8gJ3BvLWxvYWRpbmctaWNvbi1uZXV0cmFsJyA6ICdwby1sb2FkaW5nLWljb24nXCJcbiAgICB2aWV3Qm94PVwiMCAwIDIwMCAyMDBcIlxuICAgIGZpbGw9XCJub25lXCJcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgPlxuICAgIDxkZWZzPlxuICAgICAgPGxpbmVhckdyYWRpZW50IFtpZF09XCInZmlyc3QnICsgaWRcIj5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMFwiIHN0b3Atb3BhY2l0eT1cIjBcIiBzdG9wLWNvbG9yPVwiY3VycmVudENvbG9yXCIgLz5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMVwiIHN0b3Atb3BhY2l0eT1cIjAuNVwiIHN0b3AtY29sb3I9XCJjdXJyZW50Q29sb3JcIiAvPlxuICAgICAgPC9saW5lYXJHcmFkaWVudD5cbiAgICAgIDxsaW5lYXJHcmFkaWVudCBbaWRdPVwiJ3NlY29uZCcgKyBpZFwiPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIwXCIgc3RvcC1vcGFjaXR5PVwiMVwiIHN0b3AtY29sb3I9XCJjdXJyZW50Q29sb3JcIiAvPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIxXCIgc3RvcC1vcGFjaXR5PVwiMC41XCIgc3RvcC1jb2xvcj1cImN1cnJlbnRDb2xvclwiIC8+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgIDwvZGVmcz5cbiAgICA8ZyBzdHJva2Utd2lkdGg9XCIyNFwiIHRyYW5zZm9ybT1cIm1hdHJpeCgwLjg3NjIxOCwgMCwgMCwgMC44Nzg1NSwgMTIuMzc3ODkyLCAxMi4xNDQ5OTMpXCI+XG4gICAgICA8cGF0aCBbYXR0ci5zdHJva2VdPVwiJ3VybCgjJyArICdzZWNvbmQnICsgaWQgKyAnKSdcIiBkPVwiTSA0IDEwMCBBIDk2IDk2IDAgMCAxIDE5NiAxMDBcIiAvPlxuICAgICAgPHBhdGggW2F0dHIuc3Ryb2tlXT1cIid1cmwoIycgKyAnZmlyc3QnICsgaWQgKyAnKSdcIiBkPVwiTSAxOTYgMTAwIEEgOTYgOTYgMCAwIDEgNCAxMDBcIiAvPlxuICAgICAgPHBhdGggc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgZD1cIk0gNCAxMDAgQSA5NiA5NiAwIDAgMSA0IDk4XCIgLz5cbiAgICA8L2c+XG5cbiAgICA8YW5pbWF0ZVRyYW5zZm9ybVxuICAgICAgZnJvbT1cIjAgMCAwXCJcbiAgICAgIHRvPVwiMzYwIDAgMFwiXG4gICAgICBhdHRyaWJ1dGVOYW1lPVwidHJhbnNmb3JtXCJcbiAgICAgIHR5cGU9XCJyb3RhdGVcIlxuICAgICAgcmVwZWF0Q291bnQ9XCJpbmRlZmluaXRlXCJcbiAgICAgIGR1cj1cIjEyMDBtc1wiXG4gICAgLz5cbiAgPC9zdmc+XG48L2Rpdj5cbiJdfQ==