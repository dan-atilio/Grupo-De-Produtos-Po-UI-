import { Component, EventEmitter, Input, Output } from '@angular/core';
import { getShortBrowserLanguage, convertToBoolean, isTypeof } from './../../../utils/util';
import { poLocaleDefault } from './../../../services/po-language/po-language.constant';
import { PoStepperOrientation } from '../enums/po-stepper-orientation.enum';
import { PoStepperStatus } from '../enums/po-stepper-status.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../po-stepper-circle/po-stepper-circle.component";
import * as i3 from "../po-stepper-label/po-stepper-label.component";
const poStepperStepSizeDefault = 24;
const poStepperStepSizeMax = 64;
const poStepLiteralsDefault = {
    en: { label: 'Step' },
    es: { label: 'Paso' },
    pt: { label: 'Passo' }
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que representa um *step* contendo as ligações das laterais (`po-stepper-step-bar`) e a label.
 */
export class PoStepperStepComponent {
    // Conteúdo que será repassado para o componente `p-circle-content` através da propriedade `p-content`.
    circleContent;
    // Define a orientação de exibição.
    orientation;
    // Informa o status da proxima etapa.
    nextStatus;
    // Evento que será emitido quando o status do *step* estiver ativo (`PoStepperStatus.Active`).
    activated = new EventEmitter();
    // Evento que será emitido ao clicar no *step*.
    click = new EventEmitter();
    // Evento que será emitido ao focar no *step* e pressionar a tecla *enter*.
    enter = new EventEmitter();
    literals = {
        ...poStepLiteralsDefault[poLocaleDefault],
        ...poStepLiteralsDefault[getShortBrowserLanguage()]
    };
    _label;
    _status;
    _stepIcons = false;
    _stepSize = poStepperStepSizeDefault;
    // Label do *step*.
    set label(value) {
        this._label = isTypeof(value, 'string') ? value : `${this.literals.label} ${this.circleContent}`;
    }
    get label() {
        return this._label;
    }
    // Define o estado de exibição.
    set status(value) {
        this._status = value ? value : undefined;
        if (this.status === PoStepperStatus.Active) {
            this.activated.emit();
        }
    }
    get status() {
        return this._status;
    }
    set stepIcons(stepIcons) {
        this._stepIcons = convertToBoolean(stepIcons);
    }
    get stepIcons() {
        return this._stepIcons;
    }
    // Tamanho do `step` em *pixels*, possibilitando um maior destaque.
    // O valor informado deve ser entre `24` e `64`.
    set stepSize(value) {
        this._stepSize =
            value >= poStepperStepSizeDefault && value <= poStepperStepSizeMax ? value : poStepperStepSizeDefault;
    }
    get stepSize() {
        return this._stepSize;
    }
    get halfStepSize() {
        return this.stepSize / 2;
    }
    get isVerticalOrientation() {
        return this.orientation === PoStepperOrientation.Vertical;
    }
    get marginHorizontalBar() {
        return this.isVerticalOrientation ? undefined : this.halfStepSize;
    }
    getStatusClass(status) {
        switch (status) {
            case PoStepperStatus.Active:
                return 'po-stepper-step-default';
            case PoStepperStatus.Disabled:
                return 'po-stepper-step-disabled';
            case PoStepperStatus.Done:
                return 'po-stepper-step-default';
            case PoStepperStatus.Error:
                return 'po-stepper-step-error';
            default:
                return 'po-stepper-step-default';
        }
    }
    onClick() {
        if (this.status !== PoStepperStatus.Disabled) {
            this.click.emit();
        }
    }
    onEnter() {
        if (this.status !== PoStepperStatus.Disabled) {
            this.enter.emit();
        }
    }
    static ɵfac = function PoStepperStepComponent_Factory(t) { return new (t || PoStepperStepComponent)(); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoStepperStepComponent, selectors: [["po-stepper-step"]], inputs: { circleContent: [i0.ɵɵInputFlags.None, "p-circle-content", "circleContent"], orientation: [i0.ɵɵInputFlags.None, "p-orientation", "orientation"], nextStatus: [i0.ɵɵInputFlags.None, "p-next-status", "nextStatus"], label: [i0.ɵɵInputFlags.None, "p-label", "label"], status: [i0.ɵɵInputFlags.None, "p-status", "status"], stepIcons: [i0.ɵɵInputFlags.None, "p-step-icons", "stepIcons"], stepSize: [i0.ɵɵInputFlags.None, "p-step-size", "stepSize"] }, outputs: { activated: "p-activated", click: "p-click", enter: "p-enter" }, decls: 6, vars: 24, consts: [[1, "po-stepper-step", 3, "ngClass", "click", "keydown.enter"], [1, "po-stepper-step-container"], [3, "p-content", "p-icons", "p-size", "p-status"], [1, "po-stepper-step-label-position", 3, "p-content"]], template: function PoStepperStepComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵlistener("click", function PoStepperStepComponent_Template_div_click_0_listener() { return ctx.onClick(); })("keydown.enter", function PoStepperStepComponent_Template_div_keydown_enter_0_listener() { return ctx.onEnter(); });
            i0.ɵɵelementStart(1, "div", 1);
            i0.ɵɵelement(2, "div")(3, "po-stepper-circle", 2)(4, "div");
            i0.ɵɵelementEnd();
            i0.ɵɵelement(5, "po-stepper-label", 3);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("ngClass", ctx.getStatusClass(ctx.status));
            i0.ɵɵadvance();
            i0.ɵɵstyleProp("width", ctx.isVerticalOrientation ? ctx.stepSize : undefined, "px");
            i0.ɵɵadvance();
            i0.ɵɵstyleProp("margin-right", ctx.marginHorizontalBar, "px");
            i0.ɵɵclassProp("po-stepper-step-bar-top", ctx.isVerticalOrientation)("po-stepper-step-bar-left", !ctx.isVerticalOrientation);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-content", ctx.circleContent)("p-icons", ctx.stepIcons)("p-size", ctx.stepSize)("p-status", ctx.status);
            i0.ɵɵadvance();
            i0.ɵɵstyleProp("margin-left", ctx.marginHorizontalBar, "px");
            i0.ɵɵclassProp("po-stepper-step-bar-bottom", ctx.isVerticalOrientation)("po-stepper-step-bar-right", !ctx.isVerticalOrientation)("po-stepper-step-dashed-border", ctx.nextStatus === "disabled" && !ctx.isVerticalOrientation)("po-stepper-step-dashed-border-vertical", ctx.nextStatus === "disabled" && ctx.isVerticalOrientation);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-content", ctx.label);
        } }, dependencies: [i1.NgClass, i2.PoStepperCircleComponent, i3.PoStepperLabelComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoStepperStepComponent, [{
        type: Component,
        args: [{ selector: 'po-stepper-step', template: "<div class=\"po-stepper-step\" [ngClass]=\"getStatusClass(status)\" (click)=\"onClick()\" (keydown.enter)=\"onEnter()\">\n  <div class=\"po-stepper-step-container\" [style.width.px]=\"isVerticalOrientation ? stepSize : undefined\">\n    <div\n      [class.po-stepper-step-bar-top]=\"isVerticalOrientation\"\n      [class.po-stepper-step-bar-left]=\"!isVerticalOrientation\"\n      [style.margin-right.px]=\"marginHorizontalBar\"\n    ></div>\n\n    <po-stepper-circle [p-content]=\"circleContent\" [p-icons]=\"stepIcons\" [p-size]=\"stepSize\" [p-status]=\"status\">\n    </po-stepper-circle>\n\n    <div\n      [class.po-stepper-step-bar-bottom]=\"isVerticalOrientation\"\n      [class.po-stepper-step-bar-right]=\"!isVerticalOrientation\"\n      [class.po-stepper-step-dashed-border]=\"nextStatus === 'disabled' && !isVerticalOrientation\"\n      [class.po-stepper-step-dashed-border-vertical]=\"nextStatus === 'disabled' && isVerticalOrientation\"\n      [style.margin-left.px]=\"marginHorizontalBar\"\n    ></div>\n  </div>\n\n  <po-stepper-label class=\"po-stepper-step-label-position\" [p-content]=\"label\"> </po-stepper-label>\n</div>\n" }]
    }], null, { circleContent: [{
            type: Input,
            args: ['p-circle-content']
        }], orientation: [{
            type: Input,
            args: ['p-orientation']
        }], nextStatus: [{
            type: Input,
            args: ['p-next-status']
        }], activated: [{
            type: Output,
            args: ['p-activated']
        }], click: [{
            type: Output,
            args: ['p-click']
        }], enter: [{
            type: Output,
            args: ['p-enter']
        }], label: [{
            type: Input,
            args: ['p-label']
        }], status: [{
            type: Input,
            args: ['p-status']
        }], stepIcons: [{
            type: Input,
            args: ['p-step-icons']
        }], stepSize: [{
            type: Input,
            args: ['p-step-size']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoStepperStepComponent, { className: "PoStepperStepComponent", filePath: "lib/components/po-stepper/po-stepper-step/po-stepper-step.component.ts", lineNumber: 27 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc3RlcHBlci1zdGVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1zdGVwcGVyL3BvLXN0ZXBwZXItc3RlcC9wby1zdGVwcGVyLXN0ZXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXN0ZXBwZXIvcG8tc3RlcHBlci1zdGVwL3BvLXN0ZXBwZXItc3RlcC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDdkYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDOzs7OztBQUVsRSxNQUFNLHdCQUF3QixHQUFHLEVBQUUsQ0FBQztBQUNwQyxNQUFNLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztBQUNoQyxNQUFNLHFCQUFxQixHQUFHO0lBQzVCLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUU7SUFDckIsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtJQUNyQixFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFO0NBQ3ZCLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFLSCxNQUFNLE9BQU8sc0JBQXNCO0lBQ2pDLHVHQUF1RztJQUM1RSxhQUFhLENBQU07SUFFOUMsbUNBQW1DO0lB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UztZQVNPLE1BQU07a0JBQTVCLEtBQUs7bUJBQUMsVUFBVTtZQVlVLFNBQVM7a0JBQW5DLEtBQUs7bUJBQUMsY0FBYztZQVVLLFFBQVE7a0JBQWpDLEtBQUs7bUJBQUMsYUFBYTs7a0ZBN0RULHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGdldFNob3J0QnJvd3Nlckxhbmd1YWdlLCBjb252ZXJ0VG9Cb29sZWFuLCBpc1R5cGVvZiB9IGZyb20gJy4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5pbXBvcnQgeyBwb0xvY2FsZURlZmF1bHQgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLmNvbnN0YW50JztcbmltcG9ydCB7IFBvU3RlcHBlck9yaWVudGF0aW9uIH0gZnJvbSAnLi4vZW51bXMvcG8tc3RlcHBlci1vcmllbnRhdGlvbi5lbnVtJztcbmltcG9ydCB7IFBvU3RlcHBlclN0YXR1cyB9IGZyb20gJy4uL2VudW1zL3BvLXN0ZXBwZXItc3RhdHVzLmVudW0nO1xuXG5jb25zdCBwb1N0ZXBwZXJTdGVwU2l6ZURlZmF1bHQgPSAyNDtcbmNvbnN0IHBvU3RlcHBlclN0ZXBTaXplTWF4ID0gNjQ7XG5jb25zdCBwb1N0ZXBMaXRlcmFsc0RlZmF1bHQgPSB7XG4gIGVuOiB7IGxhYmVsOiAnU3RlcCcgfSxcbiAgZXM6IHsgbGFiZWw6ICdQYXNvJyB9LFxuICBwdDogeyBsYWJlbDogJ1Bhc3NvJyB9XG59O1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIHJlcHJlc2VudGEgdW0gKnN0ZXAqIGNvbnRlbmRvIGFzIGxpZ2HDp8O1ZXMgZGFzIGxhdGVyYWlzIChgcG8tc3RlcHBlci1zdGVwLWJhcmApIGUgYSBsYWJlbC5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tc3RlcHBlci1zdGVwJyxcbiAgdGVtcGxhdGVVcmw6ICdwby1zdGVwcGVyLXN0ZXAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvU3RlcHBlclN0ZXBDb21wb25lbnQge1xuICAvLyBDb250ZcO6ZG8gcXVlIHNlcsOhIHJlcGFzc2FkbyBwYXJhIG8gY29tcG9uZW50ZSBgcC1jaXJjbGUtY29udGVudGAgYXRyYXbDqXMgZGEgcHJvcHJpZWRhZGUgYHAtY29udGVudGAuXG4gIEBJbnB1dCgncC1jaXJjbGUtY29udGVudCcpIGNpcmNsZUNvbnRlbnQ6IGFueTtcblxuICAvLyBEZWZpbmUgYSBvcmllbnRhw6fDo28gZGUgZXhpYmnDp8Ojby5cbiAgQElucHV0KCdwLW9yaWVudGF0aW9uJykgb3JpZW50YXRpb246IFBvU3RlcHBlck9yaWVudGF0aW9uO1xuXG4gIC8vIEluZm9ybWEgbyBzdGF0dXMgZGEgcHJveGltYSBldGFwYS5cbiAgQElucHV0KCdwLW5leHQtc3RhdHVzJykgbmV4dFN0YXR1cztcblxuICAvLyBFdmVudG8gcXVlIHNlcsOhIGVtaXRpZG8gcXVhbmRvIG8gc3RhdHVzIGRvICpzdGVwKiBlc3RpdmVyIGF0aXZvIChgUG9TdGVwcGVyU3RhdHVzLkFjdGl2ZWApLlxuICBAT3V0cHV0KCdwLWFjdGl2YXRlZCcpIGFjdGl2YXRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIC8vIEV2ZW50byBxdWUgc2Vyw6EgZW1pdGlkbyBhbyBjbGljYXIgbm8gKnN0ZXAqLlxuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICAvLyBFdmVudG8gcXVlIHNlcsOhIGVtaXRpZG8gYW8gZm9jYXIgbm8gKnN0ZXAqIGUgcHJlc3Npb25hciBhIHRlY2xhICplbnRlciouXG4gIEBPdXRwdXQoJ3AtZW50ZXInKSBlbnRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIHJlYWRvbmx5IGxpdGVyYWxzID0ge1xuICAgIC4uLnBvU3RlcExpdGVyYWxzRGVmYXVsdFtwb0xvY2FsZURlZmF1bHRdLFxuICAgIC4uLnBvU3RlcExpdGVyYWxzRGVmYXVsdFtnZXRTaG9ydEJyb3dzZXJMYW5ndWFnZSgpXVxuICB9O1xuXG4gIHByaXZhdGUgX2xhYmVsOiBzdHJpbmc7XG4gIHByaXZhdGUgX3N0YXR1czogUG9TdGVwcGVyU3RhdHVzO1xuICBwcml2YXRlIF9zdGVwSWNvbnM/OiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX3N0ZXBTaXplOiBudW1iZXIgPSBwb1N0ZXBwZXJTdGVwU2l6ZURlZmF1bHQ7XG5cbiAgLy8gTGFiZWwgZG8gKnN0ZXAqLlxuICBASW5wdXQoJ3AtbGFiZWwnKSBzZXQgbGFiZWwodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX2xhYmVsID0gaXNUeXBlb2YodmFsdWUsICdzdHJpbmcnKSA/IHZhbHVlIDogYCR7dGhpcy5saXRlcmFscy5sYWJlbH0gJHt0aGlzLmNpcmNsZUNvbnRlbnR9YDtcbiAgfVxuXG4gIGdldCBsYWJlbCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9sYWJlbDtcbiAgfVxuXG4gIC8vIERlZmluZSBvIGVzdGFkbyBkZSBleGliacOnw6NvLlxuICBASW5wdXQoJ3Atc3RhdHVzJykgc2V0IHN0YXR1cyh2YWx1ZTogUG9TdGVwcGVyU3RhdHVzKSB7XG4gICAgdGhpcy5fc3RhdHVzID0gKHZhbHVlIGFzIHN0cmluZykgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcblxuICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gUG9TdGVwcGVyU3RhdHVzLkFjdGl2ZSkge1xuICAgICAgdGhpcy5hY3RpdmF0ZWQuZW1pdCgpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBzdGF0dXMoKTogUG9TdGVwcGVyU3RhdHVzIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhdHVzO1xuICB9XG5cbiAgQElucHV0KCdwLXN0ZXAtaWNvbnMnKSBzZXQgc3RlcEljb25zKHN0ZXBJY29uczogYm9vbGVhbikge1xuICAgIHRoaXMuX3N0ZXBJY29ucyA9IGNvbnZlcnRUb0Jvb2xlYW4oc3RlcEljb25zKTtcbiAgfVxuXG4gIGdldCBzdGVwSWNvbnMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3N0ZXBJY29ucztcbiAgfVxuXG4gIC8vIFRhbWFuaG8gZG8gYHN0ZXBgIGVtICpwaXhlbHMqLCBwb3NzaWJpbGl0YW5kbyB1bSBtYWlvciBkZXN0YXF1ZS5cbiAgLy8gTyB2YWxvciBpbmZvcm1hZG8gZGV2ZSBzZXIgZW50cmUgYDI0YCBlIGA2NGAuXG4gIEBJbnB1dCgncC1zdGVwLXNpemUnKSBzZXQgc3RlcFNpemUodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX3N0ZXBTaXplID1cbiAgICAgIHZhbHVlID49IHBvU3RlcHBlclN0ZXBTaXplRGVmYXVsdCAmJiB2YWx1ZSA8PSBwb1N0ZXBwZXJTdGVwU2l6ZU1heCA/IHZhbHVlIDogcG9TdGVwcGVyU3RlcFNpemVEZWZhdWx0O1xuICB9XG5cbiAgZ2V0IHN0ZXBTaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3N0ZXBTaXplO1xuICB9XG5cbiAgZ2V0IGhhbGZTdGVwU2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnN0ZXBTaXplIC8gMjtcbiAgfVxuXG4gIGdldCBpc1ZlcnRpY2FsT3JpZW50YXRpb24oKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMub3JpZW50YXRpb24gPT09IFBvU3RlcHBlck9yaWVudGF0aW9uLlZlcnRpY2FsO1xuICB9XG5cbiAgZ2V0IG1hcmdpbkhvcml6b250YWxCYXIoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5pc1ZlcnRpY2FsT3JpZW50YXRpb24gPyB1bmRlZmluZWQgOiB0aGlzLmhhbGZTdGVwU2l6ZTtcbiAgfVxuXG4gIGdldFN0YXR1c0NsYXNzKHN0YXR1czogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBzd2l0Y2ggKHN0YXR1cykge1xuICAgICAgY2FzZSBQb1N0ZXBwZXJTdGF0dXMuQWN0aXZlOlxuICAgICAgICByZXR1cm4gJ3BvLXN0ZXBwZXItc3RlcC1kZWZhdWx0JztcbiAgICAgIGNhc2UgUG9TdGVwcGVyU3RhdHVzLkRpc2FibGVkOlxuICAgICAgICByZXR1cm4gJ3BvLXN0ZXBwZXItc3RlcC1kaXNhYmxlZCc7XG4gICAgICBjYXNlIFBvU3RlcHBlclN0YXR1cy5Eb25lOlxuICAgICAgICByZXR1cm4gJ3BvLXN0ZXBwZXItc3RlcC1kZWZhdWx0JztcbiAgICAgIGNhc2UgUG9TdGVwcGVyU3RhdHVzLkVycm9yOlxuICAgICAgICByZXR1cm4gJ3BvLXN0ZXBwZXItc3RlcC1lcnJvcic7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gJ3BvLXN0ZXBwZXItc3RlcC1kZWZhdWx0JztcbiAgICB9XG4gIH1cblxuICBvbkNsaWNrKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnN0YXR1cyAhPT0gUG9TdGVwcGVyU3RhdHVzLkRpc2FibGVkKSB7XG4gICAgICB0aGlzLmNsaWNrLmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICBvbkVudGVyKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnN0YXR1cyAhPT0gUG9TdGVwcGVyU3RhdHVzLkRpc2FibGVkKSB7XG4gICAgICB0aGlzLmVudGVyLmVtaXQoKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJwby1zdGVwcGVyLXN0ZXBcIiBbbmdDbGFzc109XCJnZXRTdGF0dXNDbGFzcyhzdGF0dXMpXCIgKGNsaWNrKT1cIm9uQ2xpY2soKVwiIChrZXlkb3duLmVudGVyKT1cIm9uRW50ZXIoKVwiPlxuICA8ZGl2IGNsYXNzPVwicG8tc3RlcHBlci1zdGVwLWNvbnRhaW5lclwiIFtzdHlsZS53aWR0aC5weF09XCJpc1ZlcnRpY2FsT3JpZW50YXRpb24gPyBzdGVwU2l6ZSA6IHVuZGVmaW5lZFwiPlxuICAgIDxkaXZcbiAgICAgIFtjbGFzcy5wby1zdGVwcGVyLXN0ZXAtYmFyLXRvcF09XCJpc1ZlcnRpY2FsT3JpZW50YXRpb25cIlxuICAgICAgW2NsYXNzLnBvLXN0ZXBwZXItc3RlcC1iYXItbGVmdF09XCIhaXNWZXJ0aWNhbE9yaWVudGF0aW9uXCJcbiAgICAgIFtzdHlsZS5tYXJnaW4tcmlnaHQucHhdPVwibWFyZ2luSG9yaXpvbnRhbEJhclwiXG4gICAgPjwvZGl2PlxuXG4gICAgPHBvLXN0ZXBwZXItY2lyY2xlIFtwLWNvbnRlbnRdPVwiY2lyY2xlQ29udGVudFwiIFtwLWljb25zXT1cInN0ZXBJY29uc1wiIFtwLXNpemVdPVwic3RlcFNpemVcIiBbcC1zdGF0dXNdPVwic3RhdHVzXCI+XG4gICAgPC9wby1zdGVwcGVyLWNpcmNsZT5cblxuICAgIDxkaXZcbiAgICAgIFtjbGFzcy5wby1zdGVwcGVyLXN0ZXAtYmFyLWJvdHRvbV09XCJpc1ZlcnRpY2FsT3JpZW50YXRpb25cIlxuICAgICAgW2NsYXNzLnBvLXN0ZXBwZXItc3RlcC1iYXItcmlnaHRdPVwiIWlzVmVydGljYWxPcmllbnRhdGlvblwiXG4gICAgICBbY2xhc3MucG8tc3RlcHBlci1zdGVwLWRhc2hlZC1ib3JkZXJdPVwibmV4dFN0YXR1cyA9PT0gJ2Rpc2FibGVkJyAmJiAhaXNWZXJ0aWNhbE9yaWVudGF0aW9uXCJcbiAgICAgIFtjbGFzcy5wby1zdGVwcGVyLXN0ZXAtZGFzaGVkLWJvcmRlci12ZXJ0aWNhbF09XCJuZXh0U3RhdHVzID09PSAnZGlzYWJsZWQnICYmIGlzVmVydGljYWxPcmllbnRhdGlvblwiXG4gICAgICBbc3R5bGUubWFyZ2luLWxlZnQucHhdPVwibWFyZ2luSG9yaXpvbnRhbEJhclwiXG4gICAgPjwvZGl2PlxuICA8L2Rpdj5cblxuICA8cG8tc3RlcHBlci1sYWJlbCBjbGFzcz1cInBvLXN0ZXBwZXItc3RlcC1sYWJlbC1wb3NpdGlvblwiIFtwLWNvbnRlbnRdPVwibGFiZWxcIj4gPC9wby1zdGVwcGVyLWxhYmVsPlxuPC9kaXY+XG4iXX0=