import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PoDisclaimerModule } from '../po-disclaimer/po-disclaimer.module';
import { PoTagModule } from '../po-tag/po-tag.module';
import { PoDisclaimerGroupComponent } from './po-disclaimer-group.component';
import { PoDisclaimerRemoveComponent } from './po-disclaimer-remove/po-disclaimer-remove.component';
import * as i0 from "@angular/core";
/**
 * @description
 *
 * Módulo do componente po-disclaimer-group.
 */
export class PoDisclaimerGroupModule {
    static ɵfac = function PoDisclaimerGroupModule_Factory(t) { return new (t || PoDisclaimerGroupModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PoDisclaimerGroupModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule, PoDisclaimerModule, PoTagModule] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoDisclaimerGroupModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, PoDisclaimerModule, PoTagModule],
                declarations: [PoDisclaimerGroupComponent, PoDisclaimerRemoveComponent],
                exports: [PoDisclaimerGroupComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(PoDisclaimerGroupModule, { declarations: [PoDisclaimerGroupComponent, PoDisclaimerRemoveComponent], imports: [CommonModule, PoDisclaimerModule, PoTagModule], exports: [PoDisclaimerGroupComponent] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlzY2xhaW1lci1ncm91cC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZGlzY2xhaW1lci1ncm91cC9wby1kaXNjbGFpbWVyLWdyb3VwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFdEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sdURBQXVELENBQUM7O0FBRXBHOzs7O0dBSUc7QUFNSCxNQUFNLE9BQU8sdUJBQXVCO2lGQUF2Qix1QkFBdUI7NERBQXZCLHVCQUF1QjtnRUFKeEIsWUFBWSxFQUFFLGtCQUFrQixFQUFFLFdBQVc7O2lGQUk1Qyx1QkFBdUI7Y0FMbkMsUUFBUTtlQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxXQUFXLENBQUM7Z0JBQ3hELFlBQVksRUFBRSxDQUFDLDBCQUEwQixFQUFFLDJCQUEyQixDQUFDO2dCQUN2RSxPQUFPLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQzthQUN0Qzs7d0ZBQ1ksdUJBQXVCLG1CQUhuQiwwQkFBMEIsRUFBRSwyQkFBMkIsYUFENUQsWUFBWSxFQUFFLGtCQUFrQixFQUFFLFdBQVcsYUFFN0MsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IFBvRGlzY2xhaW1lck1vZHVsZSB9IGZyb20gJy4uL3BvLWRpc2NsYWltZXIvcG8tZGlzY2xhaW1lci5tb2R1bGUnO1xuaW1wb3J0IHsgUG9UYWdNb2R1bGUgfSBmcm9tICcuLi9wby10YWcvcG8tdGFnLm1vZHVsZSc7XG5cbmltcG9ydCB7IFBvRGlzY2xhaW1lckdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9wby1kaXNjbGFpbWVyLWdyb3VwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0Rpc2NsYWltZXJSZW1vdmVDb21wb25lbnQgfSBmcm9tICcuL3BvLWRpc2NsYWltZXItcmVtb3ZlL3BvLWRpc2NsYWltZXItcmVtb3ZlLmNvbXBvbmVudCc7XG5cbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTcOzZHVsbyBkbyBjb21wb25lbnRlIHBvLWRpc2NsYWltZXItZ3JvdXAuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFBvRGlzY2xhaW1lck1vZHVsZSwgUG9UYWdNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtQb0Rpc2NsYWltZXJHcm91cENvbXBvbmVudCwgUG9EaXNjbGFpbWVyUmVtb3ZlQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW1BvRGlzY2xhaW1lckdyb3VwQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBQb0Rpc2NsYWltZXJHcm91cE1vZHVsZSB7fVxuIl19