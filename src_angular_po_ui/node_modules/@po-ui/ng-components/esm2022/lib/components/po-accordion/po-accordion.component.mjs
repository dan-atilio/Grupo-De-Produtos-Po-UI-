import { Component, ContentChildren, ViewChildren } from '@angular/core';
import { PoAccordionBaseComponent } from './po-accordion-base.component';
import { PoAccordionItemHeaderComponent } from './po-accordion-item-header/po-accordion-item-header.component';
import { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';
import { PoAccordionService } from './services/po-accordion.service';
import * as i0 from "@angular/core";
import * as i1 from "./services/po-accordion.service";
import * as i2 from "../../services/po-language/po-language.service";
import * as i3 from "@angular/common";
import * as i4 from "./po-accordion-item-body/po-accordion-item-body.component";
import * as i5 from "./po-accordion-item-header/po-accordion-item-header.component";
import * as i6 from "./po-accordion-manager/po-accordion-manager.component";
function PoAccordionComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 3)(1, "po-accordion-manager", 4);
    i0.ɵɵlistener("p-click", function PoAccordionComponent_div_1_Template_po_accordion_manager_p_click_1_listener() { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.changeVisibleAllItems(ctx_r2.expandedAllItems)); });
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-expanded-all-items", ctx_r0.expandedAllItems)("p-literals", ctx_r0.literals);
} }
function PoAccordionComponent_li_3_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
function PoAccordionComponent_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "li", 5)(1, "po-accordion-item-header", 6);
    i0.ɵɵlistener("p-toggle", function PoAccordionComponent_li_3_Template_po_accordion_item_header_p_toggle_1_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r7); const poAccordionItem_r4 = restoredCtx.$implicit; const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.headerToggle($event, poAccordionItem_r4)); });
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(2, "po-accordion-item-body", 7);
    i0.ɵɵtemplate(3, PoAccordionComponent_li_3_ng_container_3_Template, 1, 0, "ng-container", 8);
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const poAccordionItem_r4 = ctx.$implicit;
    i0.ɵɵclassProp("po-accordion-item-active", poAccordionItem_r4.expanded);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-disabled", poAccordionItem_r4.disabledItem)("p-expanded", poAccordionItem_r4.expanded)("p-label", poAccordionItem_r4.label)("p-label-tag", poAccordionItem_r4.labelTag)("p-type-tag", poAccordionItem_r4.typeTag);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-expanded", poAccordionItem_r4.expanded);
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", poAccordionItem_r4.templateRef);
} }
/**
 * @docsExtends PoAccordionBaseComponent
 *
 * @example
 *
 * <example name="po-accordion-basic" title="PO Accordion Basic" >
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.html"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-labs" title="PO Accordion Labs" >
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.html"> </file>
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-faq" title="PO Accordion - FAQs" >
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.html"> </file>
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.ts"> </file>
 * </example>
 */
export class PoAccordionComponent extends PoAccordionBaseComponent {
    accordionService;
    accordionsHeader;
    poAccordionItems;
    expandedAllItems = false;
    accordionServiceSubscription;
    expandedActiveAccordionItem;
    constructor(accordionService, languageService) {
        super(languageService);
        this.accordionService = accordionService;
        this.receiveFromChildAccordionSubscription();
    }
    ngOnDestroy() {
        this.accordionServiceSubscription.unsubscribe();
    }
    changeVisibleAllItems(event) {
        this.expandedAllItems = !event;
        this.poAccordionItems.forEach(item => {
            if (!item.disabledItem) {
                item.expanded = this.expandedAllItems;
                this.toggle(item, false);
            }
        });
        if (this.expandedAllItems) {
            this.expandAllEvent.emit();
        }
        else {
            this.collapseAllEvent.emit();
        }
    }
    /**
     * Método para colapsar todos os itens.
     * Só pode ser utilizado quando a propriedade `p-show-manager-accordion` estiver como `true`.
     */
    collapseAllItems() {
        if (this.showManagerAccordion) {
            this.changeVisibleAllItems(true);
        }
    }
    /**
     * Método para expandir todos os itens.
     * Só pode ser utilizado quando a propriedade `p-show-manager-accordion` estiver como `true`.
     */
    expandAllItems() {
        if (this.showManagerAccordion) {
            this.changeVisibleAllItems(false);
        }
    }
    headerToggle(event, poAccordionItem) {
        poAccordionItem.expanded = event;
        this.accordionService.sendToParentAccordionItemClicked(poAccordionItem);
    }
    checkVisibleAllItems(event) {
        if (this.showManagerAccordion) {
            const accordionList = this.poAccordionItems.toArray();
            const accordionsValids = accordionList.filter(item => !item.disabledItem);
            const allItemsExpanded = accordionsValids.every(item => item.expanded === true);
            if (allItemsExpanded) {
                this.expandedAllItems = event;
            }
            else {
                this.expandedAllItems = false;
            }
        }
    }
    receiveFromChildAccordionSubscription() {
        this.accordionServiceSubscription = this.accordionService
            .receiveFromChildAccordionClicked()
            .subscribe(poAccordionItem => this.toggle(poAccordionItem));
    }
    toggle(poAccordionItem, checkAllItems = true) {
        const isCurrentAccordionCollapsed = !poAccordionItem.expanded;
        if (checkAllItems) {
            this.checkVisibleAllItems(poAccordionItem.expanded);
        }
        if (isCurrentAccordionCollapsed) {
            this.expandedActiveAccordionItem = null;
            return;
        }
        if (!this.showManagerAccordion && !this.allowExpandItems && this.expandedActiveAccordionItem) {
            this.expandedActiveAccordionItem.collapse();
        }
        this.expandedActiveAccordionItem = poAccordionItem;
    }
    static ɵfac = function PoAccordionComponent_Factory(t) { return new (t || PoAccordionComponent)(i0.ɵɵdirectiveInject(i1.PoAccordionService), i0.ɵɵdirectiveInject(i2.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoAccordionComponent, selectors: [["po-accordion"]], contentQueries: function PoAccordionComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
            i0.ɵɵcontentQuery(dirIndex, PoAccordionItemComponent, 4);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poAccordionItems = _t);
        } }, viewQuery: function PoAccordionComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(PoAccordionItemHeaderComponent, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accordionsHeader = _t);
        } }, features: [i0.ɵɵProvidersFeature([PoAccordionService]), i0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, "po-accordion"], ["class", "po-accordion-manager", 4, "ngIf"], ["class", "po-accordion-item", 3, "po-accordion-item-active", 4, "ngFor", "ngForOf"], [1, "po-accordion-manager"], [3, "p-expanded-all-items", "p-literals", "p-click"], [1, "po-accordion-item"], [3, "p-disabled", "p-expanded", "p-label", "p-label-tag", "p-type-tag", "p-toggle"], [3, "p-expanded"], [4, "ngTemplateOutlet"]], template: function PoAccordionComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, PoAccordionComponent_div_1_Template, 2, 2, "div", 1);
            i0.ɵɵelementStart(2, "ul");
            i0.ɵɵtemplate(3, PoAccordionComponent_li_3_Template, 4, 9, "li", 2);
            i0.ɵɵelementEnd()();
        } if (rf & 2) {
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.showManagerAccordion && ctx.poAccordionItems.length > 1);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngForOf", ctx.poAccordionItems);
        } }, dependencies: [i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, i4.PoAccordionItemBodyComponent, i5.PoAccordionItemHeaderComponent, i6.PoAccordionManagerComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoAccordionComponent, [{
        type: Component,
        args: [{ selector: 'po-accordion', providers: [PoAccordionService], template: "<div class=\"po-accordion\">\n  <div *ngIf=\"showManagerAccordion && poAccordionItems.length > 1\" class=\"po-accordion-manager\">\n    <po-accordion-manager\n      [p-expanded-all-items]=\"expandedAllItems\"\n      [p-literals]=\"literals\"\n      (p-click)=\"changeVisibleAllItems(expandedAllItems)\"\n    ></po-accordion-manager>\n  </div>\n  <ul>\n    <li\n      *ngFor=\"let poAccordionItem of poAccordionItems\"\n      class=\"po-accordion-item\"\n      [class.po-accordion-item-active]=\"poAccordionItem.expanded\"\n    >\n      <po-accordion-item-header\n        [p-disabled]=\"poAccordionItem.disabledItem\"\n        [p-expanded]=\"poAccordionItem.expanded\"\n        [p-label]=\"poAccordionItem.label\"\n        [p-label-tag]=\"poAccordionItem.labelTag\"\n        [p-type-tag]=\"poAccordionItem.typeTag\"\n        (p-toggle)=\"headerToggle($event, poAccordionItem)\"\n      >\n      </po-accordion-item-header>\n\n      <po-accordion-item-body [p-expanded]=\"poAccordionItem.expanded\">\n        <ng-container *ngTemplateOutlet=\"poAccordionItem.templateRef\"></ng-container>\n      </po-accordion-item-body>\n    </li>\n  </ul>\n</div>\n" }]
    }], () => [{ type: i1.PoAccordionService }, { type: i2.PoLanguageService }], { accordionsHeader: [{
            type: ViewChildren,
            args: [PoAccordionItemHeaderComponent]
        }], poAccordionItems: [{
            type: ContentChildren,
            args: [PoAccordionItemComponent]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoAccordionComponent, { className: "PoAccordionComponent", filePath: "lib/components/po-accordion/po-accordion.component.ts", lineNumber: 38 }); })();
//# sourceMappingURL=data:application/json;base64,