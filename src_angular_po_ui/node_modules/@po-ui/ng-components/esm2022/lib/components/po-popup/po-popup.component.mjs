import { Component, ElementRef, ViewChild } from '@angular/core';
import { isExternalLink, isTypeof, openExternalLink } from '../../utils/util';
import { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';
import { PoPopupBaseComponent } from './po-popup-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/po-control-position/po-control-position.service";
import * as i3 from "@angular/common";
import * as i4 from "../po-listbox/po-listbox.component";
const _c0 = ["popupRef"];
const _c1 = ["listbox"];
const _c2 = ["poListBoxRef"];
function PoPopupComponent_div_0_div_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div");
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext(2);
    i0.ɵɵclassMapInterpolate1("po-popup-arrow po-arrow-", ctx_r2.arrowDirection, "");
} }
function PoPopupComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r6 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 1, 2);
    i0.ɵɵtemplate(2, PoPopupComponent_div_0_div_2_Template, 1, 3, "div", 3);
    i0.ɵɵelementStart(3, "div", 4)(4, "po-listbox", 5, 6);
    i0.ɵɵlistener("p-close", function PoPopupComponent_div_0_Template_po_listbox_p_close_4_listener() { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.close()); });
    i0.ɵɵelementStart(7, "div", 7);
    i0.ɵɵprojection(8);
    i0.ɵɵelementEnd()()()();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", !ctx_r0.hideArrow);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("p-items", ctx_r0.actions)("p-param", ctx_r0.param);
} }
const _c3 = [[["", "p-popup-header-template", ""]]];
const _c4 = ["[p-popup-header-template]"];
/**
 *
 * @docsExtends PoPopupBaseComponent
 *
 * @example
 *
 * <example name="po-popup-basic" title="PO Popup - Basic">
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.html"> </file>
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-labs" title="PO Popup - Labs">
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.html"> </file>
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-email" title="PO Popup Email">
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.html"> </file>
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.ts"> </file>
 * </example>
 *
 */
export class PoPopupComponent extends PoPopupBaseComponent {
    renderer;
    router;
    poControlPosition;
    changeDetector;
    popupRef;
    listbox;
    //utilizado apenas no theme builder
    poListBoxRef;
    constructor(viewContainerRef, renderer, router, poControlPosition, changeDetector) {
        super();
        this.renderer = renderer;
        this.router = router;
        this.poControlPosition = poControlPosition;
        this.changeDetector = changeDetector;
    }
    /**
     * Fecha o componente *popup*.
     *
     * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.
     */
    close() {
        this.removeListeners();
        this.showPopup = false;
        this.closeEvent.emit();
    }
    onActionClick(popupAction) {
        const actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');
        if (popupAction && popupAction.action && actionNoDisabled) {
            this.close();
            popupAction.action(this.param || popupAction);
        }
        if (popupAction && popupAction.url && actionNoDisabled) {
            this.close();
            return this.openUrl(popupAction.url);
        }
    }
    /**
     * Abre o componente *popup*.
     *
     * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    open(param) {
        this.oldTarget = this.target;
        this.param = param;
        this.showPopup = true;
        this.changeDetector.detectChanges();
        this.validateInitialContent();
    }
    returnBooleanValue(popupAction, property) {
        return isTypeof(popupAction[property], 'function')
            ? popupAction[property](this.param || popupAction)
            : popupAction[property];
    }
    /**
     * Responsável por abrir e fechar o *popup*.
     *
     * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.
     *
     * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    toggle(param) {
        this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);
    }
    checkAllActionIsInvisible() {
        if (this.actions.every(item => item.visible === false)) {
            return true;
        }
        return false;
    }
    clickedOutDisabledItem(event) {
        const containsItemDisabled = this.elementContains(event.target, 'po-popup-item-disabled') ||
            this.elementContains(event.target.parentElement, 'po-popup-item-disabled');
        return !containsItemDisabled;
    }
    clickedOutHeaderTemplate(event) {
        const popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[p-popup-header-template]');
        return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));
    }
    clickedOutTarget(event) {
        return this.target && !this.target.contains(event.target);
    }
    closePopupOnClickout(event) {
        if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {
            this.close();
        }
    }
    elementContains(element, className) {
        return element && element.classList.contains(className);
    }
    hasContentToShow() {
        return !!(this.popupRef?.nativeElement && this.listbox?.nativeElement);
    }
    initializeListeners() {
        this.resizeListener = this.renderer.listen('window', 'resize', () => {
            this.close();
        });
        this.clickoutListener = this.renderer.listen('document', 'click', (event) => {
            this.closePopupOnClickout(event);
        });
        window.addEventListener('scroll', this.onScroll, true);
    }
    onScroll = ({ target }) => {
        const { showPopup, popupRef } = this;
        if (showPopup && popupRef?.nativeElement && !popupRef.nativeElement.contains(target)) {
            this.close();
        }
    };
    openUrl(url) {
        if (isExternalLink(url)) {
            return openExternalLink(url);
        }
        if (url) {
            return this.router.navigate([url]);
        }
    }
    removeListeners() {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.resizeListener) {
            this.resizeListener();
        }
        window.removeEventListener('scroll', this.onScroll, true);
    }
    setPosition() {
        if (this.listbox.nativeElement.querySelector('.po-listbox')) {
            this.poControlPosition.setElements(this.popupRef.nativeElement, 8, this.target, this.customPositions, false, this.isCornerAlign);
            this.poControlPosition.adjustPosition(this.position);
            this.arrowDirection = this.poControlPosition.getArrowDirection();
        }
    }
    validateInitialContent() {
        if (this.hasContentToShow()) {
            this.setPosition();
            this.initializeListeners();
        }
        else {
            this.close();
        }
    }
    static ɵfac = function PoPopupComponent_Factory(t) { return new (t || PoPopupComponent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PoControlPositionService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoPopupComponent, selectors: [["po-popup"]], viewQuery: function PoPopupComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 5, ElementRef);
            i0.ɵɵviewQuery(_c1, 5, ElementRef);
            i0.ɵɵviewQuery(_c2, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popupRef = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listbox = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poListBoxRef = _t.first);
        } }, features: [i0.ɵɵProvidersFeature([PoControlPositionService]), i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 1, vars: 1, consts: [["class", "po-popup", 4, "ngIf"], [1, "po-popup"], ["popupRef", ""], [3, "class", 4, "ngIf"], [1, "po-popup-container"], ["p-type", "action", 3, "p-items", "p-param", "p-close"], ["listbox", "", "poListBoxRef", ""], ["p-popup-header-template", ""]], template: function PoPopupComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef(_c3);
            i0.ɵɵtemplate(0, PoPopupComponent_div_0_Template, 9, 3, "div", 0);
        } if (rf & 2) {
            i0.ɵɵproperty("ngIf", ctx.showPopup && ctx.actions.length && !ctx.checkAllActionIsInvisible());
        } }, dependencies: [i3.NgIf, i4.PoListBoxComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoPopupComponent, [{
        type: Component,
        args: [{ selector: 'po-popup', providers: [PoControlPositionService], template: "<div #popupRef class=\"po-popup\" *ngIf=\"showPopup && actions.length && !checkAllActionIsInvisible()\">\n  <div *ngIf=\"!hideArrow\" class=\"po-popup-arrow po-arrow-{{ arrowDirection }}\"></div>\n\n  <div class=\"po-popup-container\">\n    <po-listbox #listbox #poListBoxRef p-type=\"action\" [p-items]=\"actions\" [p-param]=\"param\" (p-close)=\"close()\">\n      <div p-popup-header-template>\n        <ng-content select=\"[p-popup-header-template]\"></ng-content>\n      </div>\n    </po-listbox>\n  </div>\n</div>\n" }]
    }], () => [{ type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i1.Router }, { type: i2.PoControlPositionService }, { type: i0.ChangeDetectorRef }], { popupRef: [{
            type: ViewChild,
            args: ['popupRef', { read: ElementRef }]
        }], listbox: [{
            type: ViewChild,
            args: ['listbox', { read: ElementRef }]
        }], poListBoxRef: [{
            type: ViewChild,
            args: ['poListBoxRef']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoPopupComponent, { className: "PoPopupComponent", filePath: "lib/components/po-popup/po-popup.component.ts", lineNumber: 38 }); })();
//# sourceMappingURL=data:application/json;base64,