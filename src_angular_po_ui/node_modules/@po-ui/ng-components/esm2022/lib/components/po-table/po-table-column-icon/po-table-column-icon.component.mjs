import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../po-table-icon/po-table-icon.component";
function PoTableColumnIconComponent_po_table_icon_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-table-icon", 1);
    i0.ɵɵlistener("p-click", function PoTableColumnIconComponent_po_table_icon_0_Template_po_table_icon_p_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const column_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.click(column_r1, $event)); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r1 = ctx.$implicit;
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-clickable", ctx_r0.isClickable(column_r1))("p-color", ctx_r0.getColor(column_r1))("p-disabled", ctx_r0.isDisabled(column_r1))("p-icon", ctx_r0.getIcon(column_r1))("p-icon-tooltip", column_r1.tooltip);
} }
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por exibir ícones nas colunas.
 */
export class PoTableColumnIconComponent {
    /** Definição da coluna que utiliza os icones. */
    column;
    /** Dados da linha da tabela. */
    row;
    _icons = [];
    /** Lista de colunas com ícones. */
    set icons(icons) {
        this._icons = this.convertToColumnIcon(icons);
    }
    get icons() {
        return this._icons;
    }
    click(columnIcon, event) {
        const isAbleAction = !this.isDisabled(columnIcon);
        if (isAbleAction) {
            if (columnIcon.action) {
                columnIcon.action(this.row, columnIcon);
            }
            else if (this.column.action) {
                this.column.action(this.row, columnIcon);
            }
            event.stopPropagation();
        }
    }
    getColor(column) {
        const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;
        if (color) {
            return `po-text-${color}`;
        }
    }
    getIcon(column) {
        return column.icon || column.value;
    }
    isClickable(columnIcon) {
        return !!(!this.isDisabled(columnIcon) && (columnIcon.action || this.column.action));
    }
    isDisabled(column) {
        return column.disabled ? column.disabled(this.row) : false;
    }
    trackByFunction(index) {
        return index;
    }
    convertToColumnIcon(rowIcons) {
        if (Array.isArray(rowIcons)) {
            return rowIcons.map(rowIcon => (typeof rowIcon === 'string' ? { value: rowIcon } : rowIcon));
        }
        if (typeof rowIcons === 'string') {
            return [{ value: rowIcons }];
        }
        return [];
    }
    static ɵfac = function PoTableColumnIconComponent_Factory(t) { return new (t || PoTableColumnIconComponent)(); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoTableColumnIconComponent, selectors: [["po-table-column-icon"]], inputs: { column: [i0.ɵɵInputFlags.None, "p-column", "column"], row: [i0.ɵɵInputFlags.None, "p-row", "row"], icons: [i0.ɵɵInputFlags.None, "p-icons", "icons"] }, decls: 1, vars: 2, consts: [[3, "p-clickable", "p-color", "p-disabled", "p-icon", "p-icon-tooltip", "p-click", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "p-clickable", "p-color", "p-disabled", "p-icon", "p-icon-tooltip", "p-click"]], template: function PoTableColumnIconComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, PoTableColumnIconComponent_po_table_icon_0_Template, 1, 5, "po-table-icon", 0);
        } if (rf & 2) {
            i0.ɵɵproperty("ngForOf", ctx.icons)("ngForTrackBy", ctx.trackByFunction);
        } }, dependencies: [i1.NgForOf, i2.PoTableIconComponent], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoTableColumnIconComponent, [{
        type: Component,
        args: [{ selector: 'po-table-column-icon', changeDetection: ChangeDetectionStrategy.OnPush, template: "<po-table-icon\n  *ngFor=\"let column of icons; trackBy: trackByFunction\"\n  [p-clickable]=\"isClickable(column)\"\n  [p-color]=\"getColor(column)\"\n  [p-disabled]=\"isDisabled(column)\"\n  [p-icon]=\"getIcon(column)\"\n  [p-icon-tooltip]=\"column.tooltip\"\n  (p-click)=\"click(column, $event)\"\n>\n</po-table-icon>\n" }]
    }], null, { column: [{
            type: Input,
            args: ['p-column']
        }], row: [{
            type: Input,
            args: ['p-row']
        }], icons: [{
            type: Input,
            args: ['p-icons']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoTableColumnIconComponent, { className: "PoTableColumnIconComponent", filePath: "lib/components/po-table/po-table-column-icon/po-table-column-icon.component.ts", lineNumber: 18 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWNvbHVtbi1pY29uL3BvLXRhYmxlLWNvbHVtbi1pY29uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby10YWJsZS9wby10YWJsZS1jb2x1bW4taWNvbi9wby10YWJsZS1jb2x1bW4taWNvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0lDQTFFLHdDQVFDO0lBREMsK1BBQVcsZUFBQSwrQkFBcUIsQ0FBQSxJQUFDO0lBRW5DLGlCQUFnQjs7OztJQVBkLDJEQUFtQyx1Q0FBQSw0Q0FBQSxxQ0FBQSxxQ0FBQTs7QURHckM7Ozs7OztHQU1HO0FBTUgsTUFBTSxPQUFPLDBCQUEwQjtJQUNyQyxpREFBaUQ7SUFDOUIsTUFBTSxDQUFnQjtJQUV6QyxnQ0FBZ0M7SUFDaEIsR0FBRyxDQUFNO0lBRWpCLE1BQU0sR0FBNkIsRUFBRSxDQUFDO0lBRTlDLG1DQUFtQztJQUNuQyxJQUFzQixLQUFLLENBQUMsS0FBd0Q7UUFDbEYsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRUQsS0FBSyxDQUFDLFVBQTZCLEVBQUUsS0FBSztRQUN4QyxNQUFNLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFbEQsSUFBSSxZQUFZLEVBQUU7WUFDaEIsSUFBSSxVQUFVLENBQUMsTUFBTSxFQUFFO2dCQUNyQixVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUM7YUFDekM7aUJBQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtnQkFDN0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQzthQUMxQztZQUNELEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUN6QjtJQUNILENBQUM7SUFFRCxRQUFRLENBQUMsTUFBeUI7UUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxNQUFNLENBQUMsS0FBSyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBRWpHLElBQUksS0FBSyxFQUFFO1lBQ1QsT0FBTyxXQUFXLEtBQUssRUFBRSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVELE9BQU8sQ0FBQyxNQUF5QjtRQUMvQixPQUFPLE1BQU0sQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNyQyxDQUFDO0lBRUQsV0FBVyxDQUFDLFVBQTZCO1FBQ3ZDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUVELFVBQVUsQ0FBQyxNQUF5QjtRQUNsQyxPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDN0QsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUFLO1FBQ25CLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVPLG1CQUFtQixDQUFDLFFBQTJEO1FBQ3JGLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUMzQixPQUFhLFFBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sT0FBTyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDckc7UUFFRCxJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtZQUNoQyxPQUFPLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztTQUM5QjtRQUVELE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQztvRkFqRVUsMEJBQTBCOzZEQUExQiwwQkFBMEI7WUNqQnZDLCtGQVNnQjs7WUFSSyxtQ0FBVSxxQ0FBQTs7O2lGRGdCbEIsMEJBQTBCO2NBTHRDLFNBQVM7MkJBQ0Usc0JBQXNCLG1CQUVmLHVCQUF1QixDQUFDLE1BQU07Z0JBSTVCLE1BQU07a0JBQXhCLEtBQUs7bUJBQUMsVUFBVTtZQUdELEdBQUc7a0JBQWxCLEtBQUs7bUJBQUMsT0FBTztZQUtRLEtBQUs7a0JBQTFCLEtBQUs7bUJBQUMsU0FBUzs7a0ZBVkwsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9UYWJsZUNvbHVtbiB9IGZyb20gJy4uL2ludGVyZmFjZXMvcG8tdGFibGUtY29sdW1uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1RhYmxlQ29sdW1uSWNvbiB9IGZyb20gJy4vcG8tdGFibGUtY29sdW1uLWljb24uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgZXhpYmlyIMOtY29uZXMgbmFzIGNvbHVuYXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRhYmxlLWNvbHVtbi1pY29uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYmxlLWNvbHVtbi1pY29uLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJsZUNvbHVtbkljb25Db21wb25lbnQge1xuICAvKiogRGVmaW5pw6fDo28gZGEgY29sdW5hIHF1ZSB1dGlsaXphIG9zIGljb25lcy4gKi9cbiAgQElucHV0KCdwLWNvbHVtbicpIGNvbHVtbjogUG9UYWJsZUNvbHVtbjtcblxuICAvKiogRGFkb3MgZGEgbGluaGEgZGEgdGFiZWxhLiAqL1xuICBASW5wdXQoJ3Atcm93Jykgcm93OiBhbnk7XG5cbiAgcHJpdmF0ZSBfaWNvbnM6IEFycmF5PFBvVGFibGVDb2x1bW5JY29uPiA9IFtdO1xuXG4gIC8qKiBMaXN0YSBkZSBjb2x1bmFzIGNvbSDDrWNvbmVzLiAqL1xuICBASW5wdXQoJ3AtaWNvbnMnKSBzZXQgaWNvbnMoaWNvbnM6IEFycmF5PFBvVGFibGVDb2x1bW5JY29uPiB8IEFycmF5PHN0cmluZz4gfCBzdHJpbmcpIHtcbiAgICB0aGlzLl9pY29ucyA9IHRoaXMuY29udmVydFRvQ29sdW1uSWNvbihpY29ucyk7XG4gIH1cblxuICBnZXQgaWNvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ljb25zO1xuICB9XG5cbiAgY2xpY2soY29sdW1uSWNvbjogUG9UYWJsZUNvbHVtbkljb24sIGV2ZW50KTogdm9pZCB7XG4gICAgY29uc3QgaXNBYmxlQWN0aW9uID0gIXRoaXMuaXNEaXNhYmxlZChjb2x1bW5JY29uKTtcblxuICAgIGlmIChpc0FibGVBY3Rpb24pIHtcbiAgICAgIGlmIChjb2x1bW5JY29uLmFjdGlvbikge1xuICAgICAgICBjb2x1bW5JY29uLmFjdGlvbih0aGlzLnJvdywgY29sdW1uSWNvbik7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuY29sdW1uLmFjdGlvbikge1xuICAgICAgICB0aGlzLmNvbHVtbi5hY3Rpb24odGhpcy5yb3csIGNvbHVtbkljb24pO1xuICAgICAgfVxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0Q29sb3IoY29sdW1uOiBQb1RhYmxlQ29sdW1uSWNvbik6IHN0cmluZyB7XG4gICAgY29uc3QgY29sb3IgPSB0eXBlb2YgY29sdW1uLmNvbG9yID09PSAnZnVuY3Rpb24nID8gY29sdW1uLmNvbG9yKHRoaXMucm93LCBjb2x1bW4pIDogY29sdW1uLmNvbG9yO1xuXG4gICAgaWYgKGNvbG9yKSB7XG4gICAgICByZXR1cm4gYHBvLXRleHQtJHtjb2xvcn1gO1xuICAgIH1cbiAgfVxuXG4gIGdldEljb24oY29sdW1uOiBQb1RhYmxlQ29sdW1uSWNvbikge1xuICAgIHJldHVybiBjb2x1bW4uaWNvbiB8fCBjb2x1bW4udmFsdWU7XG4gIH1cblxuICBpc0NsaWNrYWJsZShjb2x1bW5JY29uOiBQb1RhYmxlQ29sdW1uSWNvbik6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhISghdGhpcy5pc0Rpc2FibGVkKGNvbHVtbkljb24pICYmIChjb2x1bW5JY29uLmFjdGlvbiB8fCB0aGlzLmNvbHVtbi5hY3Rpb24pKTtcbiAgfVxuXG4gIGlzRGlzYWJsZWQoY29sdW1uOiBQb1RhYmxlQ29sdW1uSWNvbik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBjb2x1bW4uZGlzYWJsZWQgPyBjb2x1bW4uZGlzYWJsZWQodGhpcy5yb3cpIDogZmFsc2U7XG4gIH1cblxuICB0cmFja0J5RnVuY3Rpb24oaW5kZXgpIHtcbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cblxuICBwcml2YXRlIGNvbnZlcnRUb0NvbHVtbkljb24ocm93SWNvbnM6IEFycmF5PFBvVGFibGVDb2x1bW5JY29uPiB8IEFycmF5PHN0cmluZz4gfCBzdHJpbmcpOiBBcnJheTxQb1RhYmxlQ29sdW1uSWNvbj4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHJvd0ljb25zKSkge1xuICAgICAgcmV0dXJuICg8YW55PnJvd0ljb25zKS5tYXAocm93SWNvbiA9PiAodHlwZW9mIHJvd0ljb24gPT09ICdzdHJpbmcnID8geyB2YWx1ZTogcm93SWNvbiB9IDogcm93SWNvbikpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygcm93SWNvbnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gW3sgdmFsdWU6IHJvd0ljb25zIH1dO1xuICAgIH1cblxuICAgIHJldHVybiBbXTtcbiAgfVxufVxuIiwiPHBvLXRhYmxlLWljb25cbiAgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBpY29uczsgdHJhY2tCeTogdHJhY2tCeUZ1bmN0aW9uXCJcbiAgW3AtY2xpY2thYmxlXT1cImlzQ2xpY2thYmxlKGNvbHVtbilcIlxuICBbcC1jb2xvcl09XCJnZXRDb2xvcihjb2x1bW4pXCJcbiAgW3AtZGlzYWJsZWRdPVwiaXNEaXNhYmxlZChjb2x1bW4pXCJcbiAgW3AtaWNvbl09XCJnZXRJY29uKGNvbHVtbilcIlxuICBbcC1pY29uLXRvb2x0aXBdPVwiY29sdW1uLnRvb2x0aXBcIlxuICAocC1jbGljayk9XCJjbGljayhjb2x1bW4sICRldmVudClcIlxuPlxuPC9wby10YWJsZS1pY29uPlxuIl19