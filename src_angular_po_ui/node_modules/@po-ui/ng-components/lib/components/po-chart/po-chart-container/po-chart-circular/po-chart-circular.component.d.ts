import { ChangeDetectorRef, EventEmitter, NgZone } from '@angular/core';
import { PoChartContainerSize } from '../../interfaces/po-chart-container-size.interface';
import { PoChartLabelCoordinates } from '../../interfaces/po-chart-label-coordinates.interface';
import { PoChartOptions } from '../../interfaces/po-chart-options.interface';
import { PoChartPathCoordinates } from '../../interfaces/po-chart-path-coordinates.interface';
import { PoChartSerie } from '../../interfaces/po-chart-serie.interface';
import * as i0 from "@angular/core";
export declare abstract class PoChartCircularComponent {
    private ngZone;
    private changeDetector;
    containerSize: PoChartContainerSize;
    circularClick: EventEmitter<any>;
    circularHover: EventEmitter<any>;
    private svgPaths;
    private svgLabels;
    canDisplayLabels: boolean;
    seriesLabels: Array<PoChartLabelCoordinates>;
    seriesList: Array<PoChartPathCoordinates>;
    showLabels: boolean;
    protected innerRadius: number;
    protected totalValue: number;
    private _options;
    private _series;
    private animate;
    set options(value: PoChartOptions);
    get options(): PoChartOptions;
    set series(value: Array<PoChartSerie>);
    get series(): Array<PoChartSerie>;
    constructor(ngZone: NgZone, changeDetector: ChangeDetectorRef);
    onSerieClick(selectedItem: any): void;
    onSerieHover(selectedItem: any): void;
    protected calculateAngle(data: number, totalValue: number): number;
    protected drawSeries(series: Array<PoChartSerie>, height: number): void;
    private calculateTotalValue;
    private calculateSerieCoordinates;
    private calculateCoordinatesWithAnimation;
    private calculateCurrentEndAngle;
    private initDrawPaths;
    private setSerieLabelCoordinates;
    private validateSeries;
    protected abstract calculateCoordinates(height: any, startRadianAngle: any, currentEndRadianAngle: any): any;
    protected abstract getTooltipLabel(data: any, label: any, tooltip: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoChartCircularComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PoChartCircularComponent, never, never, { "containerSize": { "alias": "p-container-size"; "required": false; }; "options": { "alias": "p-options"; "required": false; }; "series": { "alias": "p-series"; "required": false; }; }, { "circularClick": "p-circular-click"; "circularHover": "p-circular-hover"; }, never, never, false, never>;
}
