import { ElementRef, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { PoChartType } from '../enums/po-chart-type.enum';
import { PoChartContainerSize } from '../interfaces/po-chart-container-size.interface';
import { PoChartOptions } from '../interfaces/po-chart-options.interface';
import { PoChartAxisOptions } from '../interfaces/po-chart-axis-options.interface';
import { PoChartMathsService } from '../services/po-chart-maths.service';
import { PoChartMinMaxValues } from '../interfaces/po-chart-min-max-values.interface';
import { PoChartSerie } from '../interfaces/po-chart-serie.interface';
import * as i0 from "@angular/core";
export declare class PoChartContainerComponent implements OnChanges {
    private mathsService;
    categories: Array<string>;
    type: PoChartType;
    containerSize: PoChartContainerSize;
    serieClick: EventEmitter<any>;
    serieHover: EventEmitter<any>;
    svgELement: ElementRef;
    alignByTheCorners: boolean;
    axisOptions: PoChartAxisOptions;
    categoriesCoordinates: Array<number>;
    range: PoChartMinMaxValues;
    seriesByType: any;
    svgSpace: any;
    viewBox: string;
    private _options;
    private _series;
    set options(value: PoChartOptions);
    get options(): PoChartOptions;
    set series(data: Array<PoChartSerie>);
    get series(): Array<PoChartSerie>;
    get isTypeCircular(): boolean;
    constructor(mathsService: PoChartMathsService);
    ngOnChanges(changes: SimpleChanges): void;
    getCategoriesCoordinates(value: Array<number>): void;
    onSerieClick(event: any): void;
    onSerieHover(event: any): void;
    private getRange;
    private setSvgSpace;
    private setAlignByTheCorners;
    private setRange;
    private setSeriesByType;
    private setViewBox;
    private verifyAxisOptions;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoChartContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PoChartContainerComponent, "po-chart-container", never, { "categories": { "alias": "p-categories"; "required": false; }; "type": { "alias": "p-type"; "required": false; }; "containerSize": { "alias": "p-container-size"; "required": false; }; "options": { "alias": "p-options"; "required": false; }; "series": { "alias": "p-series"; "required": false; }; }, { "serieClick": "p-serie-click"; "serieHover": "p-serie-hover"; }, never, never, false, never>;
}
