import { EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
/**
 *
 * @description
 *
 * O componente `po-widget` é recomendado para exibição de *dashboards*, podendo ser utilizado
 * para incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.
 *
 * Além da exibição de conteúdos, este componente possibilita adicionar ações e um link
 * para ajuda, como também possibilita ser utilizado com ou sem sombra.
 *
 * Para controlar sua largura, é possível utilizar o [Grid System](/guides/grid-system) para um maior
 * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluções.
 *
 * #### Acessibilidade tratada no componente
 *
 * Algumas diretrizes de acessibilidade já são tratadas no componente, internamente, e não podem ser alteradas. São elas:
 * - Utiliza medidas relativas, para se adequar às preferências e necessidades de quem for utilizar o sistema.
 * - Desenvolvido com uso de controles padrões HTML, o que permite a identificação na interface por tecnologias assistivas. (WCAG [4.1.2: Name, Role, Value](https://www.w3.org/WAI/WCAG21/Understanding/name-role-value))
 * - O foco é visível e possui uma espessura superior a 2 pixels CSS, não ficando escondido por outros elementos da tela. (WCAG [2.4.12: Focus Appearance](https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance-enhanced))
 * - Quando selecionável, prevê interação por teclado, podendo ser selecionado através da tecla space (WCAG [2.4.1 - Keyboard](https://www.w3.org/WAI/WCAG21/Understanding/keyboard))
 *
 * #### Tokens customizáveis
 *
 * É possível alterar o estilo do componente usando os seguintes tokens (CSS):
 *
 * > Para maiores informações, acesse o guia [Personalizando o Tema Padrão com Tokens CSS](https://po-ui.io/guides/theme-customization).
 *
 * | Propriedade                                  | Descrição                                                        | Valor Padrão                                     |
 * |----------------------------------------------|------------------------------------------------------------------|--------------------------------------------------|
 * | **Default Values**                           |                                                                  |                                                  |
 * | `--padding`                                  | Preenchimento                                                    | `1rem`                                           |
 * | `--border-radius`                            | Contém o valor do raio dos cantos do elemento&nbsp;              | `var(--border-radius-md)`                        |
 * | `--border-width`                             | Contém o valor da largura dos cantos do elemento&nbsp;           | `var(--border-width-sm)`                         |
 * | `--border-color`                             | Cor da borda                                                     | `var(--color-neutral-light-20)`                  |
 * | `--background`                               | Cor de background                                                | `var(--color-neutral-light-00)`                  |
 * | `--shadow`                                   | Contém o valor da sombra do elemento                             | `var(--shadow-md)`                               |
 * | **Selected**                                 |                                                                  |                                                  |
 * | `--background-selected` &nbsp;               | Cor de background no estado selecionado &nbsp;                   | `var(--color-brand-01-lightest)`                 |
 * | `--border-color-selected` &nbsp;             | Cor da borda no estado selecionado                               | `var(--color-action-default)`                    |
 * | **Hover**                                    |                                                                  |                                                  |
 * | `--border-color-hover`                       | Cor da borda no estado hover                                     | `var(--color-brand-01-dark)`                     |
 * | `--shadow-hover`                             | Contém o valor da sombra do elemento no estado hover  &nbsp;     | `var(--shadow-lg)`                               |
 * | **Focused**                                  |                                                                  |                                                  |
 * | `--color-focused`                            | Cor principal no estado de focus                                 | `var(--color-action-default)`                    |
 * | `--outline-color-focused` &nbsp;             | Cor do outline do estado de focus                                | `var(--color-action-focus)`                      |
 *
 */
export declare abstract class PoWidgetBaseComponent {
    /** Descrição da segunda ação. */
    secondaryLabel?: string;
    /**
     * @optional
     *
     * @description
     *
     * Ação que será executada quando o usuário clicar sobre a área total do `po-widget`.
     */
    click: EventEmitter<MouseEvent | KeyboardEvent>;
    /**
     * @optional
     *
     * @description
     *
     * Função que será disparada com o valor do `p-disabled` quando esta propriedade for alterada.
     */
    onDisabled: EventEmitter<any>;
    /**
     * @optional
     *
     * @description
     *
     * Função que será chamada na primeira ação.
     */
    primaryAction: EventEmitter<any>;
    /**
     * @optional
     *
     * @description
     *
     * Função que será chamada na segunda ação.
     */
    secondaryAction: EventEmitter<any>;
    /**
     * @optional
     *
     * @description
     * Função chamada ao clicar no ícone de configuração
     */
    setting: EventEmitter<any>;
    /**
     * @optional
     *
     * @description
     * Função que será chamada ao clicar no título.
     */
    titleAction: EventEmitter<any>;
    containerHeight?: string;
    id: string;
    private _background?;
    private _disabled?;
    private _height?;
    private _help?;
    private _noShadow?;
    private _primary?;
    private _primaryLabel?;
    private _title?;
    /**
     * @optional
     *
     * @description
     *
     * Aplicação de imagem de fundo.
     * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,
     * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.
     *
     */
    set background(value: string);
    get background(): string;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita todas as ações do componente.
     *
     * @default `false`
     */
    set disabled(value: boolean);
    get disabled(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-widget`.
     * A altura mínima para o `po-widget` depende do que será exibido através das propriedades `p-primary-label`,
     * `p-setting`, `p-help` e `p-title`.
     * > Caso não seja informado valor, a propriedade irá assumir o tamanho do conteúdo.
     */
    set height(value: number);
    get height(): number;
    /**
     * @optional
     *
     * @description
     *
     * Link de ajuda
     */
    set help(value: string);
    get help(): string;
    /**
     *
     * @optional
     *
     * @description
     *
     * Desabilita a sombra do `po-widget` quando o mesmo for clicável.
     *
     * @default `true`
     */
    set noShadow(value: boolean);
    get noShadow(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Opção para que o `po-widget` fique em destaque.
     *
     * @default `false`
     */
    set primary(value: boolean);
    get primary(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Descrição da primeira ação.
     *
     * @default `false`
     */
    set primaryLabel(value: string);
    get primaryLabel(): string;
    /**
     * @optional
     *
     * @description
     *
     * Título do `po-widget`.
     *
     * @default `false`
     */
    set title(value: string);
    get title(): string;
    abstract setHeight(height: number): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoWidgetBaseComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PoWidgetBaseComponent, never, never, { "secondaryLabel": { "alias": "p-secondary-label"; "required": false; }; "background": { "alias": "p-background"; "required": false; }; "disabled": { "alias": "p-disabled"; "required": false; }; "height": { "alias": "p-height"; "required": false; }; "help": { "alias": "p-help"; "required": false; }; "noShadow": { "alias": "p-no-shadow"; "required": false; }; "primary": { "alias": "p-primary"; "required": false; }; "primaryLabel": { "alias": "p-primary-label"; "required": false; }; "title": { "alias": "p-title"; "required": false; }; }, { "click": "p-click"; "onDisabled": "p-on-disabled"; "primaryAction": "p-primary-action"; "secondaryAction": "p-secondary-action"; "setting": "p-setting"; "titleAction": "p-title-action"; }, never, never, false, never>;
}
