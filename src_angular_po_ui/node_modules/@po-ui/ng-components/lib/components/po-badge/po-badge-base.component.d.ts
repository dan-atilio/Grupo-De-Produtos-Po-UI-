import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export type PoBadgeStatus = 'disabled' | 'negative' | 'positive' | 'warning';
export type PoBadgeSize = 'small' | 'medium' | 'large';
export type PoBadgeIcon = string | boolean | TemplateRef<void>;
/**
 * @description
 *
 * Utilizado para exibir a quantidade de notificações.
 */
export declare class PoBadgeBaseComponent {
    badgeValue: string;
    customColor: string;
    private _color;
    private _value;
    private _status?;
    private _ariaLabel;
    /**
     * @description
     *
     * Define um `aria-label` para o `po-badge`
     */
    set ariaLabel(value: string);
    get ariaLabel(): string;
    /**
     * @optional
     *
     * @description
     *
     * Determina a cor do `po-badge`. As maneiras de customizar as cores são:
     * - Hexadeximal, por exemplo `#c64840`;
     * - RGB, como `rgb(0, 0, 165)`;
     * - O nome da cor, por exemplo `blue`;
     * - Usando uma das cores do tema do PO:
     * Valores válidos:
     *  - <span class="dot po-color-01"></span> `color-01`
     *  - <span class="dot po-color-02"></span> `color-02`
     *  - <span class="dot po-color-03"></span> `color-03`
     *  - <span class="dot po-color-04"></span> `color-04`
     *  - <span class="dot po-color-05"></span> `color-05`
     *  - <span class="dot po-color-06"></span> `color-06`
     *  - <span class="dot po-color-07"></span> `color-07`
     *  - <span class="dot po-color-08"></span> `color-08`
     *  - <span class="dot po-color-09"></span> `color-09`
     *  - <span class="dot po-color-10"></span> `color-10`
     *  - <span class="dot po-color-11"></span> `color-11`
     *  - <span class="dot po-color-12"></span> `color-12`
     *
     * @default `color-07`
     */
    set color(value: string);
    get color(): string;
    /**
     * @optional
     *
     * @description
     * Ícone exibido no `po-badge`.
     *
     * Para exibir icone do status atual declare a propriedade `p-icon`. conforme exemplo abaixo:
     * ```
     * <po-badge [p-icon]="true"></po-badge>
     * ```
     * É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:
     * ```
     * <po-badge p-icon="po-icon-user"></po-badge>
     * ```
     * Também é possível utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:
     * ```
     * <po-badge p-icon="fa fa-podcast"></po-badge>
     * ```
     * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:
     * ```
     * <po-badge [p-icon]="template"></po-badge>
     *
     * <ng-template #template>
     *  <ion-icon style="font-size: inherit" name="heart"></ion-icon>
     * </ng-template>
     * ```
     */
    icon: PoBadgeIcon;
    /**
     * @description
     *
     * Define o estado do `po-badge`
     *
     * Valores válidos:
     * - `positive`: Define a cor do `po-badge` com a cor de feedback positivo.;
     * - `negative`: Define a cor do `po-badge` com a cor de feedback negative.;
     * - `warning`: Define a cor do `po-badge` com a cor de feedback warning.;
     * - `disabled`: Define a cor do `po-badge` com a cor de feedback disabled;
     *
     */
    set status(value: PoBadgeStatus);
    get status(): PoBadgeStatus;
    /**
     * @description
     *
     * Define o tamanho do `po-badge`
     *
     * Valores válidos:
     * - `small`: o `po-badge` fica do tamanho padrão, com 8px de altura.;
     * - `medium`: o `po-badge` fica do tamanho padrão, com 16px de altura.;
     * - `large`: o `po-badge` fica do tamanho padrão, com 24px de altura.;
     *
     * @default `medium`
     */
    size: PoBadgeSize;
    /**
     * @description
     *
     * Exibe uma borda para o `po-badge`
     *
     * > Pode personalizar cor da bordar com a propriedade `p-color-border`
     */
    showBorder: boolean;
    /**
     * @description
     *
     * Número exibido no componente, caso o mesmo seja maior que 9 o valor exibido será 9+.
     */
    set value(value: number);
    get value(): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoBadgeBaseComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PoBadgeBaseComponent, never, never, { "ariaLabel": { "alias": "p-aria-label"; "required": false; }; "color": { "alias": "p-color"; "required": false; }; "icon": { "alias": "p-icon"; "required": false; }; "status": { "alias": "p-status"; "required": false; }; "size": { "alias": "p-size"; "required": false; }; "showBorder": { "alias": "p-show-border"; "required": false; }; "value": { "alias": "p-value"; "required": false; }; }, {}, never, never, false, never>;
    static ngAcceptInputType_showBorder: any;
}
