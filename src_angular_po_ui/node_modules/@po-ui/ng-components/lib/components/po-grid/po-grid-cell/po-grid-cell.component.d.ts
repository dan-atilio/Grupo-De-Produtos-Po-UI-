import { ElementRef, ChangeDetectorRef, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
export declare class PoGridCellComponent {
    private changeDetectorRef;
    align?: string;
    freeze?: boolean;
    tabIndex?: number;
    position?: string;
    readonly?: boolean;
    required?: boolean;
    valueChange: EventEmitter<any>;
    inputElement: ElementRef;
    contentElement: ElementRef;
    _value: any;
    edit: boolean;
    editValue: string;
    private _width;
    set width(value: string | number);
    get width(): string | number;
    set value(value: any);
    get value(): any;
    constructor(changeDetectorRef: ChangeDetectorRef);
    onKeyDownContent(event: any): void;
    dblclick(event: any): void;
    onBlurInput(): void;
    onKeyDownInput(event: any): void;
    private onEditCell;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoGridCellComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PoGridCellComponent, "po-grid-cell", never, { "align": { "alias": "p-align"; "required": false; }; "freeze": { "alias": "p-freeze"; "required": false; }; "tabIndex": { "alias": "p-tab-index"; "required": false; }; "position": { "alias": "p-position"; "required": false; }; "readonly": { "alias": "p-readonly"; "required": false; }; "required": { "alias": "p-required"; "required": false; }; "width": { "alias": "p-width"; "required": false; }; "value": { "alias": "p-value"; "required": false; }; }, { "valueChange": "p-valueChange"; }, never, never, false, never>;
}
