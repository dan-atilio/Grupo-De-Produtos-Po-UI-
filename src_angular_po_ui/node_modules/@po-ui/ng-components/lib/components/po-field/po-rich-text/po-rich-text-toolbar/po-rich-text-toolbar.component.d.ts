import { AfterViewInit, ElementRef, EventEmitter } from '@angular/core';
import { PoLanguageService } from '../../../../services/po-language/po-language.service';
import { PoButtonGroupItem } from '../../../po-button-group';
import { PoRichTextToolbarButtonGroupItem } from '../interfaces/po-rich-text-toolbar-button-group-item.interface';
import { PoRichTextImageModalComponent } from '../po-rich-text-image-modal/po-rich-text-image-modal.component';
import { PoRichTextLinkModalComponent } from '../po-rich-text-link-modal/po-rich-text-link-modal.component';
import * as i0 from "@angular/core";
export declare class PoRichTextToolbarComponent implements AfterViewInit {
    private languageService;
    colorPickerInput: ElementRef;
    toolbarElement: ElementRef;
    richTextImageModal: PoRichTextImageModalComponent;
    richTextLinkModal: PoRichTextLinkModalComponent;
    command: EventEmitter<string | {
        command: string;
        value: string;
    }>;
    modal: EventEmitter<any>;
    linkEditing: EventEmitter<any>;
    readonly literals?: any;
    alignButtons: Array<PoRichTextToolbarButtonGroupItem>;
    formatButtons: Array<PoRichTextToolbarButtonGroupItem>;
    listButtons: Array<PoRichTextToolbarButtonGroupItem>;
    linkButtons: Array<PoRichTextToolbarButtonGroupItem>;
    mediaButtons: Array<PoButtonGroupItem>;
    private _disabledTextAlign;
    private _readonly;
    private selectedLinkElement;
    set disabledTextAlign(value: boolean);
    get disabledTextAlign(): boolean;
    set readonly(value: boolean);
    get readonly(): boolean;
    get isInternetExplorer(): boolean;
    constructor(languageService: PoLanguageService);
    ngAfterViewInit(): void;
    changeTextColor(value: any): void;
    emitLinkEditing(isLinkEdit: boolean): void;
    selectedLink(selectedLinkElement: any): void;
    setButtonsStates(obj: {
        commands: Array<string>;
        hexColor: string;
    }): void;
    shortcutTrigger(): void;
    emitCommand(command: string): void;
    private emitAlignCommand;
    private removeButtonFocus;
    private setColorInColorPicker;
    private toggleDisableButtons;
    static ɵfac: i0.ɵɵFactoryDeclaration<PoRichTextToolbarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PoRichTextToolbarComponent, "po-rich-text-toolbar", never, { "disabledTextAlign": { "alias": "p-disabled-text-align"; "required": false; }; "readonly": { "alias": "p-readonly"; "required": false; }; }, { "command": "p-command"; "modal": "p-modal"; "linkEditing": "p-link-editing"; }, never, never, false, never>;
}
