import { Component, ViewChild } from '@angular/core';
import { Subscription } from 'rxjs';
import { PoDynamicFormComponent } from '@po-ui/ng-components';
import { PoAdvancedFilterBaseComponent } from './po-advanced-filter-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@po-ui/ng-components";
/**
 * @docsPrivate
 *
 * @docsExtends PoAdvancedFilterBaseComponent
 *
 * @examplePrivate
 *
 * <example-private name="po-advanced-filter" title="PO Busca Avançada">
 *   <file name="sample-po-advanced-filter.component.html"> </file>
 *   <file name="sample-po-advanced-filter.component.ts"> </file>
 * </example-private>
 */
export class PoAdvancedFilterComponent extends PoAdvancedFilterBaseComponent {
    poDynamicForm;
    subscription = new Subscription();
    constructor(languageService) {
        super(languageService);
    }
    ngOnInit() {
        this.optionsServiceSubscribe();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    open() {
        this.filter = this.keepFilters ? this.getInitialValuesFromFilter(this.filters) : {};
        this.poModal.open();
    }
    getOptionsServiceItem(optionServiceObject) {
        const objectItem = this.optionsServiceChosenOptions.map(option => option.value).indexOf(optionServiceObject.value);
        if (objectItem === -1) {
            this.optionsServiceChosenOptions = [...this.optionsServiceChosenOptions, optionServiceObject];
        }
    }
    getInitialValuesFromFilter(filters) {
        return filters.reduce((result, item) => Object.assign(result, { [item.property]: item.initValue }), {});
    }
    // Se inscreve para receber valores referentes a campos do tipo combo.
    optionsServiceSubscribe() {
        this.subscription.add(this.poDynamicForm.getObjectValue().subscribe(optionServiceObject => {
            if (optionServiceObject) {
                this.getOptionsServiceItem(optionServiceObject);
            }
        }));
    }
    static ɵfac = function PoAdvancedFilterComponent_Factory(t) { return new (t || PoAdvancedFilterComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoAdvancedFilterComponent, selectors: [["po-advanced-filter"]], viewQuery: function PoAdvancedFilterComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(PoDynamicFormComponent, 7);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.poDynamicForm = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [["p-hide-close", "", 3, "p-primary-action", "p-secondary-action", "p-title"], [3, "p-fields", "p-value"]], template: function PoAdvancedFilterComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "po-modal", 0);
            i0.ɵɵelement(1, "po-dynamic-form", 1);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵproperty("p-primary-action", ctx.primaryAction)("p-secondary-action", ctx.secondaryAction)("p-title", ctx.literals.title);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-fields", ctx.filters)("p-value", ctx.filter);
        } }, dependencies: [i1.PoDynamicFormComponent, i1.PoModalComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoAdvancedFilterComponent, [{
        type: Component,
        args: [{ selector: 'po-advanced-filter', template: "<po-modal\n  p-hide-close\n  [p-primary-action]=\"primaryAction\"\n  [p-secondary-action]=\"secondaryAction\"\n  [p-title]=\"literals.title\"\n>\n  <po-dynamic-form [p-fields]=\"filters\" [p-value]=\"filter\"> </po-dynamic-form>\n</po-modal>\n" }]
    }], () => [{ type: i1.PoLanguageService }], { poDynamicForm: [{
            type: ViewChild,
            args: [PoDynamicFormComponent, { static: true }]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoAdvancedFilterComponent, { className: "PoAdvancedFilterComponent", filePath: "lib/components/po-page-dynamic-search/po-advanced-filter/po-advanced-filter.component.ts", lineNumber: 25 }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWR2YW5jZWQtZmlsdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RlbXBsYXRlcy9zcmMvbGliL2NvbXBvbmVudHMvcG8tcGFnZS1keW5hbWljLXNlYXJjaC9wby1hZHZhbmNlZC1maWx0ZXIvcG8tYWR2YW5jZWQtZmlsdGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RlbXBsYXRlcy9zcmMvbGliL2NvbXBvbmVudHMvcG8tcGFnZS1keW5hbWljLXNlYXJjaC9wby1hZHZhbmNlZC1maWx0ZXIvcG8tYWR2YW5jZWQtZmlsdGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXFCLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXBDLE9BQU8sRUFBaUIsc0JBQXNCLEVBQXFCLE1BQU0sc0JBQXNCLENBQUM7QUFFaEcsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUNBQXFDLENBQUM7OztBQUdwRjs7Ozs7Ozs7Ozs7R0FXRztBQUtILE1BQU0sT0FBTyx5QkFBMEIsU0FBUSw2QkFBNkI7SUFDckIsYUFBYSxDQUF5QjtJQUVuRixZQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUUxQyxZQUFZLGVBQWtDO1FBQzVDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSTtRQUNGLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBRXBGLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVPLHFCQUFxQixDQUFDLG1CQUFrQztRQUM5RCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsMkJBQTJCLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVuSCxJQUFJLFVBQVUsS0FBSyxDQUFDLENBQUMsRUFBRTtZQUNyQixJQUFJLENBQUMsMkJBQTJCLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQywyQkFBMkIsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1NBQy9GO0lBQ0gsQ0FBQztJQUVPLDBCQUEwQixDQUFDLE9BQTBDO1FBQzNFLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDMUcsQ0FBQztJQUVELHNFQUFzRTtJQUM5RCx1QkFBdUI7UUFDN0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQ25CLElBQUksQ0FBQyxhQUFhLENBQUMsY0FBYyxFQUFFLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLEVBQUU7WUFDbEUsSUFBSSxtQkFBbUIsRUFBRTtnQkFDdkIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLG1CQUFtQixDQUFDLENBQUM7YUFDakQ7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQzttRkE1Q1UseUJBQXlCOzZEQUF6Qix5QkFBeUI7MkJBQ3pCLHNCQUFzQjs7Ozs7WUN6Qm5DLG1DQUtDO1lBQ0MscUNBQTRFO1lBQzlFLGlCQUFXOztZQUxULG9EQUFrQywyQ0FBQSwrQkFBQTtZQUlqQixjQUFvQjtZQUFwQixzQ0FBb0IsdUJBQUE7OztpRkRrQjFCLHlCQUF5QjtjQUpyQyxTQUFTOzJCQUNFLG9CQUFvQjtrREFJdUIsYUFBYTtrQkFBakUsU0FBUzttQkFBQyxzQkFBc0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7O2tGQUR4Qyx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSwgT25Jbml0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb0NvbWJvT3B0aW9uLCBQb0R5bmFtaWNGb3JtQ29tcG9uZW50LCBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgUG9BZHZhbmNlZEZpbHRlckJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWFkdmFuY2VkLWZpbHRlci1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1BhZ2VEeW5hbWljU2VhcmNoRmlsdGVycyB9IGZyb20gJy4uL3BvLXBhZ2UtZHluYW1pYy1zZWFyY2gtZmlsdGVycy5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkb2NzRXh0ZW5kcyBQb0FkdmFuY2VkRmlsdGVyQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlUHJpdmF0ZVxuICpcbiAqIDxleGFtcGxlLXByaXZhdGUgbmFtZT1cInBvLWFkdmFuY2VkLWZpbHRlclwiIHRpdGxlPVwiUE8gQnVzY2EgQXZhbsOnYWRhXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWR2YW5jZWQtZmlsdGVyLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hZHZhbmNlZC1maWx0ZXIuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZS1wcml2YXRlPlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1hZHZhbmNlZC1maWx0ZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tYWR2YW5jZWQtZmlsdGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0FkdmFuY2VkRmlsdGVyQ29tcG9uZW50IGV4dGVuZHMgUG9BZHZhbmNlZEZpbHRlckJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gIEBWaWV3Q2hpbGQoUG9EeW5hbWljRm9ybUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgcG9EeW5hbWljRm9ybTogUG9EeW5hbWljRm9ybUNvbXBvbmVudDtcblxuICBwcml2YXRlIHN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcblxuICBjb25zdHJ1Y3RvcihsYW5ndWFnZVNlcnZpY2U6IFBvTGFuZ3VhZ2VTZXJ2aWNlKSB7XG4gICAgc3VwZXIobGFuZ3VhZ2VTZXJ2aWNlKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMub3B0aW9uc1NlcnZpY2VTdWJzY3JpYmUoKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuZmlsdGVyID0gdGhpcy5rZWVwRmlsdGVycyA/IHRoaXMuZ2V0SW5pdGlhbFZhbHVlc0Zyb21GaWx0ZXIodGhpcy5maWx0ZXJzKSA6IHt9O1xuXG4gICAgdGhpcy5wb01vZGFsLm9wZW4oKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0T3B0aW9uc1NlcnZpY2VJdGVtKG9wdGlvblNlcnZpY2VPYmplY3Q6IFBvQ29tYm9PcHRpb24pIHtcbiAgICBjb25zdCBvYmplY3RJdGVtID0gdGhpcy5vcHRpb25zU2VydmljZUNob3Nlbk9wdGlvbnMubWFwKG9wdGlvbiA9PiBvcHRpb24udmFsdWUpLmluZGV4T2Yob3B0aW9uU2VydmljZU9iamVjdC52YWx1ZSk7XG5cbiAgICBpZiAob2JqZWN0SXRlbSA9PT0gLTEpIHtcbiAgICAgIHRoaXMub3B0aW9uc1NlcnZpY2VDaG9zZW5PcHRpb25zID0gWy4uLnRoaXMub3B0aW9uc1NlcnZpY2VDaG9zZW5PcHRpb25zLCBvcHRpb25TZXJ2aWNlT2JqZWN0XTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldEluaXRpYWxWYWx1ZXNGcm9tRmlsdGVyKGZpbHRlcnM6IEFycmF5PFBvUGFnZUR5bmFtaWNTZWFyY2hGaWx0ZXJzPikge1xuICAgIHJldHVybiBmaWx0ZXJzLnJlZHVjZSgocmVzdWx0LCBpdGVtKSA9PiBPYmplY3QuYXNzaWduKHJlc3VsdCwgeyBbaXRlbS5wcm9wZXJ0eV06IGl0ZW0uaW5pdFZhbHVlIH0pLCB7fSk7XG4gIH1cblxuICAvLyBTZSBpbnNjcmV2ZSBwYXJhIHJlY2ViZXIgdmFsb3JlcyByZWZlcmVudGVzIGEgY2FtcG9zIGRvIHRpcG8gY29tYm8uXG4gIHByaXZhdGUgb3B0aW9uc1NlcnZpY2VTdWJzY3JpYmUoKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb24uYWRkKFxuICAgICAgdGhpcy5wb0R5bmFtaWNGb3JtLmdldE9iamVjdFZhbHVlKCkuc3Vic2NyaWJlKG9wdGlvblNlcnZpY2VPYmplY3QgPT4ge1xuICAgICAgICBpZiAob3B0aW9uU2VydmljZU9iamVjdCkge1xuICAgICAgICAgIHRoaXMuZ2V0T3B0aW9uc1NlcnZpY2VJdGVtKG9wdGlvblNlcnZpY2VPYmplY3QpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiIsIjxwby1tb2RhbFxuICBwLWhpZGUtY2xvc2VcbiAgW3AtcHJpbWFyeS1hY3Rpb25dPVwicHJpbWFyeUFjdGlvblwiXG4gIFtwLXNlY29uZGFyeS1hY3Rpb25dPVwic2Vjb25kYXJ5QWN0aW9uXCJcbiAgW3AtdGl0bGVdPVwibGl0ZXJhbHMudGl0bGVcIlxuPlxuICA8cG8tZHluYW1pYy1mb3JtIFtwLWZpZWxkc109XCJmaWx0ZXJzXCIgW3AtdmFsdWVdPVwiZmlsdGVyXCI+IDwvcG8tZHluYW1pYy1mb3JtPlxuPC9wby1tb2RhbD5cbiJdfQ==