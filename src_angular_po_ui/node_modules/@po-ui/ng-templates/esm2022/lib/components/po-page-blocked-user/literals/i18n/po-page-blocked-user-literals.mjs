export const poPageBlockedUserLiterals = {
    none: {
        pt: {
            title: 'Opa!',
            firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',
            secondPhrase: 'Mas não se preocupe! Basta fazer seu login novamente.'
        },
        en: {
            title: 'Oops!',
            firstPhrase: 'We had to temporarily block this screen.',
            secondPhrase: 'But do not worry! Just sign in again.'
        },
        es: {
            title: 'Opa!',
            firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',
            secondPhrase: '¡Pero no se preocupe! Sólo tienes que iniciar sesión de nuevo.'
        },
        ru: {
            title: 'Ой!',
            firstPhrase: 'Нам пришлось временно заблокировать этот раздел.',
            secondPhrase: 'Но не волнуйтесь! Просто войдите в систему еще раз.'
        }
    },
    exceededAttempts: {
        pt: {
            title: 'Opa!',
            firstPhrase: `Para sua segurança, após {0} tentativa(s) de senha seu usuário fica bloqueado e não pode ser acessado em {1} hora(s) :( `,
            secondPhrase: 'Isso é para evitar que hackers invadam sua conta.',
            thirdPhrase: 'Mas não se preocupe! Se você for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'
        },
        en: {
            title: 'Oops!',
            firstPhrase: `For your security, after {0} attempt(s) of password
        your user gets blocked and can not be accessed in {1} hour(s) :(`,
            secondPhrase: 'This is to prevent hackers from hacking into your account.',
            thirdPhrase: 'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'
        },
        es: {
            title: 'Opa!',
            firstPhrase: `Para su seguridad, después de {0} intento(s) de contraseña
        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(`,
            secondPhrase: 'Esto es para evitar que los hackers invadan su cuenta.',
            thirdPhrase: `¡Pero no se preocupe! Si usted es el dueño de la cuenta
        y acaba de olvidar su contraseña, simplemente póngase en contacto con el soporte.`
        },
        ru: {
            title: 'Ой!',
            firstPhrase: 'Для вашей безопасности, после {0} попыток ввода пароля\r\nваш пользователь блокируется и не сможет авторизоваться в течение {1} часа(ов) :(',
            secondPhrase: 'Это делается для того, чтобы хакеры не могли взломать ваш аккаунт.',
            thirdPhrase: 'Но не волнуйтесь! Если вы являетесь владельцем учетной записи и просто забыли свой пароль, обратитесь в службу поддержки.'
        }
    },
    expiredPassword: {
        pt: {
            title: 'Opa! Sua senha expirou',
            firstPhrase: `A cada {0} dia(s) é preciso criar uma nova senha por questão de segurança. Após esses {0} dia(s) seu acesso é bloqueado :(`,
            secondPhrase: 'Mas não se preocupe! Basta entrar em contato com o administrador do sistema.'
        },
        en: {
            title: 'Oops! Your Password has expired',
            firstPhrase: `Every {0} day(s) you need to create a new password for security reasons.
        After these {0} day(s) your access is blocked :(`,
            secondPhrase: 'But do not worry! Just contact your system administrator.'
        },
        es: {
            title: 'Opa! Su contraseña ha caducado',
            firstPhrase: `Cada {0} día(s) es necesario crear una nueva contraseña por razones de seguridad.
        Después de estos {0} día(s) su acceso está bloqueado :(`,
            secondPhrase: '¡Pero no se preocupe! Sólo tienes que ponerse en contacto con el administrador del sistema.'
        },
        ru: {
            title: 'Ой! Срок действия вашего пароля истек',
            firstPhrase: 'Каждые {0} дней вам необходимо создавать новый пароль в целях безопасности.\r\nПосле {0} дней ваш доступ будет заблокирован :(',
            secondPhrase: 'Но не волнуйтесь! Просто обратитесь к своему системному администратору.'
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1ibG9ja2VkLXVzZXItbGl0ZXJhbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90ZW1wbGF0ZXMvc3JjL2xpYi9jb21wb25lbnRzL3BvLXBhZ2UtYmxvY2tlZC11c2VyL2xpdGVyYWxzL2kxOG4vcG8tcGFnZS1ibG9ja2VkLXVzZXItbGl0ZXJhbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUc7SUFDdkMsSUFBSSxFQUFFO1FBQ0osRUFBRSxFQUFFO1lBQ0YsS0FBSyxFQUFFLE1BQU07WUFDYixXQUFXLEVBQUUsaURBQWlEO1lBQzlELFlBQVksRUFBRSx1REFBdUQ7U0FDdEU7UUFDRCxFQUFFLEVBQUU7WUFDRixLQUFLLEVBQUUsT0FBTztZQUNkLFdBQVcsRUFBRSwwQ0FBMEM7WUFDdkQsWUFBWSxFQUFFLHVDQUF1QztTQUN0RDtRQUNELEVBQUUsRUFBRTtZQUNGLEtBQUssRUFBRSxNQUFNO1lBQ2IsV0FBVyxFQUFFLG1EQUFtRDtZQUNoRSxZQUFZLEVBQUUsZ0VBQWdFO1NBQy9FO1FBQ0QsRUFBRSxFQUFFO1lBQ0YsS0FBSyxFQUFFLEtBQUs7WUFDWixXQUFXLEVBQUUsa0RBQWtEO1lBQy9ELFlBQVksRUFBRSxxREFBcUQ7U0FDcEU7S0FDRjtJQUNELGdCQUFnQixFQUFFO1FBQ2hCLEVBQUUsRUFBRTtZQUNGLEtBQUssRUFBRSxNQUFNO1lBQ2IsV0FBVyxFQUFFLDBIQUEwSDtZQUN2SSxZQUFZLEVBQUUsbURBQW1EO1lBQ2pFLFdBQVcsRUFDVCxzSEFBc0g7U0FDekg7UUFDRCxFQUFFLEVBQUU7WUFDRixLQUFLLEVBQUUsT0FBTztZQUNkLFdBQVcsRUFBRTt5RUFDc0Q7WUFDbkUsWUFBWSxFQUFFLDREQUE0RDtZQUMxRSxXQUFXLEVBQ1QsNEdBQTRHO1NBQy9HO1FBQ0QsRUFBRSxFQUFFO1lBQ0YsS0FBSyxFQUFFLE1BQU07WUFDYixXQUFXLEVBQUU7NkVBQzBEO1lBQ3ZFLFlBQVksRUFBRSx3REFBd0Q7WUFDdEUsV0FBVyxFQUFFOzBGQUN1RTtTQUNyRjtRQUNELEVBQUUsRUFBRTtZQUNGLEtBQUssRUFBRSxLQUFLO1lBQ1osV0FBVyxFQUNULDZJQUE2STtZQUMvSSxZQUFZLEVBQUUsb0VBQW9FO1lBQ2xGLFdBQVcsRUFDVCwySEFBMkg7U0FDOUg7S0FDRjtJQUNELGVBQWUsRUFBRTtRQUNmLEVBQUUsRUFBRTtZQUNGLEtBQUssRUFBRSx3QkFBd0I7WUFDL0IsV0FBVyxFQUFFLDRIQUE0SDtZQUN6SSxZQUFZLEVBQUUsOEVBQThFO1NBQzdGO1FBQ0QsRUFBRSxFQUFFO1lBQ0YsS0FBSyxFQUFFLGlDQUFpQztZQUN4QyxXQUFXLEVBQUU7eURBQ3NDO1lBQ25ELFlBQVksRUFBRSwyREFBMkQ7U0FDMUU7UUFDRCxFQUFFLEVBQUU7WUFDRixLQUFLLEVBQUUsZ0NBQWdDO1lBQ3ZDLFdBQVcsRUFBRTtnRUFDNkM7WUFDMUQsWUFBWSxFQUFFLDZGQUE2RjtTQUM1RztRQUNELEVBQUUsRUFBRTtZQUNGLEtBQUssRUFBRSx1Q0FBdUM7WUFDOUMsV0FBVyxFQUNULGdJQUFnSTtZQUNsSSxZQUFZLEVBQUUseUVBQXlFO1NBQ3hGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBvUGFnZUJsb2NrZWRVc2VyTGl0ZXJhbHMgPSB7XG4gIG5vbmU6IHtcbiAgICBwdDoge1xuICAgICAgdGl0bGU6ICdPcGEhJyxcbiAgICAgIGZpcnN0UGhyYXNlOiAnVGl2ZW1vcyBxdWUgYmxvcXVlYXIgZXNzYSB0ZWxhIHRlbXBvcmFyaWFtZW50ZS4nLFxuICAgICAgc2Vjb25kUGhyYXNlOiAnTWFzIG7Do28gc2UgcHJlb2N1cGUhIEJhc3RhIGZhemVyIHNldSBsb2dpbiBub3ZhbWVudGUuJ1xuICAgIH0sXG4gICAgZW46IHtcbiAgICAgIHRpdGxlOiAnT29wcyEnLFxuICAgICAgZmlyc3RQaHJhc2U6ICdXZSBoYWQgdG8gdGVtcG9yYXJpbHkgYmxvY2sgdGhpcyBzY3JlZW4uJyxcbiAgICAgIHNlY29uZFBocmFzZTogJ0J1dCBkbyBub3Qgd29ycnkhIEp1c3Qgc2lnbiBpbiBhZ2Fpbi4nXG4gICAgfSxcbiAgICBlczoge1xuICAgICAgdGl0bGU6ICdPcGEhJyxcbiAgICAgIGZpcnN0UGhyYXNlOiAnVHV2aW1vcyBxdWUgYmxvcXVlYXIgZXN0YSBwYW50YWxsYSB0ZW1wb3JhbG1lbnRlLicsXG4gICAgICBzZWNvbmRQaHJhc2U6ICfCoVBlcm8gbm8gc2UgcHJlb2N1cGUhIFPDs2xvIHRpZW5lcyBxdWUgaW5pY2lhciBzZXNpw7NuIGRlIG51ZXZvLidcbiAgICB9LFxuICAgIHJ1OiB7XG4gICAgICB0aXRsZTogJ9Ce0LkhJyxcbiAgICAgIGZpcnN0UGhyYXNlOiAn0J3QsNC8INC/0YDQuNGI0LvQvtGB0Ywg0LLRgNC10LzQtdC90L3QviDQt9Cw0LHQu9C+0LrQuNGA0L7QstCw0YLRjCDRjdGC0L7RgiDRgNCw0LfQtNC10LsuJyxcbiAgICAgIHNlY29uZFBocmFzZTogJ9Cd0L4g0L3QtSDQstC+0LvQvdGD0LnRgtC10YHRjCEg0J/RgNC+0YHRgtC+INCy0L7QudC00LjRgtC1INCyINGB0LjRgdGC0LXQvNGDINC10YnQtSDRgNCw0LcuJ1xuICAgIH1cbiAgfSxcbiAgZXhjZWVkZWRBdHRlbXB0czoge1xuICAgIHB0OiB7XG4gICAgICB0aXRsZTogJ09wYSEnLFxuICAgICAgZmlyc3RQaHJhc2U6IGBQYXJhIHN1YSBzZWd1cmFuw6dhLCBhcMOzcyB7MH0gdGVudGF0aXZhKHMpIGRlIHNlbmhhIHNldSB1c3XDoXJpbyBmaWNhIGJsb3F1ZWFkbyBlIG7Do28gcG9kZSBzZXIgYWNlc3NhZG8gZW0gezF9IGhvcmEocykgOiggYCxcbiAgICAgIHNlY29uZFBocmFzZTogJ0lzc28gw6kgcGFyYSBldml0YXIgcXVlIGhhY2tlcnMgaW52YWRhbSBzdWEgY29udGEuJyxcbiAgICAgIHRoaXJkUGhyYXNlOlxuICAgICAgICAnTWFzIG7Do28gc2UgcHJlb2N1cGUhIFNlIHZvY8OqIGZvciBvIGRvbm8gZGEgY29udGEgZSBhcGVuYXMgZXNxdWVjZXUgc3VhIHNlbmhhLCBiYXN0YSBlbnRyYXIgZW0gY29udGF0byBjb20gbyBzdXBvcnRlLidcbiAgICB9LFxuICAgIGVuOiB7XG4gICAgICB0aXRsZTogJ09vcHMhJyxcbiAgICAgIGZpcnN0UGhyYXNlOiBgRm9yIHlvdXIgc2VjdXJpdHksIGFmdGVyIHswfSBhdHRlbXB0KHMpIG9mIHBhc3N3b3JkXG4gICAgICAgIHlvdXIgdXNlciBnZXRzIGJsb2NrZWQgYW5kIGNhbiBub3QgYmUgYWNjZXNzZWQgaW4gezF9IGhvdXIocykgOihgLFxuICAgICAgc2Vjb25kUGhyYXNlOiAnVGhpcyBpcyB0byBwcmV2ZW50IGhhY2tlcnMgZnJvbSBoYWNraW5nIGludG8geW91ciBhY2NvdW50LicsXG4gICAgICB0aGlyZFBocmFzZTpcbiAgICAgICAgJ0J1dCBkbyBub3Qgd29ycnkhIElmIHlvdSBhcmUgdGhlIG93bmVyIG9mIHRoZSBhY2NvdW50IGFuZCBqdXN0IGZvcmdvdCB5b3VyIHBhc3N3b3JkLCBqdXN0IGNvbnRhY3Qgc3VwcG9ydC4nXG4gICAgfSxcbiAgICBlczoge1xuICAgICAgdGl0bGU6ICdPcGEhJyxcbiAgICAgIGZpcnN0UGhyYXNlOiBgUGFyYSBzdSBzZWd1cmlkYWQsIGRlc3B1w6lzIGRlIHswfSBpbnRlbnRvKHMpIGRlIGNvbnRyYXNlw7FhXG4gICAgICAgIHN1IHVzdWFyaW8gcXVlZGEgYmxvcXVlYWRvIHkgbm8gcHVlZGUgc2VyIGFjY2VkaWRvIGVuIHsxfSBob3JhKHMpIDooYCxcbiAgICAgIHNlY29uZFBocmFzZTogJ0VzdG8gZXMgcGFyYSBldml0YXIgcXVlIGxvcyBoYWNrZXJzIGludmFkYW4gc3UgY3VlbnRhLicsXG4gICAgICB0aGlyZFBocmFzZTogYMKhUGVybyBubyBzZSBwcmVvY3VwZSEgU2kgdXN0ZWQgZXMgZWwgZHVlw7FvIGRlIGxhIGN1ZW50YVxuICAgICAgICB5IGFjYWJhIGRlIG9sdmlkYXIgc3UgY29udHJhc2XDsWEsIHNpbXBsZW1lbnRlIHDDs25nYXNlIGVuIGNvbnRhY3RvIGNvbiBlbCBzb3BvcnRlLmBcbiAgICB9LFxuICAgIHJ1OiB7XG4gICAgICB0aXRsZTogJ9Ce0LkhJyxcbiAgICAgIGZpcnN0UGhyYXNlOlxuICAgICAgICAn0JTQu9GPINCy0LDRiNC10Lkg0LHQtdC30L7Qv9Cw0YHQvdC+0YHRgtC4LCDQv9C+0YHQu9C1IHswfSDQv9C+0L/Ri9GC0L7QuiDQstCy0L7QtNCwINC/0LDRgNC+0LvRj1xcclxcbtCy0LDRiCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LHQu9C+0LrQuNGA0YPQtdGC0YHRjyDQuCDQvdC1INGB0LzQvtC20LXRgiDQsNCy0YLQvtGA0LjQt9C+0LLQsNGC0YzRgdGPINCyINGC0LXRh9C10L3QuNC1IHsxfSDRh9Cw0YHQsCjQvtCyKSA6KCcsXG4gICAgICBzZWNvbmRQaHJhc2U6ICfQrdGC0L4g0LTQtdC70LDQtdGC0YHRjyDQtNC70Y8g0YLQvtCz0L4sINGH0YLQvtCx0Ysg0YXQsNC60LXRgNGLINC90LUg0LzQvtCz0LvQuCDQstC30LvQvtC80LDRgtGMINCy0LDRiCDQsNC60LrQsNGD0L3Rgi4nLFxuICAgICAgdGhpcmRQaHJhc2U6XG4gICAgICAgICfQndC+INC90LUg0LLQvtC70L3Rg9C50YLQtdGB0YwhINCV0YHQu9C4INCy0Ysg0Y/QstC70Y/QtdGC0LXRgdGMINCy0LvQsNC00LXQu9GM0YbQtdC8INGD0YfQtdGC0L3QvtC5INC30LDQv9C40YHQuCDQuCDQv9GA0L7RgdGC0L4g0LfQsNCx0YvQu9C4INGB0LLQvtC5INC/0LDRgNC+0LvRjCwg0L7QsdGA0LDRgtC40YLQtdGB0Ywg0LIg0YHQu9GD0LbQsdGDINC/0L7QtNC00LXRgNC20LrQuC4nXG4gICAgfVxuICB9LFxuICBleHBpcmVkUGFzc3dvcmQ6IHtcbiAgICBwdDoge1xuICAgICAgdGl0bGU6ICdPcGEhIFN1YSBzZW5oYSBleHBpcm91JyxcbiAgICAgIGZpcnN0UGhyYXNlOiBgQSBjYWRhIHswfSBkaWEocykgw6kgcHJlY2lzbyBjcmlhciB1bWEgbm92YSBzZW5oYSBwb3IgcXVlc3TDo28gZGUgc2VndXJhbsOnYS4gQXDDs3MgZXNzZXMgezB9IGRpYShzKSBzZXUgYWNlc3NvIMOpIGJsb3F1ZWFkbyA6KGAsXG4gICAgICBzZWNvbmRQaHJhc2U6ICdNYXMgbsOjbyBzZSBwcmVvY3VwZSEgQmFzdGEgZW50cmFyIGVtIGNvbnRhdG8gY29tIG8gYWRtaW5pc3RyYWRvciBkbyBzaXN0ZW1hLidcbiAgICB9LFxuICAgIGVuOiB7XG4gICAgICB0aXRsZTogJ09vcHMhIFlvdXIgUGFzc3dvcmQgaGFzIGV4cGlyZWQnLFxuICAgICAgZmlyc3RQaHJhc2U6IGBFdmVyeSB7MH0gZGF5KHMpIHlvdSBuZWVkIHRvIGNyZWF0ZSBhIG5ldyBwYXNzd29yZCBmb3Igc2VjdXJpdHkgcmVhc29ucy5cbiAgICAgICAgQWZ0ZXIgdGhlc2UgezB9IGRheShzKSB5b3VyIGFjY2VzcyBpcyBibG9ja2VkIDooYCxcbiAgICAgIHNlY29uZFBocmFzZTogJ0J1dCBkbyBub3Qgd29ycnkhIEp1c3QgY29udGFjdCB5b3VyIHN5c3RlbSBhZG1pbmlzdHJhdG9yLidcbiAgICB9LFxuICAgIGVzOiB7XG4gICAgICB0aXRsZTogJ09wYSEgU3UgY29udHJhc2XDsWEgaGEgY2FkdWNhZG8nLFxuICAgICAgZmlyc3RQaHJhc2U6IGBDYWRhIHswfSBkw61hKHMpIGVzIG5lY2VzYXJpbyBjcmVhciB1bmEgbnVldmEgY29udHJhc2XDsWEgcG9yIHJhem9uZXMgZGUgc2VndXJpZGFkLlxuICAgICAgICBEZXNwdcOpcyBkZSBlc3RvcyB7MH0gZMOtYShzKSBzdSBhY2Nlc28gZXN0w6EgYmxvcXVlYWRvIDooYCxcbiAgICAgIHNlY29uZFBocmFzZTogJ8KhUGVybyBubyBzZSBwcmVvY3VwZSEgU8OzbG8gdGllbmVzIHF1ZSBwb25lcnNlIGVuIGNvbnRhY3RvIGNvbiBlbCBhZG1pbmlzdHJhZG9yIGRlbCBzaXN0ZW1hLidcbiAgICB9LFxuICAgIHJ1OiB7XG4gICAgICB0aXRsZTogJ9Ce0LkhINCh0YDQvtC6INC00LXQudGB0YLQstC40Y8g0LLQsNGI0LXQs9C+INC/0LDRgNC+0LvRjyDQuNGB0YLQtdC6JyxcbiAgICAgIGZpcnN0UGhyYXNlOlxuICAgICAgICAn0JrQsNC20LTRi9C1IHswfSDQtNC90LXQuSDQstCw0Lwg0L3QtdC+0LHRhdC+0LTQuNC80L4g0YHQvtC30LTQsNCy0LDRgtGMINC90L7QstGL0Lkg0L/QsNGA0L7Qu9GMINCyINGG0LXQu9GP0YUg0LHQtdC30L7Qv9Cw0YHQvdC+0YHRgtC4LlxcclxcbtCf0L7RgdC70LUgezB9INC00L3QtdC5INCy0LDRiCDQtNC+0YHRgtGD0L8g0LHRg9C00LXRgiDQt9Cw0LHQu9C+0LrQuNGA0L7QstCw0L0gOignLFxuICAgICAgc2Vjb25kUGhyYXNlOiAn0J3QviDQvdC1INCy0L7Qu9C90YPQudGC0LXRgdGMISDQn9GA0L7RgdGC0L4g0L7QsdGA0LDRgtC40YLQtdGB0Ywg0Log0YHQstC+0LXQvNGDINGB0LjRgdGC0LXQvNC90L7QvNGDINCw0LTQvNC40L3QuNGB0YLRgNCw0YLQvtGA0YMuJ1xuICAgIH1cbiAgfVxufTtcbiJdfQ==