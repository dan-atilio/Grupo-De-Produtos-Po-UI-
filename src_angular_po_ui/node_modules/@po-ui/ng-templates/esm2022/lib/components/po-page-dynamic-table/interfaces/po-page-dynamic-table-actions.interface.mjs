export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"po-page-dynamic-table-actions.interface.js","sourceRoot":"","sources":["../../../../../../../projects/templates/src/lib/components/po-page-dynamic-table/interfaces/po-page-dynamic-table-actions.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { PoPageDynamicTableBeforeEdit } from './po-page-dynamic-table-before-edit.interface';\nimport { PoPageDynamicTableBeforeNew } from './po-page-dynamic-table-before-new.interface';\nimport { PoPageDynamicTableBeforeRemove } from './po-page-dynamic-table-before-remove.interface';\nimport { PoPageDynamicTableBeforeDetail } from './po-page-dynamic-table-before-detail.interface';\nimport { PoPageDynamicTableBeforeDuplicate } from './po-page-dynamic-table-before-duplicate.interface';\nimport { PoPageDynamicTableBeforeRemoveAll } from './po-page-dynamic-table-before-remove-all.interface';\n\n/**\n * @usedBy PoPageDynamicTableComponent\n *\n * @description\n *\n * Interface para as ações do componente po-page-dynamic-table.\n */\nexport interface PoPageDynamicTableActions {\n  /**\n   * @description\n   *\n   * Rota ou função para exibição do recurso em detalhe, caso seja preenchida irá habilitar a ação de visualização na tabela.\n   *\n   * > A rota deve conter um parâmetro chamando id.\n   *\n   * ```\n   * actions = {\n   *   detail: 'detail/:id'\n   * };\n   * ```\n   */\n  detail?: string | ((id: string, resource: any) => void);\n\n  /**\n   * @description\n   *\n   * Rota ou método que será chamado antes de duplicar um recurso (duplicate). O método recebe os parâmetros `key` e também um objeto com as propriedades marcadas com `duplicate: true`.\n   *\n   * Tanto o método como a API devem retornar um objeto com a definição de `PoPageDynamicTableBeforeDuplicate`.\n   *\n   * > A url será chamada via POST junto com a key especificada no metadata, por exemplo: `POST {beforeDuplicate}/{key}`.\n   *\n   * Caso o desenvolvedor queira que apareça alguma mensagem nessa ação ele pode criá-la na função chamada pela **beforeDuplicate**\n   * ou definir a mensagem no atributo `_messages` na resposta da API conforme definido\n   * em [Guia de implementação de APIs](https://po-ui.io/guides/api#successMessages)\n   */\n  beforeDuplicate?: string | ((key: string, resource: any) => PoPageDynamicTableBeforeDuplicate);\n\n  /**\n   * @description\n   *\n   * Rota ou função para duplicação do recurso, caso seja preenchida irá habilitar a ação de duplicação na tabela.\n   *\n   * > Os valores a serem duplicados serão enviados via query string, exceto para aqueles definidos como `key: true` no metadata.\n   *\n   * ```\n   * actions = {\n   *   duplicate: 'duplicate'\n   * };\n   * ```\n   *\n   * Se for passado um método:\n   *  - receberá como parâmetro na chamada do método um objeto com as propriedades marcadas com `duplicate: true`, exceto para aquelas definidas como `key: true` no metadata.\n   *  - é responsabilidade do desenvolvedor implementar a navegação e/ou envio dos dados\n   * para o servidor ou outro comportamento desejado.\n   */\n  duplicate?: string | ((resource: any) => void);\n\n  /**\n   * @description\n   *\n   * Rota ou método que será chamado antes de editar um recurso (edit).\n   *\n   * Tanto o método como a API devem retornar um objeto com a definição de `PoPageDynamicTableBeforeEdit`.\n   *\n   * > A url será chamada via POST junto com a key especificada no metadata, por exemplo: `POST {beforeEdit}/{key}`.\n   *\n   * Caso o desenvolvedor queira que apareça alguma mensagem nessa ação ele pode criá-la na função chamada pela **beforeEdit**\n   * ou definir a mensagem no atributo `_messages` na resposta da API conforme definido\n   * em [Guia de implementação de APIs](https://po-ui.io/guides/api#successMessages)\n   */\n  beforeEdit?: string | ((id: any, resource: any) => PoPageDynamicTableBeforeEdit);\n\n  /**\n   * @description\n   *\n   * Rota ou função para edição do recurso, caso seja preenchida irá habilitar a ação de edição na tabela.\n   *\n   * > A rota deve conter um parâmetro chamando id.\n   *\n   * ```\n   * actions = {\n   *   edit: 'edit/:id'\n   * };\n   * ```\n   *\n   * Na função pode ser retornado um objeto representando o recurso modificado.\n   * Dessa forma será atualizada a linha da tabela que está sendo editada. Essa opção não abrange campos configurados com `key: true`.\n   *\n   * > Se passada uma função, é responsabilidade do desenvolvedor implementar a navegação, edição ou outro comportamento desejado.\n   */\n  edit?: string | ((id: string, resource: any) => { [key: string]: any });\n\n  /**\n   * @description\n   *\n   * Rota ou função para criar um novo recurso, caso seja preenchida sera exibido uma ação no topo da página.\n   *\n   * ```\n   * actions = {\n   *   new: 'new'\n   * };\n   * ```\n   */\n  new?: string | Function;\n\n  /** Habilita a ação de exclusão na tabela. */\n  remove?: boolean | ((id: string, resource: any) => boolean);\n\n  /** Habilita a ação de exclusão em lote na página.\n   *\n   * Se for um valor boolean terá o seguinte comportamento:\n   * - `true`: Habilita o botão para exclusão em lote e caso o usuário confirme\n   * a ação irá enviar os recursos selecionados para a rota configurada\n   *\n   * - `false`: Desabilita o botão\n   *\n   * Se o valor for uma função o botão irá aparecer na tela e caso confirme\n   * a função passada será responsável por tratar a exclusão dos recursos\n   * no back-end e retornar um array com os itens que serão excluídos da tabela.\n   *\n   * A lista de itens deve ser construída com todas as propriedades\n   * marcadas com o atributo `key: true` na sua definição das colunas.\n   *\n   * Por exemplo:\n   * - Recursos com as propriedades id e name definidas como *key*:\n   * ```\n   * [{ id: 1, name: 'Mario' },{ id: 2, name: 'Gabriel' }]\n   * ```\n   *\n   */\n  removeAll?: boolean | ((resources: Array<any>) => Array<any>);\n\n  /**\n   * @description\n   *\n   *  Método/URL que deve ser chamado antes da ação de inclusão\n   *\n   * Tanto o método como a API devem retornar um objeto com a definição de `PoPageDynamicTableBeforeNew`.\n   *\n   * > A url será chamada via POST\n   *\n   * Caso o desenvolvedor queira que apareça alguma mensagem nessa ação ele pode criá-la na função chamada pela **beforeNew**\n   * ou definir a mensagem no atributo `_messages` na resposta da API conforme definido\n   * em [Guia de implementação de APIs](https://po-ui.io/guides/api#successMessages)\n   *\n   */\n  beforeNew?: string | (() => PoPageDynamicTableBeforeNew);\n\n  /**\n   * @description\n   *\n   *  Método/URL que deve ser chamado antes da ação de exclusão\n   *\n   * Tanto o método como a API devem retornar um objeto com a definição de `PoPageDynamicTableBeforeRemove`.\n   *\n   * > A url será chamada via POST\n   *\n   * Caso o desenvolvedor queira que apareça alguma mensagem nessa ação ele pode criá-la na função chamada pela **beforeRemove**\n   * ou definir a mensagem no atributo `_messages` na resposta da API conforme definido\n   * em [Guia de implementação de APIs](https://po-ui.io/guides/api#successMessages)\n   *\n   */\n  beforeRemove?: string | ((id?: string, resource?: any) => PoPageDynamicTableBeforeRemove);\n\n  /**\n   * @description\n   *\n   *  Método/URL que deve ser chamado antes da ação de ir para o detalhe\n   *\n   * Tanto o método como a API devem retornar um objeto com a definição de `PoPageDynamicTableBeforeDetail`.\n   *\n   * > A url será chamada via POST\n   *\n   * Caso o desenvolvedor queira que apareça alguma mensagem nessa ação ele pode criá-la na função chamada pela **beforeDetail**\n   * ou definir a mensagem no atributo `_messages` na resposta da API conforme definido\n   * em [Guia de implementação de APIs](https://po-ui.io/guides/api#successMessages)\n   *\n   */\n  beforeDetail?: string | ((id?: string, resource?: any) => PoPageDynamicTableBeforeDetail);\n\n  /**\n   * @description\n   *\n   * Método/URL que deve ser chamado antes de executar o evento de exclusão em lote (removeAll).\n   *\n   * Tanto o método como a API receberão uma lista com as keys dos recursos que serão repassados para o\n   * `removeAll` para serem excluídos e devem retornar um objeto com a definição de\n   * `PoPageDynamicTableBeforeRemoveAll`.\n   *\n   * > A URL será chamada via POST.\n   *\n   * Caso o desenvolvedor queira que apareça alguma mensagem nessa ação ele pode criá-la na função chamada pela **beforeRemoveAll**\n   * ou definir a mensagem no atributo `_messages` na resposta da API conforme definido\n   * em [Guia de implementação de APIs](https://po-ui.io/guides/api#successMessages)\n   *\n   */\n  beforeRemoveAll?: string | ((resources?: Array<any>) => PoPageDynamicTableBeforeRemoveAll);\n}\n"]}