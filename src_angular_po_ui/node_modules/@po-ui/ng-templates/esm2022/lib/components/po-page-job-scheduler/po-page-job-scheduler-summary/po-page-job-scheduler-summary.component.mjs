import { Component, Input } from '@angular/core';
import { PoInfoOrientation } from '@po-ui/ng-components';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@po-ui/ng-components";
function PoPageJobSchedulerSummaryComponent_po_info_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-info", 2);
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-label", ctx_r0.literals.process)("p-orientation", ctx_r0.infoOrientation)("p-value", ctx_r0.value.processID);
} }
function PoPageJobSchedulerSummaryComponent_po_info_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-info", 2);
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-label", ctx_r1.literals.frequency)("p-orientation", ctx_r1.infoOrientation)("p-value", ctx_r1.frequencyValue);
} }
function PoPageJobSchedulerSummaryComponent_po_info_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-info", 2);
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-label", ctx_r2.literals.execution)("p-orientation", ctx_r2.infoOrientation)("p-value", ctx_r2.executionValue);
} }
function PoPageJobSchedulerSummaryComponent_po_widget_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "po-widget", 4);
    i0.ɵɵelement(1, "po-dynamic-view", 5);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-title", ctx_r3.literals.parameters);
    i0.ɵɵadvance();
    i0.ɵɵproperty("p-fields", ctx_r3.parameters)("p-value", ctx_r3.value.executionParameter);
} }
export class PoPageJobSchedulerSummaryComponent {
    datePipe;
    literals = {};
    parameters = [];
    value = {};
    noParameters = true;
    executionValue = '';
    firstExecutionValue = '';
    infoOrientation = PoInfoOrientation.Horizontal;
    periodicityValue = '';
    frequencyValue = '';
    rangeLimitHour = '';
    rangeLimitDay = '';
    recurrentValue = '';
    constructor(datePipe) {
        this.datePipe = datePipe;
    }
    ngOnInit() {
        const { periodicity, hour, dayOfMonth, daysOfWeek, recurrent, firstExecution, firstExecutionHour, frequency, rangeLimitHour, rangeLimitDay } = this.value;
        this.periodicityValue = this.getPeriodicityLabel(periodicity);
        if (frequency) {
            this.frequencyValue = this.getFrequencyValue(frequency, periodicity);
        }
        this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth, rangeLimitHour, rangeLimitDay);
        this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);
        this.recurrentValue = this.getRecurrentValue(recurrent);
    }
    getFrequencyValue(frequency, periodicity) {
        return frequency['value'] && frequency['type'] && periodicity !== 'single'
            ? `${frequency['value']} - ${frequency['type']}`
            : '';
    }
    getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth, rangeLimitHour, rangeLimitDay) {
        switch (periodicity) {
            case 'daily':
                return this.getHourLabel(hour, rangeLimitHour);
            case 'monthly':
                return this.getMonthlyLabelExecution(dayOfMonth, hour, rangeLimitHour, rangeLimitDay);
            case 'weekly':
                return this.getWeeklyLabelExecution(daysOfWeek, hour, rangeLimitHour);
            default:
                return this.literals.notReported;
        }
    }
    getFirstExecutionLabel(firstExecution, firstExecutionHour) {
        if (firstExecution) {
            const date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');
            return `${date} ${this.getHourLabel(firstExecutionHour)}`;
        }
        else {
            return this.literals.notReported;
        }
    }
    getHourLabel(hour, rangeLimitHour) {
        return `${rangeLimitHour ? this.literals.from : this.literals.at} ${hour || '00:00'} ${rangeLimitHour ? this.literals.to + ' ' + rangeLimitHour : ''}`;
    }
    getMonthlyLabelExecution(dayOfMonth, hour, rangeLimitHour, rangeLimitDay) {
        const hourLabel = this.getHourLabel(hour, rangeLimitHour);
        return `${rangeLimitDay ? this.literals.from : ''} ${dayOfMonth} ${rangeLimitDay ? this.literals.to : ''} ${rangeLimitDay ? rangeLimitDay : ''} ${hourLabel}`;
    }
    getPeriodicityLabel(periodicity) {
        switch (periodicity) {
            case 'daily':
                return this.literals.daily;
            case 'monthly':
                return this.literals.monthly;
            case 'weekly':
                return this.literals.weekly;
            default:
                return this.literals.single;
        }
    }
    getRecurrentValue(recurrent) {
        return recurrent ? this.literals.yes : this.literals.no;
    }
    getSorterWeekDays() {
        return {
            'sunday': 0,
            'monday': 1,
            'tuesday': 2,
            'wednesday': 3,
            'thursday': 4,
            'friday': 5,
            'saturday': 6
        };
    }
    getTranslateWeekDay(day) {
        const days = {
            Sunday: this.literals.sunday,
            Monday: this.literals.monday,
            Tuesday: this.literals.tuesday,
            Wednesday: this.literals.wednesday,
            Thursday: this.literals.thursday,
            Friday: this.literals.friday,
            Saturday: this.literals.saturday
        };
        return days[day] || '';
    }
    getWeekDaysLabel(days = []) {
        const weekDaysSorted = this.sortWeekDays(days);
        return weekDaysSorted.map(day => this.getTranslateWeekDay(day)).join(', ');
    }
    getWeeklyLabelExecution(daysOfWeek, hour, rangeLimitHour) {
        if (daysOfWeek && Array.isArray(daysOfWeek)) {
            return `${this.getWeekDaysLabel(daysOfWeek)} ${this.getHourLabel(hour, rangeLimitHour)}`;
        }
        else {
            return this.literals.notReported;
        }
    }
    sortWeekDays(days = []) {
        const sorterWeekDays = this.getSorterWeekDays();
        return days.sort((a, b) => {
            const currDay = a.toLowerCase();
            const nextDay = b.toLowerCase();
            return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;
        });
    }
    static ɵfac = function PoPageJobSchedulerSummaryComponent_Factory(t) { return new (t || PoPageJobSchedulerSummaryComponent)(i0.ɵɵdirectiveInject(i1.DatePipe)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoPageJobSchedulerSummaryComponent, selectors: [["po-page-job-scheduler-summary"]], inputs: { literals: [i0.ɵɵInputFlags.None, "p-literals", "literals"], parameters: [i0.ɵɵInputFlags.None, "p-parameters", "parameters"], value: [i0.ɵɵInputFlags.None, "p-value", "value"], noParameters: [i0.ɵɵInputFlags.None, "p-no-parameters", "noParameters"] }, decls: 8, vars: 13, consts: [[1, "po-md-12"], [3, "p-label", "p-orientation", "p-value", 4, "ngIf"], [3, "p-label", "p-orientation", "p-value"], ["class", "po-pt-1 po-pb-1 po-md-12", 3, "p-title", 4, "ngIf"], [1, "po-pt-1", "po-pb-1", "po-md-12", 3, "p-title"], [3, "p-fields", "p-value"]], template: function PoPageJobSchedulerSummaryComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, PoPageJobSchedulerSummaryComponent_po_info_1_Template, 1, 3, "po-info", 1);
            i0.ɵɵelement(2, "po-info", 2);
            i0.ɵɵtemplate(3, PoPageJobSchedulerSummaryComponent_po_info_3_Template, 1, 3, "po-info", 1)(4, PoPageJobSchedulerSummaryComponent_po_info_4_Template, 1, 3, "po-info", 1);
            i0.ɵɵelement(5, "po-info", 2)(6, "po-info", 2);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(7, PoPageJobSchedulerSummaryComponent_po_widget_7_Template, 2, 3, "po-widget", 3);
        } if (rf & 2) {
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", !ctx.noParameters);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-label", ctx.literals.periodicity)("p-orientation", ctx.infoOrientation)("p-value", ctx.periodicityValue);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.frequencyValue !== "");
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.value.periodicity !== "single");
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-label", ctx.literals.recurrent)("p-orientation", ctx.infoOrientation)("p-value", ctx.recurrentValue);
            i0.ɵɵadvance();
            i0.ɵɵproperty("p-label", ctx.literals.firstExecution)("p-orientation", ctx.infoOrientation)("p-value", ctx.firstExecutionValue);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.parameters && ctx.parameters.length);
        } }, dependencies: [i1.NgIf, i2.PoDynamicViewComponent, i2.PoInfoComponent, i2.PoWidgetComponent], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoPageJobSchedulerSummaryComponent, [{
        type: Component,
        args: [{ selector: 'po-page-job-scheduler-summary', template: "<div class=\"po-md-12\">\n  <po-info\n    *ngIf=\"!noParameters\"\n    [p-label]=\"literals.process\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"value.processID\"\n  >\n  </po-info>\n\n  <po-info [p-label]=\"literals.periodicity\" [p-orientation]=\"infoOrientation\" [p-value]=\"periodicityValue\"> </po-info>\n\n  <po-info\n    *ngIf=\"frequencyValue !== ''\"\n    [p-label]=\"literals.frequency\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"frequencyValue\"\n  >\n  </po-info>\n\n  <po-info\n    *ngIf=\"value.periodicity !== 'single'\"\n    [p-label]=\"literals.execution\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"executionValue\"\n  >\n  </po-info>\n\n  <po-info [p-label]=\"literals.recurrent\" [p-orientation]=\"infoOrientation\" [p-value]=\"recurrentValue\"> </po-info>\n\n  <po-info [p-label]=\"literals.firstExecution\" [p-orientation]=\"infoOrientation\" [p-value]=\"firstExecutionValue\">\n  </po-info>\n</div>\n\n<po-widget *ngIf=\"parameters && parameters.length\" class=\"po-pt-1 po-pb-1 po-md-12\" [p-title]=\"literals.parameters\">\n  <po-dynamic-view [p-fields]=\"parameters\" [p-value]=\"value.executionParameter\"> </po-dynamic-view>\n</po-widget>\n" }]
    }], () => [{ type: i1.DatePipe }], { literals: [{
            type: Input,
            args: ['p-literals']
        }], parameters: [{
            type: Input,
            args: ['p-parameters']
        }], value: [{
            type: Input,
            args: ['p-value']
        }], noParameters: [{
            type: Input,
            args: ['p-no-parameters']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoPageJobSchedulerSummaryComponent, { className: "PoPageJobSchedulerSummaryComponent", filePath: "lib/components/po-page-job-scheduler/po-page-job-scheduler-summary/po-page-job-scheduler-summary.component.ts", lineNumber: 12 }); })();
//# sourceMappingURL=data:application/json;base64,