import { Component, ContentChildren, ViewChild, ViewEncapsulation } from '@angular/core';
import { PoStepperStatus, poLocaleDefault } from '@po-ui/ng-components';
import { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';
import { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';
import { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';
import { PoJobSchedulerParametersTemplateDirective } from './po-page-job-scheduler-parameters';
import * as i0 from "@angular/core";
import * as i1 from "./po-page-job-scheduler-lookup.service";
import * as i2 from "@angular/router";
import * as i3 from "@po-ui/ng-components";
import * as i4 from "./po-page-job-scheduler.service";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
import * as i7 from "./po-page-job-scheduler-execution/po-page-job-scheduler-execution.component";
import * as i8 from "./po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component";
import * as i9 from "./po-page-job-scheduler-summary/po-page-job-scheduler-summary.component";
const _c0 = ["schedulerExecution"];
const _c1 = ["schedulerParameters"];
const _c2 = () => [];
function PoPageJobSchedulerComponent_po_page_job_scheduler_parameters_9_Template(rf, ctx) { if (rf & 1) {
    const _r7 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "po-page-job-scheduler-parameters", 10, 11);
    i0.ɵɵtwoWayListener("p-valueChange", function PoPageJobSchedulerComponent_po_page_job_scheduler_parameters_9_Template_po_page_job_scheduler_parameters_p_valueChange_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); i0.ɵɵtwoWayBindingSet(ctx_r6.model.executionParameter, $event) || (ctx_r6.model.executionParameter = $event); return i0.ɵɵresetView($event); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵproperty("hidden", ctx_r2.step !== ctx_r2.stepParameters)("p-literals", ctx_r2.literals)("p-parameters", ctx_r2.parameters || i0.ɵɵpureFunction0(4, _c2));
    i0.ɵɵtwoWayProperty("p-value", ctx_r2.model.executionParameter);
} }
function PoPageJobSchedulerComponent_po_page_job_scheduler_summary_10_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-page-job-scheduler-summary", 12);
} if (rf & 2) {
    const ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵproperty("p-no-parameters", !ctx_r3.parameters.length)("p-literals", ctx_r3.literals)("p-parameters", ctx_r3.parameters)("p-value", ctx_r3.publicValues);
} }
function PoPageJobSchedulerComponent_ng_container_11_ng_template_2_Template(rf, ctx) { }
function PoPageJobSchedulerComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 13);
    i0.ɵɵtemplate(2, PoPageJobSchedulerComponent_ng_container_11_ng_template_2_Template, 0, 0, "ng-template", 14);
    i0.ɵɵelementEnd();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const template_r8 = ctx.$implicit;
    const index_r9 = ctx.index;
    const ctx_r4 = i0.ɵɵnextContext();
    i0.ɵɵadvance();
    i0.ɵɵproperty("hidden", ctx_r4.step !== index_r9 + (ctx_r4._stepExecutionLast ? 1 : 2));
    i0.ɵɵadvance();
    i0.ɵɵproperty("ngTemplateOutlet", template_r8 == null ? null : template_r8.templateRef);
} }
/**
 * @docsExtends PoPageJobSchedulerBaseComponent
 *
 * @example
 *
 * <example name="po-page-job-scheduler-background-process" title="PO Page Job Scheduler - Background Process">
 *  <file name="sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.html"> </file>
 *  <file name="sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.ts"> </file>
 * </example>
 *
 */
export class PoPageJobSchedulerComponent extends PoPageJobSchedulerBaseComponent {
    poPageDynamicLookupService;
    activatedRoute;
    poDialogService;
    poNotification;
    poPageJobSchedulerService;
    schedulerExecution;
    schedulerParameters;
    parametersTemplate;
    isEdit = false;
    literals = {
        ...poPageJobSchedulerLiteralsDefault[poLocaleDefault]
    };
    publicValues;
    saveOperation;
    step = 1;
    parametersEmpty = true;
    stepParametersInitialized = false;
    steps = [];
    backPageAction = {
        label: this.literals.back,
        action: this.nextStepOperation.bind(this, 'back'),
        disabled: this.isDisabledBack.bind(this)
    };
    concludePageAction = {
        label: this.literals.conclude,
        action: this.confirmJobScheduler.bind(this)
    };
    nextPageAction = {
        label: this.literals.next,
        action: this.nextStepOperation.bind(this, 'next'),
        disabled: this.isDisabledAdvance.bind(this)
    };
    concludePageActions = [this.concludePageAction, this.backPageAction];
    nextPageActions = [this.nextPageAction, this.backPageAction];
    // eslint-disable-next-line @typescript-eslint/member-ordering
    jobSchedulerActions = [...this.nextPageActions];
    stepExecution = 1;
    stepParameters = 2;
    stepSummary = 3;
    _stepExecutionLast;
    constructor(poPageDynamicLookupService, activatedRoute, poDialogService, poNotification, poPageJobSchedulerService, languageService) {
        super(poPageJobSchedulerService);
        this.poPageDynamicLookupService = poPageDynamicLookupService;
        this.activatedRoute = activatedRoute;
        this.poDialogService = poDialogService;
        this.poNotification = poNotification;
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        const language = languageService.getShortLanguage();
        this.literals = {
            ...this.literals,
            ...poPageJobSchedulerLiteralsDefault[language]
        };
        this.backPageAction.label = this.literals.back;
        this.concludePageAction.label = this.literals.conclude;
        this.nextPageAction.label = this.literals.next;
    }
    get stepperOrientation() {
        return (this.stepperDefaultOrientation || (window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical'));
    }
    ngOnInit() {
        const paramId = this.activatedRoute.snapshot.params['id'];
        this.isEdit = !!paramId;
        this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });
        if (this.parameters.length) {
            this.parametersEmpty = false;
        }
        this.loadData(paramId);
    }
    ngAfterContentInit() {
        this.checkStepExecutionLast();
        this.getSteps();
    }
    changePageActionsBySteps(currentStep, nextStep) {
        const stepsLength = this.steps.length;
        if (nextStep === stepsLength) {
            this.jobSchedulerActions = [...this.concludePageActions];
        }
        else if (currentStep === stepsLength && nextStep < currentStep) {
            this.jobSchedulerActions = [...this.nextPageActions];
        }
    }
    nextStep(stepNumber) {
        const operation = stepNumber > this.step ? 'next' : 'back';
        // Previne o usuário pular etapas
        const jumpStep = (stepNumber - this.step) * (operation === 'back' ? -1 : 1);
        if (jumpStep > 1) {
            return;
        }
        if (!this.validateStepExecution()) {
            return;
        }
        if (operation === 'next' && !this.validateStepSchedulerParameters()) {
            return;
        }
        if (operation === 'next' && !this.validateStepTemplateParameters()) {
            return;
        }
        if (this.step === this.stepExecution) {
            this.setModelRecurrent();
        }
        // Busca os parâmetros do template
        this.setPropertiesFromTemplate();
        if (stepNumber === this.steps.length) {
            const model = JSON.parse(JSON.stringify(this.model));
            this.publicValues = this.hidesSecretValues(model);
        }
        this.steps[this.step - 1].status = operation === 'next' ? PoStepperStatus.Done : PoStepperStatus.Default;
        this.changePageActionsBySteps(this.step, stepNumber);
        this.step = stepNumber;
        // Caso já tenha iniciado a etapa de parametrização,
        // guarda essa informação para não precisar renderizar novamente
        this.stepParametersInitialized = this.stepParametersInitialized || stepNumber === this.stepParameters;
    }
    onChangeProcess(process) {
        if (process.existAPI && process.processId && this.parametersEmpty && !this.parametersTemplate.length) {
            this.getParametersByProcess(process.processId);
            if (!this.isEdit) {
                this.model.executionParameter = {};
            }
        }
    }
    checkStepExecutionLast() {
        if (!this.parametersTemplate.length) {
            this._stepExecutionLast = false;
            return;
        }
        this._stepExecutionLast = this.stepExecutionLast;
    }
    confirmJobScheduler() {
        const paramId = this.activatedRoute.snapshot.params['id'];
        const confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;
        this.poDialogService.confirm({
            title: this.literals.confirmation,
            message: confirmMessage,
            confirm: () => {
                const beforeSendModel = this.beforeSendAction ? this.beforeSendAction(this.model) : undefined;
                const model = { ...(beforeSendModel || this.model) };
                this.save(model, paramId);
            }
        });
    }
    emitSuccessMessage(msgSuccess, saveOperation) {
        saveOperation.subscribe({
            next: () => {
                this.success.emit();
                this.poNotification.success(msgSuccess);
                this.resetJobSchedulerForm();
            },
            error: e => this.error.emit(e)
        });
    }
    getParametersByProcess(process) {
        this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(parameters => {
            this.parameters = parameters;
        });
    }
    hidesSecretValues(model) {
        const hiddenSecretValue = '**********';
        this.parameters.forEach(parameter => {
            if (this.isSecretParameter(model, parameter)) {
                model.executionParameter[parameter.property] = hiddenSecretValue;
            }
        });
        return model;
    }
    getSteps() {
        const templateArray = [];
        this.parametersTemplate.toArray().forEach((value, index, array) => {
            templateArray.push({
                label: value.title || `${this.literals.parameterization} ${array.length > 1 ? index + 1 : ''}`
            });
        });
        let _steps = [];
        if (!this._stepExecutionLast) {
            _steps.push({ label: this.literals.scheduling });
        }
        if (!templateArray.length) {
            _steps.push({ label: this.literals.parameterization });
        }
        else {
            _steps = [..._steps, ...templateArray];
        }
        if (this._stepExecutionLast) {
            _steps.push({ label: this.literals.scheduling });
        }
        _steps.push({ label: this.literals.conclude });
        this.steps = _steps;
        this.stepSummary = this.steps.length;
        if (this._stepExecutionLast) {
            this.stepExecution = this.stepSummary - 1;
        }
    }
    getTemplateCurrent() {
        const indexTemplate = this.step - (this.stepExecutionLast ? 1 : 2);
        return this.parametersTemplate.toArray()[indexTemplate];
    }
    templateHasDisable() {
        const template = this.getTemplateCurrent();
        return !template?.disabledAdvance;
    }
    isDisabledAdvance() {
        if (this.step === this.stepExecution) {
            return this.schedulerExecution?.form?.invalid;
        }
        if (this.schedulerParameters) {
            return this.schedulerParameters?.form?.invalid;
        }
        const templateCurrent = this.getTemplateCurrent();
        if (templateCurrent) {
            return templateCurrent.disabledAdvance;
        }
        return false;
    }
    isDisabledBack() {
        return this.step === 1;
    }
    isSecretParameter(model, parameter) {
        return (model.executionParameter &&
            parameter.hasOwnProperty('secret') &&
            parameter['secret'] === true &&
            model.executionParameter.hasOwnProperty(parameter.property));
    }
    nextStepOperation(operation) {
        const stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;
        this.nextStep(stepNumber);
    }
    resetJobSchedulerForm() {
        this.schedulerExecution.form.reset();
        // radiogroup não estava atribuindo novo valor, fica vermelho sem o timetout.
        setTimeout(() => {
            this.model = new PoPageJobSchedulerInternal();
            this.step = 1;
            this.steps.forEach(step => {
                step.status = PoStepperStatus.Default;
            });
            this.jobSchedulerActions = [...this.nextPageActions];
        });
    }
    save(model, paramId) {
        const saveOperation = paramId
            ? this.poPageJobSchedulerService.updateResource(paramId, model)
            : this.poPageJobSchedulerService.createResource(model);
        const msgSuccess = paramId
            ? this.literals.saveNotificationSuccessUpdate
            : this.literals.saveNotificationSuccessSave;
        this.emitSuccessMessage(msgSuccess, saveOperation);
    }
    setModelRecurrent() {
        this.model.recurrent = this.model.periodicity === 'single' ? false : this.model.recurrent;
    }
    setPropertiesFromTemplate() {
        const templateCurrent = this.getTemplateCurrent();
        if (!templateCurrent) {
            return;
        }
        this.model = {
            ...this.model,
            executionParameter: { ...this.model.executionParameter, ...templateCurrent.executionParameter }
        };
    }
    validateStepExecution() {
        const stepCurrent = this.step;
        if (stepCurrent == this.stepExecution && this.schedulerExecution.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);
            return false;
        }
        return true;
    }
    validateStepSchedulerParameters() {
        if (this.step === this.stepExecution || this.step === this.stepSummary) {
            return true;
        }
        if (this.schedulerParameters && this.schedulerParameters.form && this.schedulerParameters.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);
            return false;
        }
        return true;
    }
    validateStepTemplateParameters() {
        if (this.step === this.stepExecution || this.step === this.stepSummary) {
            return true;
        }
        if (!this.parametersTemplate.length) {
            return true;
        }
        return this.templateHasDisable();
    }
    static ɵfac = function PoPageJobSchedulerComponent_Factory(t) { return new (t || PoPageJobSchedulerComponent)(i0.ɵɵdirectiveInject(i1.PoPageJobSchedulerLookupService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.PoDialogService), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i4.PoPageJobSchedulerService), i0.ɵɵdirectiveInject(i3.PoLanguageService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoPageJobSchedulerComponent, selectors: [["po-page-job-scheduler"]], contentQueries: function PoPageJobSchedulerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
            i0.ɵɵcontentQuery(dirIndex, PoJobSchedulerParametersTemplateDirective, 4);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.parametersTemplate = _t);
        } }, viewQuery: function PoPageJobSchedulerComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, 7);
            i0.ɵɵviewQuery(_c1, 5);
        } if (rf & 2) {
            let _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.schedulerExecution = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.schedulerParameters = _t.first);
        } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 12, vars: 17, consts: [[3, "p-actions", "p-breadcrumb", "p-title"], [1, "po-row"], ["p-sequential", "true", 3, "ngClass", "p-orientation", "p-step", "p-steps", "p-change-step"], [3, "ngClass"], ["formScheduler", "ngForm"], [1, "po-md-12", 3, "p-no-parameters", "p-no-custom-params-component", "hidden", "p-is-edit", "p-literals", "p-value", "p-change-process"], ["schedulerExecution", ""], ["class", "po-md-12", 3, "hidden", "p-literals", "p-parameters", "p-value", "p-valueChange", 4, "ngIf"], ["class", "po-md-12", 3, "p-no-parameters", "p-literals", "p-parameters", "p-value", 4, "ngIf"], [4, "ngFor", "ngForOf"], [1, "po-md-12", 3, "hidden", "p-literals", "p-parameters", "p-value", "p-valueChange"], ["schedulerParameters", ""], [1, "po-md-12", 3, "p-no-parameters", "p-literals", "p-parameters", "p-value"], [3, "hidden"], [3, "ngTemplateOutlet"]], template: function PoPageJobSchedulerComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "po-page-default", 0)(1, "div", 1)(2, "po-stepper", 2);
            i0.ɵɵlistener("p-change-step", function PoPageJobSchedulerComponent_Template_po_stepper_p_change_step_2_listener($event) { return ctx.nextStep($event); });
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(3, "po-container", 3)(4, "form", null, 4)(6, "div", 1)(7, "po-page-job-scheduler-execution", 5, 6);
            i0.ɵɵlistener("p-change-process", function PoPageJobSchedulerComponent_Template_po_page_job_scheduler_execution_p_change_process_7_listener($event) { return ctx.onChangeProcess($event); });
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(9, PoPageJobSchedulerComponent_po_page_job_scheduler_parameters_9_Template, 2, 5, "po-page-job-scheduler-parameters", 7)(10, PoPageJobSchedulerComponent_po_page_job_scheduler_summary_10_Template, 1, 4, "po-page-job-scheduler-summary", 8);
            i0.ɵɵelementEnd()();
            i0.ɵɵtemplate(11, PoPageJobSchedulerComponent_ng_container_11_Template, 3, 2, "ng-container", 9);
            i0.ɵɵelementEnd()()();
        } if (rf & 2) {
            i0.ɵɵproperty("p-actions", ctx.jobSchedulerActions)("p-breadcrumb", ctx.breadcrumb)("p-title", ctx.title);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngClass", ctx.stepperDefaultOrientation === "horizontal" ? "po-lg-12 po-xl-12" : "po-lg-3 po-xl-2")("p-orientation", ctx.stepperOrientation)("p-step", ctx.step)("p-steps", ctx.steps);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngClass", ctx.stepperDefaultOrientation === "horizontal" ? "po-lg-12 po-xl-12" : "po-lg-8 po-xl-6");
            i0.ɵɵadvance(4);
            i0.ɵɵproperty("p-no-parameters", ctx.parametersEmpty)("p-no-custom-params-component", !ctx.parametersTemplate.length)("hidden", ctx.step !== ctx.stepExecution)("p-is-edit", ctx.isEdit)("p-literals", ctx.literals)("p-value", ctx.model);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.stepParametersInitialized && !ctx.parametersTemplate.length);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngIf", ctx.step === ctx.stepSummary);
            i0.ɵɵadvance();
            i0.ɵɵproperty("ngForOf", ctx.parametersTemplate);
        } }, dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i5.NgTemplateOutlet, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i3.PoContainerComponent, i3.PoPageDefaultComponent, i3.PoStepperComponent, i7.PoPageJobSchedulerExecutionComponent, i8.PoPageJobSchedulerParametersComponent, i9.PoPageJobSchedulerSummaryComponent], styles: ["po-container .po-container{overflow-y:unset}\n"], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoPageJobSchedulerComponent, [{
        type: Component,
        args: [{ selector: 'po-page-job-scheduler', encapsulation: ViewEncapsulation.None, template: "<po-page-default [p-actions]=\"jobSchedulerActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <div class=\"po-row\">\n    <po-stepper\n      [ngClass]=\"stepperDefaultOrientation === 'horizontal' ? 'po-lg-12 po-xl-12' : 'po-lg-3 po-xl-2'\"\n      p-sequential=\"true\"\n      [p-orientation]=\"stepperOrientation\"\n      [p-step]=\"step\"\n      [p-steps]=\"steps\"\n      (p-change-step)=\"nextStep($event)\"\n    >\n    </po-stepper>\n\n    <po-container [ngClass]=\"stepperDefaultOrientation === 'horizontal' ? 'po-lg-12 po-xl-12' : 'po-lg-8 po-xl-6'\">\n      <form #formScheduler=\"ngForm\">\n        <div class=\"po-row\">\n          <po-page-job-scheduler-execution\n            [p-no-parameters]=\"parametersEmpty\"\n            [p-no-custom-params-component]=\"!parametersTemplate.length\"\n            [hidden]=\"step !== stepExecution\"\n            #schedulerExecution\n            class=\"po-md-12\"\n            [p-is-edit]=\"isEdit\"\n            [p-literals]=\"literals\"\n            [p-value]=\"model\"\n            (p-change-process)=\"onChangeProcess($event)\"\n          >\n          </po-page-job-scheduler-execution>\n\n          <po-page-job-scheduler-parameters\n            *ngIf=\"stepParametersInitialized && !parametersTemplate.length\"\n            [hidden]=\"step !== stepParameters\"\n            #schedulerParameters\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters || []\"\n            [(p-value)]=\"model.executionParameter\"\n          >\n          </po-page-job-scheduler-parameters>\n\n          <po-page-job-scheduler-summary\n            [p-no-parameters]=\"!parameters.length\"\n            *ngIf=\"step === stepSummary\"\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters\"\n            [p-value]=\"publicValues\"\n          >\n          </po-page-job-scheduler-summary>\n        </div>\n      </form>\n\n      <ng-container *ngFor=\"let template of parametersTemplate; index as index\">\n        <div [hidden]=\"step !== index + (_stepExecutionLast ? 1 : 2)\">\n          <ng-template [ngTemplateOutlet]=\"template?.templateRef\"></ng-template>\n        </div>\n      </ng-container>\n    </po-container>\n  </div>\n</po-page-default>\n", styles: ["po-container .po-container{overflow-y:unset}\n"] }]
    }], () => [{ type: i1.PoPageJobSchedulerLookupService }, { type: i2.ActivatedRoute }, { type: i3.PoDialogService }, { type: i3.PoNotificationService }, { type: i4.PoPageJobSchedulerService }, { type: i3.PoLanguageService }], { schedulerExecution: [{
            type: ViewChild,
            args: ['schedulerExecution', { static: true }]
        }], schedulerParameters: [{
            type: ViewChild,
            args: ['schedulerParameters']
        }], parametersTemplate: [{
            type: ContentChildren,
            args: [PoJobSchedulerParametersTemplateDirective]
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(PoPageJobSchedulerComponent, { className: "PoPageJobSchedulerComponent", filePath: "lib/components/po-page-job-scheduler/po-page-job-scheduler.component.ts", lineNumber: 57 }); })();
//# sourceMappingURL=data:application/json;base64,