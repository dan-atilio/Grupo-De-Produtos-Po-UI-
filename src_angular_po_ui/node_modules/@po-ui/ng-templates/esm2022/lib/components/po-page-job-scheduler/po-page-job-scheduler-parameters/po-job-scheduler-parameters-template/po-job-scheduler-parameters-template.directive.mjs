import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @usedBy PoPageJobScheduler
 *
 * @description
 *
 * Esta diretiva permite personalizar o conteúdo da uma ou várias etapa(s) de parametrização do componente de PoPageJobScheduler.
 *
 * Para repassar as alterações realizadas no componente customizado ao model do PoPageJobScheduler, deve
 * ser atualizado os valores através da propriedade p-execution-parameter. Dessa forma as alterações serão adicionadas ao
 * atributo executionParameter do objeto de envio a Api.
 * É possível também controlar a permissão de avançar, fazendo uso da propriedade p-disable-advance.
 *
 * ```
 * ...
 * <po-page-job-scheduler [p-service-api]="serviceApi">
 *     <ng-template p-job-scheduler-parameters-template
 *      [p-execution-parameter]="executionParameter"
 *      [p-disable-advance]="disableAdvance"
 *      p-label-step="titleStep"
 *     >
 *       ...
 *     </ng-template>
 *     <ng-template p-job-scheduler-parameters-template
 *      [p-execution-parameter]="executionParameter"
 *      [p-disable-advance]="disableAdvance"
 *      p-label-step="titleStep"
 *     >
 *       ...
 *     </ng-template>
 * </po-page-job-scheduler>
 * ...
 * ```
 *
 */
export class PoJobSchedulerParametersTemplateDirective {
    templateRef;
    /**
     * @optional
     *
     * @description
     *
     * Objeto que deve conter as alterações feitas pelo componente de template que serão repassadas dentro do atributo
     * `executionParameter` para envio na api.
     *
     * > O componente deve manter essa propriedade atualizada. É chamada após o avançar da etapa de parametrização.
     */
    executionParameter;
    /**
     * @optional
     *
     * @default false
     *
     * @description
     *
     * Determina se deve desabilitar o botão de avançar para a próxima etapa
     *
     * > Pode ser utilizado para validar campos antes de avançar.
     */
    disabledAdvance = false;
    /**
     * @optional
     *
     * @description
     *
     * Determina o label do step
     */
    title;
    // Necessário manter templateRef para o funcionamento do row template.
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ɵfac = function PoJobSchedulerParametersTemplateDirective_Factory(t) { return new (t || PoJobSchedulerParametersTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef)); };
    static ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoJobSchedulerParametersTemplateDirective, selectors: [["", "p-job-scheduler-parameters-template", ""]], inputs: { executionParameter: [i0.ɵɵInputFlags.None, "p-execution-parameter", "executionParameter"], disabledAdvance: [i0.ɵɵInputFlags.None, "p-disable-advance", "disabledAdvance"], title: [i0.ɵɵInputFlags.None, "p-label-step", "title"] } });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoJobSchedulerParametersTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[p-job-scheduler-parameters-template]'
            }]
    }], () => [{ type: i0.TemplateRef }], { executionParameter: [{
            type: Input,
            args: ['p-execution-parameter']
        }], disabledAdvance: [{
            type: Input,
            args: ['p-disable-advance']
        }], title: [{
            type: Input,
            args: ['p-label-step']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzLXRlbXBsYXRlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RlbXBsYXRlcy9zcmMvbGliL2NvbXBvbmVudHMvcG8tcGFnZS1qb2Itc2NoZWR1bGVyL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1wYXJhbWV0ZXJzL3BvLWpvYi1zY2hlZHVsZXItcGFyYW1ldGVycy10ZW1wbGF0ZS9wby1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMtdGVtcGxhdGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDOztBQUU5RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUNHO0FBSUgsTUFBTSxPQUFPLHlDQUF5QztJQW9DakM7SUFuQ25COzs7Ozs7Ozs7T0FTRztJQUM2QixrQkFBa0IsQ0FBUztJQUUzRDs7Ozs7Ozs7OztPQVVHO0lBQ3lCLGVBQWUsR0FBWSxLQUFLLENBQUM7SUFFN0Q7Ozs7OztPQU1HO0lBQ29CLEtBQUssQ0FBUztJQUVyQyxzRUFBc0U7SUFDdEUsWUFBbUIsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO0lBQUcsQ0FBQzttR0FwQ3pDLHlDQUF5Qzs2REFBekMseUNBQXlDOztpRkFBekMseUNBQXlDO2NBSHJELFNBQVM7ZUFBQztnQkFDVCxRQUFRLEVBQUUsdUNBQXVDO2FBQ2xEOzRDQVlpQyxrQkFBa0I7a0JBQWpELEtBQUs7bUJBQUMsdUJBQXVCO1lBYUYsZUFBZTtrQkFBMUMsS0FBSzttQkFBQyxtQkFBbUI7WUFTSCxLQUFLO2tCQUEzQixLQUFLO21CQUFDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEB1c2VkQnkgUG9QYWdlSm9iU2NoZWR1bGVyXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogRXN0YSBkaXJldGl2YSBwZXJtaXRlIHBlcnNvbmFsaXphciBvIGNvbnRlw7pkbyBkYSB1bWEgb3UgdsOhcmlhcyBldGFwYShzKSBkZSBwYXJhbWV0cml6YcOnw6NvIGRvIGNvbXBvbmVudGUgZGUgUG9QYWdlSm9iU2NoZWR1bGVyLlxuICpcbiAqIFBhcmEgcmVwYXNzYXIgYXMgYWx0ZXJhw6fDtWVzIHJlYWxpemFkYXMgbm8gY29tcG9uZW50ZSBjdXN0b21pemFkbyBhbyBtb2RlbCBkbyBQb1BhZ2VKb2JTY2hlZHVsZXIsIGRldmVcbiAqIHNlciBhdHVhbGl6YWRvIG9zIHZhbG9yZXMgYXRyYXbDqXMgZGEgcHJvcHJpZWRhZGUgcC1leGVjdXRpb24tcGFyYW1ldGVyLiBEZXNzYSBmb3JtYSBhcyBhbHRlcmHDp8O1ZXMgc2Vyw6NvIGFkaWNpb25hZGFzIGFvXG4gKiBhdHJpYnV0byBleGVjdXRpb25QYXJhbWV0ZXIgZG8gb2JqZXRvIGRlIGVudmlvIGEgQXBpLlxuICogw4kgcG9zc8OtdmVsIHRhbWLDqW0gY29udHJvbGFyIGEgcGVybWlzc8OjbyBkZSBhdmFuw6dhciwgZmF6ZW5kbyB1c28gZGEgcHJvcHJpZWRhZGUgcC1kaXNhYmxlLWFkdmFuY2UuXG4gKlxuICogYGBgXG4gKiAuLi5cbiAqIDxwby1wYWdlLWpvYi1zY2hlZHVsZXIgW3Atc2VydmljZS1hcGldPVwic2VydmljZUFwaVwiPlxuICogICAgIDxuZy10ZW1wbGF0ZSBwLWpvYi1zY2hlZHVsZXItcGFyYW1ldGVycy10ZW1wbGF0ZVxuICogICAgICBbcC1leGVjdXRpb24tcGFyYW1ldGVyXT1cImV4ZWN1dGlvblBhcmFtZXRlclwiXG4gKiAgICAgIFtwLWRpc2FibGUtYWR2YW5jZV09XCJkaXNhYmxlQWR2YW5jZVwiXG4gKiAgICAgIHAtbGFiZWwtc3RlcD1cInRpdGxlU3RlcFwiXG4gKiAgICAgPlxuICogICAgICAgLi4uXG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICA8bmctdGVtcGxhdGUgcC1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMtdGVtcGxhdGVcbiAqICAgICAgW3AtZXhlY3V0aW9uLXBhcmFtZXRlcl09XCJleGVjdXRpb25QYXJhbWV0ZXJcIlxuICogICAgICBbcC1kaXNhYmxlLWFkdmFuY2VdPVwiZGlzYWJsZUFkdmFuY2VcIlxuICogICAgICBwLWxhYmVsLXN0ZXA9XCJ0aXRsZVN0ZXBcIlxuICogICAgID5cbiAqICAgICAgIC4uLlxuICogICAgIDwvbmctdGVtcGxhdGU+XG4gKiA8L3BvLXBhZ2Utam9iLXNjaGVkdWxlcj5cbiAqIC4uLlxuICogYGBgXG4gKlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbcC1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMtdGVtcGxhdGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0pvYlNjaGVkdWxlclBhcmFtZXRlcnNUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE9iamV0byBxdWUgZGV2ZSBjb250ZXIgYXMgYWx0ZXJhw6fDtWVzIGZlaXRhcyBwZWxvIGNvbXBvbmVudGUgZGUgdGVtcGxhdGUgcXVlIHNlcsOjbyByZXBhc3NhZGFzIGRlbnRybyBkbyBhdHJpYnV0b1xuICAgKiBgZXhlY3V0aW9uUGFyYW1ldGVyYCBwYXJhIGVudmlvIG5hIGFwaS5cbiAgICpcbiAgICogPiBPIGNvbXBvbmVudGUgZGV2ZSBtYW50ZXIgZXNzYSBwcm9wcmllZGFkZSBhdHVhbGl6YWRhLiDDiSBjaGFtYWRhIGFww7NzIG8gYXZhbsOnYXIgZGEgZXRhcGEgZGUgcGFyYW1ldHJpemHDp8Ojby5cbiAgICovXG4gIEBJbnB1dCgncC1leGVjdXRpb24tcGFyYW1ldGVyJykgZXhlY3V0aW9uUGFyYW1ldGVyOiBPYmplY3Q7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGV0ZXJtaW5hIHNlIGRldmUgZGVzYWJpbGl0YXIgbyBib3TDo28gZGUgYXZhbsOnYXIgcGFyYSBhIHByw7N4aW1hIGV0YXBhXG4gICAqXG4gICAqID4gUG9kZSBzZXIgdXRpbGl6YWRvIHBhcmEgdmFsaWRhciBjYW1wb3MgYW50ZXMgZGUgYXZhbsOnYXIuXG4gICAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZS1hZHZhbmNlJykgZGlzYWJsZWRBZHZhbmNlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGV0ZXJtaW5hIG8gbGFiZWwgZG8gc3RlcFxuICAgKi9cbiAgQElucHV0KCdwLWxhYmVsLXN0ZXAnKSB0aXRsZTogc3RyaW5nO1xuXG4gIC8vIE5lY2Vzc8OhcmlvIG1hbnRlciB0ZW1wbGF0ZVJlZiBwYXJhIG8gZnVuY2lvbmFtZW50byBkbyByb3cgdGVtcGxhdGUuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pikge31cbn1cbiJdfQ==